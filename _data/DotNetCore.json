{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core 2.2 will reach End of Life on December 23, 2019","PublishedOn":"2019-12-05T19:55:57+00:00","CommentsCount":2,"FacebookCount":0,"Summary":".NET Core 2.2 was released on December 4, 2018. As a non-LTS (&#8220;Current&#8221;) release, it is supported for three months after the next release. .NET Core 3.0 was released on September 23, 2019....","Href":"https://devblogs.microsoft.com/dotnet/net-core-2-2-will-reach-end-of-life-on-december-23-2019/","RawContent":null},{"Title":"Updates to .NET Core Windows Forms designer in Visual Studio 16.5 Preview 1","PublishedOn":"2019-12-05T18:56:40+00:00","CommentsCount":23,"FacebookCount":0,"Summary":"We are happy to announce the new preview version of the .NET Core Windows Forms designer, which is available with the Visual Studio 16.5 Preview 1.\nThe big news is that the designer is now part of...","Href":"https://devblogs.microsoft.com/dotnet/updates-to-net-core-windows-forms-designer-in-visual-studio-16-5-preview-1/","RawContent":null},{"Title":"Announcing Entity Framework Core 3.1 and Entity Framework 6.4","PublishedOn":"2019-12-03T20:32:00+00:00","CommentsCount":7,"FacebookCount":0,"Summary":"Announcing Entity Framework Core 3.1 and Entity Framework 6.4\nWe are excited to announce the general availability of EF Core 3.1 and EF 6.4 on nuget.org.\nThe final versions of .NET Core 3.1 and...","Href":"https://devblogs.microsoft.com/dotnet/announcing-entity-framework-core-3-1-and-entity-framework-6-4/","RawContent":null},{"Title":"Announcing .NET Core 3.1","PublishedOn":"2019-12-03T17:32:24+00:00","CommentsCount":58,"FacebookCount":0,"Summary":"Announcing .NET Core 3.1\nWe’re excited to announce the release of .NET Core 3.1. It&#8217;s really just a small set of fixes and refinements over .NET Core 3.0, which we released just over two months...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/","RawContent":null},{"Title":"Embracing nullable reference types","PublishedOn":"2019-11-27T20:55:06+00:00","CommentsCount":27,"FacebookCount":0,"Summary":"Probably the most impactful feature of C# 8.0 is Nullable Reference Types (NRTs). It lets you make the flow of nulls explicit in your code, and warns you when you don&#8217;t act according to...","Href":"https://devblogs.microsoft.com/dotnet/embracing-nullable-reference-types/","RawContent":null},{"Title":".NET Framework November 2019 Preview of Quality Rollup","PublishedOn":"2019-11-20T05:28:19+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the November 2019 Preview of Quality Rollup\nQuality and Reliability\nThis release contains the following quality and reliability improvements for .NET Framework for Windows 8.1,...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core November 2019 Updates – 2.1.14, 2.2.8, and 3.0.1","PublishedOn":"2019-11-19T20:11:16+00:00","CommentsCount":5,"FacebookCount":0,"Summary":"Today, we are releasing the .NET Core November 2019 Update. These updates only contain non-security fixes. See the individual release notes for details on updated packages.\nNOTE: If you are a Visual...","Href":"https://devblogs.microsoft.com/dotnet/net-core-november-2019/","RawContent":null},{"Title":"Announcing .NET Core 3.1 Preview 3","PublishedOn":"2019-11-14T17:16:36+00:00","CommentsCount":17,"FacebookCount":0,"Summary":"Today, we&#8217;re announcing .NET Core 3.1 Preview 3. .NET Core 3.1 is a small and short release focused on key improvements in Blazor and Windows desktop, the two big additions in .NET Core 3.0.. It...","Href":"https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/","RawContent":null},{"Title":".NET Framework November 13, 2019, Update for .NET Framework 4.8","PublishedOn":"2019-11-14T06:16:28+00:00","CommentsCount":2,"FacebookCount":0,"Summary":"Today, we released an update for .NET Framework 4.8 to Microsoft Update Catalog.\nQuality and Reliability\nThis release contains the following reliability improvement.\nCLR1\n\nAddresses an issue where...","Href":"https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/","RawContent":null},{"Title":"ML.NET Model Builder Updates","PublishedOn":"2019-11-12T20:51:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"ML.NET is a cross-platform, machine learning framework for .NET developers, and Model Builder is the UI tooling in Visual Studio that uses Automated Machine Learning (AutoML) to easily allow you to...","Href":"https://devblogs.microsoft.com/dotnet/model-builder-updates-mlnet/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"10879854793","Type":"IssuesEvent","CreatedAt":"2019-11-17T05:53:48","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Opened issue \"Typos in CLA bot profile\" (#155) at dotnet/foundation","RelatedBody":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)"},{"Id":"10878192098","Type":"PullRequestEvent","CreatedAt":"2019-11-16T15:59:12","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Opened pull request \"Fix broken links\" (#154) at dotnet/foundation","RelatedBody":""},{"Id":"10864162405","Type":"PullRequestEvent","CreatedAt":"2019-11-14T16:22:28","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Opened pull request \"Fix broken links\" (#153) at dotnet/foundation","RelatedBody":""},{"Id":"10863953091","Type":"PullRequestEvent","CreatedAt":"2019-11-14T16:00:24","Actor":"NextTurn","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Opened pull request \"Fix broken links\" (#152) at dotnet/foundation","RelatedBody":""},{"Id":"10823146740","Type":"PullRequestEvent","CreatedAt":"2019-11-08T23:32:03","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Merged pull request \"Update RxUI license to reflect repo\" (#151) at dotnet/foundation","RelatedBody":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68"},{"Id":"10822052136","Type":"PullRequestEvent","CreatedAt":"2019-11-08T20:13:07","Actor":"onovotny","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Opened pull request \"Update RxUI license to reflect repo\" (#151) at dotnet/foundation","RelatedBody":""},{"Id":"10806560653","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:43:05","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Merged pull request \"(GH-111) Update Source Link location\" (#147) at dotnet/foundation","RelatedBody":""},{"Id":"10806557022","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:42:14","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Merged pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10806555226","Type":"PullRequestEvent","CreatedAt":"2019-11-07T05:41:48","Actor":"jongalloway","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Merged pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""},{"Id":"10537155256","Type":"PullRequestEvent","CreatedAt":"2019-10-01T20:30:21","Actor":"gep13","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Opened pull request \"Add new Cake Maintainer\" (#150) at dotnet/foundation","RelatedBody":""},{"Id":"10530380699","Type":"PullRequestEvent","CreatedAt":"2019-10-01T05:27:58","Actor":"JimBobSquarePants","Repository":"dotnet/foundation","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Opened pull request \"Add ImageSharp\" (#149) at dotnet/foundation","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"11003471296","Type":"IssuesEvent","CreatedAt":"2019-12-03T20:36:30","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Opened issue \".NET Core `latest` Docker tags updated to 3.1\" (#143) at dotnet/announcements","RelatedBody":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`."},{"Id":"11002231262","Type":"IssuesEvent","CreatedAt":"2019-12-03T18:00:28","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Opened issue \".NET Core 3.1.0\" (#142) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10873564628","Type":"IssuesEvent","CreatedAt":"2019-11-15T16:51:28","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Opened issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141) at dotnet/announcements","RelatedBody":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`."},{"Id":"10873546016","Type":"IssuesEvent","CreatedAt":"2019-11-15T16:49:05","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Opened issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140) at dotnet/announcements","RelatedBody":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`."},{"Id":"10864634140","Type":"IssuesEvent","CreatedAt":"2019-11-14T17:15:09","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 3\" (#139) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n"},{"Id":"10862597044","Type":"IssuesEvent","CreatedAt":"2019-11-14T13:37:29","Actor":"TaraOverfield","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Opened issue \"November 2019 .NET Updates\" (#138) at dotnet/announcements","RelatedBody":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)"},{"Id":"10856924757","Type":"IssuesEvent","CreatedAt":"2019-11-13T21:41:07","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Opened issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137) at dotnet/announcements","RelatedBody":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Framework Samples\r\n\r\n"},{"Id":"10847180825","Type":"IssuesEvent","CreatedAt":"2019-11-12T22:05:52","Actor":"MichaelSimons","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Opened issue \".NET Core Docker images support for Windows Server, version 1909\" (#136) at dotnet/announcements","RelatedBody":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n"},{"Id":"10822538366","Type":"IssuesEvent","CreatedAt":"2019-11-08T21:33:13","Actor":"CESARDELATORRE","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Opened issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135) at dotnet/announcements","RelatedBody":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n**- New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n**- Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n**- Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n**- PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n**- ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n"},{"Id":"10780907118","Type":"IssuesEvent","CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Opened issue \".NET Core 3.1.0 Preview 2\" (#134) at dotnet/announcements","RelatedBody":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/XXXX has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/XXXX, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues"},{"Id":"10748742804","Type":"IssuesEvent","CreatedAt":"2019-10-30T15:14:54","Actor":"jaredpar","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Opened issue \"Repository Consolidation Timeline\" (#133) at dotnet/announcements","RelatedBody":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository."},{"Id":"10738283611","Type":"IssuesEvent","CreatedAt":"2019-10-29T14:32:57","Actor":"mthalman","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Opened issue \"Release of Alpine 3.10 Docker images\" (#132) at dotnet/announcements","RelatedBody":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"11031772168","Type":"PullRequestEvent","CreatedAt":"2019-12-06T18:33:17","Actor":"jashook","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27926","RelatedDescription":"Closed pull request \"Do not fast tail call with callee stack space.\" (#27926) at dotnet/coreclr","RelatedBody":"This change is pessimistic, but it will guarentee correctness.\r\nWe specifically know that LowerFastTailCall fundamentally is broken.\r\nThis has been fixed in https://github.com/dotnet/coreclr/pull/26255.\r\nThis change exists only to make sure that we do not have SBC in older releases.\r\n\r\nNote that this changes behavoir, there are valid fast tail calls which could have avoided StackOverFlow exceptions.\r\n\r\nThese tail calls must have not had overlapping slot locations, for a flawed definition of slot location. Which simply means they got lucky when generating code."},{"Id":"11027278500","Type":"IssuesEvent","CreatedAt":"2019-12-06T09:06:04","Actor":"VladislavMorozov","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/27895","RelatedDescription":"Closed issue \"System.Security.Cryptography. ECDsaOpenSsl throw NullReferenceException after using construction.\" (#27895) at dotnet/coreclr","RelatedBody":"# Issue Title\r\n\r\nECDsaOpenSsl from System.Security.Cryptography throw NullReferenceException after using construction.\r\n\r\nhttps://github.com/dotnet/corefx/issues/42631\r\n\r\n# General\r\n\r\nI have .NET Core 2.2 and Linux container in docker. When I create JWT token with ES256 algorithm `JwtSecurityTokenHandler.CreateEncodedJwt()` throw exception.\r\n\r\n![token](https://user-images.githubusercontent.com/31768904/68990973-a8d04b00-086a-11ea-9802-bde4c34ac303.png)\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp2.2</TargetFramework>\r\n    <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.VisualStudio.Azure.Containers.Tools.Targets\" Version=\"1.9.5\" />\r\n    <PackageReference Include=\"Portable.BouncyCastle\" Version=\"1.8.5.2\" />\r\n    <PackageReference Include=\"System.IdentityModel.Tokens.Jwt\" Version=\"5.6.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n```\r\nFROM mcr.microsoft.com/dotnet/core/runtime:2.2-stretch-slim AS base\r\nWORKDIR /app\r\n\r\nFROM mcr.microsoft.com/dotnet/core/sdk:2.2-stretch AS build\r\nWORKDIR /src\r\nCOPY [\"AppleMusic/AppleMusic.csproj\", \"AppleMusic/\"]\r\nRUN dotnet restore \"AppleMusic/AppleMusic.csproj\"\r\nCOPY . .\r\nWORKDIR \"/src/AppleMusic\"\r\nRUN dotnet build \"AppleMusic.csproj\" -c Release -o /app/build\r\n\r\nFROM build AS publish\r\nRUN dotnet publish \"AppleMusic.csproj\" -c Release -o /app/publish\r\n\r\nFROM base AS final\r\nWORKDIR /app\r\nCOPY --from=publish /app/publish .\r\nENTRYPOINT [\"dotnet\", \"AppleMusic.dll\"]\r\n```\r\n\r\n\r\n```\r\nusing System;\r\nusing System.IdentityModel.Tokens.Jwt;\r\nusing System.Security.Claims;\r\nusing System.Security.Cryptography;\r\nusing Microsoft.IdentityModel.Tokens;\r\nusing Org.BouncyCastle.Crypto.Parameters;\r\nusing Org.BouncyCastle.Security;\r\n\r\nnamespace AppleMusic\r\n{\r\n\tclass Program\r\n\t{\r\n\t\tstatic void Main(string[] args)\r\n\t\t{\r\n\t\t\tvar key = \"\";\r\n\t\t\t\r\n\t\t\tvar iat = (int)DateTime.UtcNow.Subtract(new DateTime(1970, 1, 1)).TotalSeconds;\r\n\t\t\tvar exp = (int)DateTime.UtcNow.AddMonths(5).Subtract(new DateTime(1970, 1, 1)).TotalSeconds;\r\n\r\n\t\t\tvar tokenHandler = new JwtSecurityTokenHandler();\r\n\r\n\t\t\tvar tokenDescriptor = new SecurityTokenDescriptor\r\n\t\t\t{\r\n\t\t\t\tSubject = new ClaimsIdentity(new Claim[]\r\n\t\t\t\t{\r\n\t\t\t\t\tnew Claim(\"iat\", iat.ToString()),\r\n\t\t\t\t\tnew Claim(\"exp\", exp.ToString()),\r\n\t\t\t\t}),\r\n\t\t\t\tIssuer = \"\"\r\n\t\t\t};\r\n\r\n\t\t\tfor (var i = 0; i < 100; i++)\r\n\t\t\t{\r\n\t\t\t\tusing (var algorithm = GetEllipticCurveAlgorithm(key)) // this code doesn't work\r\n\t\t\t\t{\r\n\t\t\t\t\ttokenDescriptor.SigningCredentials = new SigningCredentials(new ECDsaSecurityKey(algorithm)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tKeyId = \"\"\r\n\t\t\t\t\t}, SecurityAlgorithms.EcdsaSha256);\r\n\t\t\t\t\tvar token = tokenHandler.CreateEncodedJwt(tokenDescriptor);\r\n\t\t\t\t\tConsole.WriteLine(token);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate static ECDsa GetEllipticCurveAlgorithm(string privateKey)\r\n\t\t{\r\n\t\t\tvar keyParams = (ECPrivateKeyParameters)PrivateKeyFactory\r\n\t\t\t\t.CreateKey(Convert.FromBase64String(privateKey));\r\n\r\n\t\t\tvar q = keyParams.Parameters.G.Multiply(keyParams.D).Normalize();\r\n\r\n\t\t\treturn ECDsa.Create(new ECParameters\r\n\t\t\t{\r\n\t\t\t\tCurve = ECCurve.CreateFromValue(keyParams.PublicKeyParamSet.Id),\r\n\t\t\t\tD = keyParams.D.ToByteArrayUnsigned(),\r\n\t\t\t\tQ =\r\n\t\t\t\t{\r\n\t\t\t\t\tX = q.XCoord.GetEncoded(),\r\n\t\t\t\t\tY = q.YCoord.GetEncoded()\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n"},{"Id":"11024515015","Type":"PullRequestEvent","CreatedAt":"2019-12-05T23:18:06","Actor":"mmitche","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/27965","RelatedDescription":"Merged pull request \"[release/3.1] Use 3.1.100 SDK in 3.1 build\" (#27965) at dotnet/coreclr","RelatedBody":"To ensure that the 3.1 stack uses a consistent SDK.  The upper portions of the stack require the 3.1 SDK because for TFM purposes."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"11032199621","Type":"PullRequestEvent","CreatedAt":"2019-12-06T19:35:50","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13147","RelatedDescription":"Opened pull request \"[release/3.0.1xx] Change to name/value variables and remove unused\" (#13147) at dotnet/cli","RelatedBody":"- Remove old legacy PB_ values that are no longer used\r\n- Change to the name, value pair approach for variables.\r\nThis will allow internal builds to add variable groups required for accessing internal runtimes"},{"Id":"11031590186","Type":"PullRequestEvent","CreatedAt":"2019-12-06T18:06:22","Actor":"wli3","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13142","RelatedDescription":"Merged pull request \"Update branding to \"preview\"\" (#13142) at dotnet/cli","RelatedBody":""},{"Id":"11025381221","Type":"PullRequestEvent","CreatedAt":"2019-12-06T02:25:33","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13146","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update dependencies from dotnet/templating\" (#13146) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191205.2\r\n- **Date Produced**: 12/6/2019 1:04 AM\r\n- **Commit**: 13abe7e2749d95337e8d72efdc5b71611815fd43\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.1-servicing.19605.2\r\n\r\n[marker]: <> (End:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n\r\n"},{"Id":"11025358350","Type":"PullRequestEvent","CreatedAt":"2019-12-06T02:20:31","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/13145","RelatedDescription":"Merged pull request \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13145) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191205.2\r\n- **Date Produced**: 12/6/2019 1:04 AM\r\n- **Commit**: 13abe7e2749d95337e8d72efdc5b71611815fd43\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.1-servicing.19605.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n"},{"Id":"11025200905","Type":"PullRequestEvent","CreatedAt":"2019-12-06T01:45:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13146","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update dependencies from dotnet/templating\" (#13146) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191205.2\r\n- **Date Produced**: 12/6/2019 1:04 AM\r\n- **Commit**: 13abe7e2749d95337e8d72efdc5b71611815fd43\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.1-servicing.19605.2\r\n\r\n[marker]: <> (End:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n\r\n"},{"Id":"11025200868","Type":"PullRequestEvent","CreatedAt":"2019-12-06T01:45:13","Actor":"dotnet-maestro[bot]","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13145","RelatedDescription":"Opened pull request \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13145) at dotnet/cli","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191205.2\r\n- **Date Produced**: 12/6/2019 1:04 AM\r\n- **Commit**: 13abe7e2749d95337e8d72efdc5b71611815fd43\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.1-servicing.19605.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n"},{"Id":"11023541306","Type":"PullRequestEvent","CreatedAt":"2019-12-05T20:49:39","Actor":"mmitche","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/13144","RelatedDescription":"Opened pull request \"[release/3.1.2xx] Update to 3.1.100 rtm sdk\" (#13144) at dotnet/cli","RelatedBody":""}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"10965065265","Type":"PullRequestEvent","CreatedAt":"2019-11-28T01:14:42","Actor":"dotnet-maestro[bot]","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/1660","RelatedDescription":"Merged pull request \"[release/3.0] Update dependencies from dotnet/arcade\" (#1660) at dotnet/standard","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n"}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"11034209966","Type":"IssuesEvent","CreatedAt":"2019-12-07T03:19:50","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/42634","RelatedDescription":"Reopened issue \"dotnet core 3 on macOS Catalina: NetworkInterface causes high CPU\" (#42634) at dotnet/corefx","RelatedBody":"You can find our code at https://github.com/awslabs/kinesis-agent-windows/blob/master/Amazon.KinesisTap.Shared/NetworkStatus.cs. It runs fine on Windows and macOS before Catalina, but causes high CPU on macOS Catalina.\r\n\r\nHigh CPU is only caused by NetworkAddressChanged or NetworkAvailabilityChanged event handler. This occurs when we turn on/off VPN. This is to give you a heads up; we will do more work to narrow down the exact line of the code that cause high CPU later."},{"Id":"11034000438","Type":"IssuesEvent","CreatedAt":"2019-12-07T01:41:10","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/37156","RelatedDescription":"Closed issue \"Proposal: SequenceReader<T>.ReadToEnd / AdvanceToEnd\" (#37156) at dotnet/corefx","RelatedBody":"# Rationale\r\nToday, one can read a sequence up to any delimiter and advance to/after the delimiter by using `SequenceReader<T>.TryReadTo` or `SequenceReader<T>.TryReadToAny`.\r\n\r\nThis is quite convenient when working with bounded and well-delimited data, but can be cumbersome when processing sequences of an unbounded data stream. (e.g. data coming from a `PipeReader` in an uncontrolled matter)\r\n\r\nThe problem this proposal seeks to address is: Read data _as far as possible_ **until** _any delimiter is reached_.\r\n\r\nIt applies in these cases\r\n * The data **may** or **may not** contain delimiters\r\n * The amount of data between two delimiters is random and can be very small (0) or very large (virtually ∞)\r\n * The data will/may never be complete, and must be processed as soon as available (e.g. redirected stdout from a long running application)\r\n\r\nIt is possible today to have something like that:\r\n````csharp\r\nif (!reader.TryReadToAny(out ReadOnlySequence<byte> readSequence, delimiters, false))\r\n{\r\n    readSequence = reader.Sequence.Slice(reader.Position, buffer.End);\r\n    reader.Advance(reader.Remaining);\r\n}\r\n````\r\nOr something like that:\r\n````csharp\r\nif (!reader.TryReadToAny(out ReadOnlySequence<byte> readSequence, delimiters, false))\r\n{\r\n    readSequence = reader.Sequence.Slice(reader.Position, buffer.End);\r\n    // \"Skip\" to the end.\r\n    reader = new SequenceReader<byte>(reader.Sequence.Slice(buffer.End, buffer.End));\r\n}\r\n````\r\nHowever, both these options come with their own problems:\r\n * The first option relies on `SequenceReader<T>.Advance`, which will enumerate every remaining segment once. This is pointless and wasteful if the desired result is simply to jump to the end, and also redundant because it has already been done by the call to `SequenceReader<T>.TryReadToAny`.\r\n * The second option simply creates a new reader. Though not perfect, this is probably more efficient, but not very straightforward.\r\n * Both options require manual interaction with the original `ReadOnlySequence<byte>`, while that may not have been required in the first place.\r\n\r\nIn this case, an API such as `SequenceReader<T>.ReadToAnyOrEnd` would work, but it would still feel a bit clumsy to use, compared to other methods.\r\nPlus, half of the desired feature can already be achieved from another method, so it would be better to provide only the other half if possible.\r\n\r\nHence this proposal about adding the ability to skip to the end of a sequence.\r\n\r\n# Proposed API\r\n\r\n````csharp\r\npublic ref partial struct SequenceReader<T> where T : unmanaged, IEquatable<T>\r\n{\r\n    // …\r\n    public void AdvanceToEnd() { /* … */ }\r\n    public ReadOnlySequence<T> ReadToEnd() { /* … */ }\r\n    // …\r\n}\r\n````\r\n\r\nMethod `AdvanceToEnd` would simply update the internal state of the reader to the end of the sequence. Hopefully, no complex operation will be required here.\r\n\r\nMethod `ReadToEnd` would be pretty similar, but return the remaining part of the sequence before advancing to the end.\r\n\r\n# Example\r\n\r\nRead the maximum amount of data until a delimiter:\r\n````csharp\r\nif (!sequenceReader.TryReadToAny(out ReadOnlySequence<byte> readSequence, delimiters, false))\r\n{\r\n    readSequence = sequenceReader.ReadToEnd();\r\n}\r\n\r\nProcessPartialData(readSequence);\r\n\r\npipeReader.AdvanceTo(sequenceReader.Position);\r\n````\r\n\r\nSkip to delimiter(s) or skip the sequence entirely:\r\n````csharp\r\nif (!sequenceReader.TryAdvanceToAny(delimiters, false))\r\n{\r\n    sequenceReader.AdvanceToEnd();\r\n}\r\n\r\npipeReader.AdvanceTo(sequenceReader.Position);\r\n````\r\n\r\n# Questions\r\n\r\nShould it be `bool TryReadToEnd(out ReadOnlySequence<T> sequence)` instead of `ReadOnlySequence<T> ReadToEnd()` ? (Returns false if the end has already been reached)\r\n"},{"Id":"11033733528","Type":"IssuesEvent","CreatedAt":"2019-12-07T00:13:31","Actor":"ahsonkhan","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/corefx/issues/38498","RelatedDescription":"Reopened issue \"Test failure: System.Security.Cryptography.Algorithms.Tests.AesCcmTests/AesCcmNistTests(testCase: NIST CCM Test Vectors - DVPT128.rsp - 0 (128/56/0/32/0)) \" (#38498) at dotnet/corefx","RelatedBody":"Test `System.Security.Cryptography.Algorithms.Tests.AesCcmTests/AesCcmNistTests(testCase: NIST CCM Test Vectors - DVPT128.rsp - 0 (128/56/0/32/0)) ` has failed.\r\n\r\nMessage :\r\n```\r\nSystem.TypeInitializationException : The type initializer for 'Crypto' threw an exception.\r\n---- System.TypeInitializationException : The type initializer for 'CryptoInitializer' threw an exception.\r\n-------- System.DllNotFoundException : Unable to load shared library 'System.Security.Cryptography.Native.OpenSsl' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(libSystem.Security.Cryptography.Native.OpenSsl, 1): image not found\r\n```\r\n\r\nStack Trace :\r\n```\r\n at Interop.Crypto.EvpAes128Ccm()\r\n   at System.Security.Cryptography.AesCcm.GetCipher(Int32 keySizeInBits) in /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/AesCcm.Unix.cs:line 130\r\n   at System.Security.Cryptography.AesCcm.EncryptInternal(ReadOnlySpan`1 nonce, ReadOnlySpan`1 plaintext, Span`1 ciphertext, Span`1 tag, ReadOnlySpan`1 associatedData) in /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/AesCcm.Unix.cs:line 37\r\n   at System.Security.Cryptography.AesCcm.Encrypt(ReadOnlySpan`1 nonce, ReadOnlySpan`1 plaintext, Span`1 ciphertext, Span`1 tag, ReadOnlySpan`1 associatedData) in /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/AesCcm.cs:line 44\r\n   at System.Security.Cryptography.AesCcm.Encrypt(Byte[] nonce, Byte[] plaintext, Byte[] ciphertext, Byte[] tag, Byte[] associatedData) in /_/src/System.Security.Cryptography.Algorithms/src/System/Security/Cryptography/AesCcm.cs:line 33\r\n   at System.Security.Cryptography.Algorithms.Tests.AesCcmTests.AesCcmNistTests(AEADTest testCase) in /_/src/System.Security.Cryptography.Algorithms/tests/AesCcmTests.cs:line 333\r\n----- Inner Stack Trace -----\r\n   at Interop.CryptoInitializer.Initialize() in /_/src/Common/src/Interop/Unix/System.Security.Cryptography.Native/Interop.Initialization.cs:line 42\r\n   at Interop.Crypto..cctor() in /_/src/Common/src/Interop/Unix/System.Security.Cryptography.Native/Interop.Initialization.cs:line 20\r\n----- Inner Stack Trace -----\r\n   at Interop.CryptoInitializer.EnsureOpenSslInitialized()\r\n   at Interop.CryptoInitializer..cctor() in /_/src/Common/src/Interop/Unix/System.Security.Cryptography.Native/Interop.Initialization.cs:line 27\r\n```\r\n\r\nBuild: -[20190612.69](https://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190612.69)(Master)\r\n\r\nFailing configurations:\r\n\r\n- OSX.1014.Amd64.Open-x64-Release\r\n\r\nDetails;\r\nhttps://mc.dot.net/#/user/dotnet-bot/pr~2Fdotnet~2Fcorefx~2Frefs~2Fheads~2Fmaster/test~2Ffunctional~2Fcli~2Finnerloop~2F/20190612.69/workItem/System.Security.Cryptography.Algorithms.Tests/analysis/xunit/System.Security.Cryptography.Algorithms.Tests.AesCcmTests~2FAesCcmNistTests(testCase:%20NIST%20CCM%20Test%20Vectors%20-%20DVPT128.rsp%20-%200%20(128~2F56~2F0~2F32~2F0))"},{"Id":"11033724106","Type":"PullRequestEvent","CreatedAt":"2019-12-07T00:10:53","Actor":"mmitche","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/42757","RelatedDescription":"Merged pull request \"[release/3.1] Switch to using 3.1100 SDK to build 3.1\" (#42757) at dotnet/corefx","RelatedBody":"Required for upstack components, so this is for consistency."},{"Id":"11033223035","Type":"IssuesEvent","CreatedAt":"2019-12-06T22:18:31","Actor":"wfurt","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/42634","RelatedDescription":"Closed issue \"dotnet core 3 on macOS Catalina: NetworkInterface causes high CPU\" (#42634) at dotnet/corefx","RelatedBody":"You can find our code at https://github.com/awslabs/kinesis-agent-windows/blob/master/Amazon.KinesisTap.Shared/NetworkStatus.cs. It runs fine on Windows and macOS before Catalina, but causes high CPU on macOS Catalina.\r\n\r\nHigh CPU is only caused by NetworkAddressChanged or NetworkAvailabilityChanged event handler. This occurs when we turn on/off VPN. This is to give you a heads up; we will do more work to narrow down the exact line of the code that cause high CPU later."},{"Id":"11033184896","Type":"IssuesEvent","CreatedAt":"2019-12-06T22:11:23","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24707","RelatedDescription":"Closed issue \"NegotiateStreamTest should be improved\" (#24707) at dotnet/corefx","RelatedBody":"I bump into this while investigating #24000 \r\n- We have cases when tests would claim pass but it did not run.\r\n- test it self is trying to install and remove system packages during test execution.\r\nThat will create reliability problems as well as it is unpleasant for anybody working on shared or production system.\r\n\r\nIt would be better to document prerequisites and run tests when conditions are met.\r\nThat would also mean checking or updating current CI images so we do not always skip runs due to lack of dependencies. \r\n\r\nWe should also update documentation and explain what is needed for proper execution so anybody from community can successfully run the tests. \r\n"},{"Id":"11033184875","Type":"IssuesEvent","CreatedAt":"2019-12-06T22:11:23","Actor":"davidsh","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/30150","RelatedDescription":"Closed issue \"NegotiateStream Kerberos tests failing after async fix\" (#30150) at dotnet/corefx","RelatedBody":"These tests were incorrectly ignoring an assert that was firing.  Now that these assert was fixed by https://github.com/dotnet/corefx/pull/30145, several tests are failing, e.g.\r\n```\r\n2018-06-05 14:30:51,094: INFO: proc(54): run_and_log_output: Output:    System.Net.Security.Tests.NegotiateStreamTest.NegotiateStream_StreamToStream_KerberosAuthInvalidUser_Failure [FAIL]\r\n2018-06-05 14:30:51,095: INFO: proc(54): run_and_log_output: Output:       Assert.Throws() Failure\r\n2018-06-05 14:30:51,095: INFO: proc(54): run_and_log_output: Output:       Expected: typeof(System.Security.Authentication.AuthenticationException)\r\n2018-06-05 14:30:51,095: INFO: proc(54): run_and_log_output: Output:       Actual:   typeof(System.TimeoutException): VirtualNetwork: Timeout reading the next frame.\r\n2018-06-05 14:30:51,105: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-06-05 14:30:51,177: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/Common/tests/System/Net/VirtualNetwork/VirtualNetwork.cs(55,0): at System.Net.Test.Common.VirtualNetwork.ReadFrame(Boolean server, Byte[]& buffer)\r\n2018-06-05 14:30:51,177: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/Common/tests/System/Net/VirtualNetwork/VirtualNetworkStream.cs(118,0): at System.Net.Test.Common.VirtualNetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n2018-06-05 14:30:51,178: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/System.Net.Security/tests/FunctionalTests/UnixGssFakeStreamFramer.cs(69,0): at System.Net.Security.Tests.UnixGssFakeStreamFramer.ReadHandshakeFrame()\r\n2018-06-05 14:30:51,179: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/System.Net.Security/tests/FunctionalTests/UnixGssFakeNegotiateStream.cs(53,0): at System.Net.Security.Tests.UnixGssFakeNegotiateStream.ServerLoop(Object state)\r\n2018-06-05 14:30:51,179: INFO: proc(54): run_and_log_output: Output:          /root/coreclr/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs(166,0): at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n2018-06-05 14:30:51,179: INFO: proc(54): run_and_log_output: Output:          --- End of stack trace from previous location where exception was thrown ---\r\n2018-06-05 14:30:51,180: INFO: proc(54): run_and_log_output: Output:          /root/coreclr/src/System.Private.CoreLib/src/System/Threading/Tasks/Task.cs(2439,0): at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\r\n2018-06-05 14:30:51,180: INFO: proc(54): run_and_log_output: Output:          --- End of stack trace from previous location where exception was thrown ---\r\n2018-06-05 14:31:42,556: INFO: proc(54): run_and_log_output: Output:    System.Net.Security.Tests.NegotiateStreamTest.NegotiateStream_StreamToStream_KerberosAuthDefaultCredentialsNoSeed_Failure [FAIL]\r\n2018-06-05 14:31:42,556: INFO: proc(54): run_and_log_output: Output:       Assert.Throws() Failure\r\n2018-06-05 14:31:42,557: INFO: proc(54): run_and_log_output: Output:       Expected: typeof(System.Security.Authentication.AuthenticationException)\r\n2018-06-05 14:31:42,557: INFO: proc(54): run_and_log_output: Output:       Actual:   typeof(System.IO.IOException): Unable to read data from the transport connection: VirtualNetwork: Timeout reading the next frame..\r\n2018-06-05 14:31:42,557: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-06-05 14:31:42,558: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/System.Net.Security/src/System/Net/StreamFramer.cs(308,0): at System.Net.StreamFramer.EndReadMessage(IAsyncResult asyncResult)\r\n2018-06-05 14:31:42,558: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/System.Net.Security/src/System/Net/Security/NegoState.cs(755,0): at System.Net.Security.NegoState.ReadCallback(IAsyncResult transportResult)\r\n2018-06-05 14:31:42,559: INFO: proc(54): run_and_log_output: Output:          --- End of stack trace from previous location where exception was thrown ---\r\n2018-06-05 14:31:42,559: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/System.Net.Security/src/System/Net/Security/NegoState.cs(402,0): at System.Net.Security.NegoState.EndProcessAuthentication(IAsyncResult result)\r\n2018-06-05 14:31:42,560: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/System.Net.Security/src/System/Net/Security/NegotiateStream.cs(116,0): at System.Net.Security.NegotiateStream.EndAuthenticateAsClient(IAsyncResult asyncResult)\r\n2018-06-05 14:31:42,560: INFO: proc(54): run_and_log_output: Output:          /root/coreclr/src/System.Private.CoreLib/src/System/Threading/Tasks/FutureFactory.cs(533,0): at System.Threading.Tasks.TaskFactory`1.FromAsyncCoreLogic(IAsyncResult iar, Func`2 endFunction, Action`1 endAction, Task`1 promise, Boolean requiresSynchronization)\r\n2018-06-05 14:31:42,561: INFO: proc(54): run_and_log_output: Output:          --- End of stack trace from previous location where exception was thrown ---\r\n2018-06-05 14:32:42,629: INFO: proc(54): run_and_log_output: Output:    System.Net.Security.Tests.NegotiateStreamTest.NegotiateStream_StreamToStream_KerberosAuthInvalidPassword_Failure [FAIL]\r\n2018-06-05 14:32:42,629: INFO: proc(54): run_and_log_output: Output:       Assert.Throws() Failure\r\n2018-06-05 14:32:42,629: INFO: proc(54): run_and_log_output: Output:       Expected: typeof(System.Security.Authentication.AuthenticationException)\r\n2018-06-05 14:32:42,630: INFO: proc(54): run_and_log_output: Output:       Actual:   typeof(System.TimeoutException): VirtualNetwork: Timeout reading the next frame.\r\n2018-06-05 14:32:42,630: INFO: proc(54): run_and_log_output: Output:       Stack Trace:\r\n2018-06-05 14:32:42,630: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/Common/tests/System/Net/VirtualNetwork/VirtualNetwork.cs(55,0): at System.Net.Test.Common.VirtualNetwork.ReadFrame(Boolean server, Byte[]& buffer)\r\n2018-06-05 14:32:42,632: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/Common/tests/System/Net/VirtualNetwork/VirtualNetworkStream.cs(118,0): at System.Net.Test.Common.VirtualNetworkStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n2018-06-05 14:32:42,633: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/System.Net.Security/tests/FunctionalTests/UnixGssFakeStreamFramer.cs(69,0): at System.Net.Security.Tests.UnixGssFakeStreamFramer.ReadHandshakeFrame()\r\n2018-06-05 14:32:42,633: INFO: proc(54): run_and_log_output: Output:          /mnt/j/workspace/dotnet_corefx/master/linux-TGroup_netcoreapp+CGroup_Debug+AGroup_x64+TestOuter_true_prtest/src/System.Net.Security/tests/FunctionalTests/UnixGssFakeNegotiateStream.cs(53,0): at System.Net.Security.Tests.UnixGssFakeNegotiateStream.ServerLoop(Object state)\r\n2018-06-05 14:32:42,634: INFO: proc(54): run_and_log_output: Output:          /root/coreclr/src/System.Private.CoreLib/shared/System/Threading/ExecutionContext.cs(166,0): at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n2018-06-05 14:32:42,634: INFO: proc(54): run_and_log_output: Output:          --- End of stack trace from previous location where exception was thrown ---\r\n2018-06-05 14:32:42,634: INFO: proc(54): run_and_log_output: Output:          /root/coreclr/src/System.Private.CoreLib/src/System/Threading/Tasks/Task.cs(2439,0): at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\r\n2018-06-05 14:32:42,635: INFO: proc(54): run_and_log_output: Output:          --- End of stack trace from previous location where exception was thrown ---\r\n```"},{"Id":"11032943610","Type":"IssuesEvent","CreatedAt":"2019-12-06T21:30:49","Actor":"carlossanlop","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/26996","RelatedDescription":"Closed issue \"System.MissingMethodException : Method not found: 'Void System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry, System.String, Boolean)'\" (#26996) at dotnet/corefx","RelatedBody":"I'm having the following error when targetting netappcore2.0 and net471:\r\n\r\nSystem.MissingMethodException : Method not found: 'Void System.IO.Compression.ZipFileExtensions.ExtractToFile(System.IO.Compression.ZipArchiveEntry, System.String, Boolean)'.\r\n\r\nIs this a new bug? Is there any workaround available?\r\n\r\nThanks."}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"11034210606","Type":"PullRequestEvent","CreatedAt":"2019-12-07T03:20:08","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40221","RelatedDescription":"Merged pull request \"Merge master to master-vs-deps\" (#40221) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"11034159434","Type":"PullRequestEvent","CreatedAt":"2019-12-07T02:54:57","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40222","RelatedDescription":"Opened pull request \"Fix nullable annotations for ValueSource\" (#40222) at dotnet/roslyn","RelatedBody":""},{"Id":"11034049474","Type":"PullRequestEvent","CreatedAt":"2019-12-07T02:01:55","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40220","RelatedDescription":"Merged pull request \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#40220) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"11034036781","Type":"PullRequestEvent","CreatedAt":"2019-12-07T01:56:27","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40219","RelatedDescription":"Merged pull request \"Merge release/dev16.4-vs-deps to master-vs-deps\" (#40219) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.4-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.4-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-vs-deps-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"11033983720","Type":"PullRequestEvent","CreatedAt":"2019-12-07T01:34:19","Actor":"msftbot[bot]","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40205","RelatedDescription":"Merged pull request \"Merge master to features/local-function-attributes\" (#40205) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"11033823940","Type":"PullRequestEvent","CreatedAt":"2019-12-07T00:40:44","Actor":"JoeRobich","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40218","RelatedDescription":"Merged pull request \"Merge release/dev16.4 to master\" (#40218) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from release/dev16.4 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"11033759186","Type":"PullRequestEvent","CreatedAt":"2019-12-07T00:20:51","Actor":"tmat","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/40208","RelatedDescription":"Merged pull request \"EnC: Fix incorrect reporting of changes in non-UTF8 encoded source files\" (#40208) at dotnet/roslyn","RelatedBody":"Port from master."}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"11034126461","Type":"PullRequestEvent","CreatedAt":"2019-12-07T02:38:21","Actor":"davidwrighton","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7906","RelatedDescription":"Opened pull request \"Fix LockFreeReaderHashtable\" (#7906) at dotnet/corert","RelatedBody":"- Communication of the presence of an expanding hashtable was very close to not safe\r\n  - Changed to aggressively use Interlocked operations instead\r\n- If there were 3 threads, 1 which was expanding (thread A), 1 which failed an insert and was waiting on an expand(thread B), and a third which did a lookup for the item in process of insert on thread B, the table would find the item in process of insertion\r\n  - Fixed by moving to a scheme where insertion didn't actually write in the value until it was confirmed that that spot was the right place to insert, and the value would be preserved into an expansion\r\n  - In order to acquire a sentinel for scenarios without requiring the explicit definition of one, the first item inserted is used as the sentinel. It simply exists outside of the hashtable in a side variable"},{"Id":"11033827265","Type":"PullRequestEvent","CreatedAt":"2019-12-07T00:41:43","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7905","RelatedDescription":"Merged pull request \"Option added to ignore specific errors\" (#7905) at dotnet/corert","RelatedBody":"- Option added to ignore specific errors\r\n\r\nThis option can be useful when verifying large sets of dlls which contain lots of the same errors (like InitOnly https://github.com/dotnet/roslyn/issues/22485).\r\n\r\n- App returns error code when verification errors exist\r\n\r\nUseful in automation scenarios\r\n\r\n- Print error code\r\n\r\nUseful to know the error code if you want to ignore it.\r\n\r\n- Continue verification when printing method fails\r\n\r\nOtherwise it will stop any further output of the app\r\n"},{"Id":"11033187660","Type":"PullRequestEvent","CreatedAt":"2019-12-06T22:11:56","Actor":"LTruijens","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7905","RelatedDescription":"Opened pull request \"Option added to ignore specific errors\" (#7905) at dotnet/corert","RelatedBody":"- Option added to ignore specific errors\r\n\r\nThis option can be useful when verifying large sets of dlls which contain lots of the same errors (like InitOnly https://github.com/dotnet/roslyn/issues/22485).\r\n\r\n- App returns error code when verification errors exist\r\n\r\nUseful in automation scenarios\r\n\r\n- Print error code\r\n\r\nUseful to know the error code if you want to ignore it.\r\n\r\n- Continue verification when printing method fails\r\n\r\nOtherwise it will stop any further output of the app\r\n"},{"Id":"11032464832","Type":"PullRequestEvent","CreatedAt":"2019-12-06T20:14:57","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7903","RelatedDescription":"Merged pull request \"Delete some unused code, add TODO\" (#7903) at dotnet/corert","RelatedBody":""},{"Id":"11031319365","Type":"IssuesEvent","CreatedAt":"2019-12-06T17:28:59","Actor":"SasukeK93","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/7904","RelatedDescription":"Opened issue \"Not Working for WPF\" (#7904) at dotnet/corert","RelatedBody":"CoreRT Native Build for C# WPF Aplication .NetCore 3.0 isn't propertly working:\r\n\r\ndotnet new wpf\r\ndotnet new nuget\r\n// Add the nuget References to nuget.config\r\ndotnet add package Microsoft.DotNet.ILCompiler -v 1.0.0-alpha-* \r\ndotnet publish -r win-x64 -c release\r\n\r\nBuild Output:\r\n\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 5.89 min for C:\\Users\\SasukeK93\\wpf\\wpf.csproj.\r\n  wpf -> C:\\Users\\SasukeK93\\wpf\\bin\\release\\netcoreapp3.0\\win-x64\\wpf.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Windows.Threading.DispatcherObject, WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 [C:\\Users\\SasukeK93\\wpf\\wpf.csproj]\r\n  Internal.TypeSystem.TypeSystemException+TypeLoadException: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Windows.Threading.DispatcherObject, WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n     at Internal.TypeSystem.ThrowHelper.ThrowTypeLoadException(ExceptionStringID id, String typeName, String assemblyName)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(String nameSpace, String name, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaType.InitializeBaseType()\r\n     at Internal.TypeSystem.TypeDesc.get_IsDelegate()\r\n     at ILCompiler.CompilerTypeSystemContext.GetAllMethods(TypeDesc type)\r\n     at Internal.TypeSystem.MetadataVirtualMethodAlgorithm.FindMatchingVirtualMethodOnTypeByNameAndSig(MethodDesc targetMethod, DefType currentType, Boolean reverseMethodSearch, Func`3 nameSigMatchMethodIsValidCandidate)\r\n     at Internal.TypeSystem.MetadataVirtualMethodAlgorithm.FindBaseUnificationGroup(MetadataType currentType, UnificationGroup unificationGroup)\r\n     at Internal.TypeSystem.MetadataVirtualMethodAlgorithm.FindBaseUnificationGroup(MetadataType currentType, UnificationGroup unificationGroup)\r\n     at Internal.TypeSystem.MetadataVirtualMethodAlgorithm.FindVirtualFunctionTargetMethodOnObjectType(MethodDesc targetMethod, MetadataType objectType)\r\n     at Internal.TypeSystem.Ecma.EcmaType.GetFinalizer()\r\n     at Internal.TypeSystem.Ecma.EcmaType.ComputeTypeFlags(TypeFlags mask)\r\n     at Internal.TypeSystem.TypeDesc.InitializeTypeFlags(TypeFlags mask)\r\n     at Internal.TypeSystem.TypeDesc.get_HasFinalizer()\r\n     at Internal.TypeSystem.MethodDesc.get_IsFinalizer()\r\n     at ILCompiler.MetadataManager.IsMethodSupportedInReflectionInvoke(MethodDesc method)\r\n     at ILCompiler.MetadataManager.GetDependenciesDueToReflectability(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.CodeBasedDependencyAlgorithm.AddDependenciesDueToMethodCodePresence(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ScannedMethodNode.InitializeDependencies(NodeFactory factory, IEnumerable`1 dependencies)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at ILCompiler.ILScanner.CompileSingleThreaded(List`1 methodsToCompile)\r\n     at ILCompiler.ILScanner.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.ILScanner.ILCompiler.IILScanner.Scan()\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\SasukeK93\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28406-02\\build\\Microsoft.NETCore.Native.targets(226,5): error MSB3073: The command \"\"C:\\Users\\SasukeK93\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28406-02\\tools\\ilc\" @\"obj\\release\\netcoreapp3.0\\win-x64\\native\\wpf.ilc.rsp\"\" exited with code 1. [C:\\Users\\SasukeK93\\wpf\\wpf.csproj]"},{"Id":"11026118792","Type":"PullRequestEvent","CreatedAt":"2019-12-06T05:29:56","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/7903","RelatedDescription":"Opened pull request \"Delete some unused code, add TODO\" (#7903) at dotnet/corert","RelatedBody":""},{"Id":"11001477301","Type":"PullRequestEvent","CreatedAt":"2019-12-03T16:35:41","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7899","RelatedDescription":"Merged pull request \"Fix x86 Native build on Unix\" (#7899) at dotnet/corert","RelatedBody":"x86 Native build (initially enabled in #4637 and #4598) is broken with the inclusion of (LLVM) libunwind, object writer and `src/Native/Runtime/i386/MiscStubs.S`.\r\n\r\nThis patch attempts to fill the gaps to make the Native components compile (including object writer):  `./build.sh objwriter skiptests x86` (tested on Debian Stretch i386, cmake 3.13.2)\r\n\r\nManaged components are still failing due to the lack of .NET SDK on Linux x86.\r\n\r\n```\r\nInstalling dotnet cli...\r\ntar: This does not look like a tar archive\r\ntar: Exiting with failure status due to previous errors\r\nERROR: Could not download dotnet cli.\r\nPlease check the detailed log that follows.\r\nRunning: /home/admin/projects/corert/init-tools.sh\r\nInstalling 'https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.504/dotnet-sdk-2.1.504-linux-x86.tar.gz' to '/home/admin/projects/corert/Tools/dotnetcli/dotnet.tar'\r\nUsing CLI tools version:\r\nls: cannot access '/home/admin/projects/corert/buildscripts/../Tools/dotnetcli/sdk': No such file or directory\r\n./buildscripts/build-managed.sh: line 33: /home/admin/projects/corert/buildscripts/../Tools/dotnetcli/dotnet: No such file or directory\r\n```\r\n\r\nContributes to: #4589"},{"Id":"11001370256","Type":"PullRequestEvent","CreatedAt":"2019-12-03T16:24:51","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/7902","RelatedDescription":"Merged pull request \"Add one more CoreRT debugging trick\" (#7902) at dotnet/corert","RelatedBody":""}],"ResultType":"GitHubEvent"},"SDK":{"Events":[{"Id":"11033816505","Type":"PullRequestEvent","CreatedAt":"2019-12-07T00:38:38","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/4019","RelatedDescription":"Opened pull request \"disable useapphost on mac by default\" (#4019) at dotnet/sdk","RelatedBody":""},{"Id":"11032447887","Type":"PullRequestEvent","CreatedAt":"2019-12-06T20:12:17","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/4013","RelatedDescription":"Merged pull request \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#4013) at dotnet/sdk","RelatedBody":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"11031587530","Type":"PullRequestEvent","CreatedAt":"2019-12-06T18:05:58","Actor":"wli3","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/4005","RelatedDescription":"Merged pull request \"Update branding to \"preview\"\" (#4005) at dotnet/sdk","RelatedBody":""},{"Id":"11031485746","Type":"PullRequestEvent","CreatedAt":"2019-12-06T17:51:06","Actor":"nguerrera","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/3994","RelatedDescription":"Merged pull request \"Enable R2R publishing for library projects\" (#3994) at dotnet/sdk","RelatedBody":"Ported from https://github.com/dotnet/sdk/pull/3874\r\n\r\n**Description**\r\nThis fix is a porting of https://github.com/dotnet/sdk/pull/3874 into the release branch, to enable ReadyToRun compilation when publishing non-exe project types. \r\nPublishing ReadyToRun for non-exe projects was disabled in the 3.0 release, but this restriction is unnecessary.\r\n\r\n**Customer Impact**\r\nThis will enable customer scenarios like Azure functions to use ReadyToRun images and get the improved startup performance (Azure function projects are DLL projects).\r\n\r\n**Regression?**\r\nNo, just a relaxation of an unnecessary limitation\r\n\r\n**Risk**\r\nLow\r\n"},{"Id":"11031107890","Type":"IssuesEvent","CreatedAt":"2019-12-06T17:02:12","Actor":"JerryJoyce","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/4018","RelatedDescription":"Opened issue \"dotnet clean fails if NuGet package references have never been restored\" (#4018) at dotnet/sdk","RelatedBody":"**Environment**\r\nUbuntu 18.04\r\n\r\n**Dotnet --info**\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.101\r\n Commit:    bc5f8df0f5\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.101/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.1\r\n  Commit:  19942e7199\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n**Details**\r\nI'm using an Ubuntu 18.04 container to build.  In a clean container, I get the following error when trying to clean my projects (if they have not been built before):\r\n\r\n```/usr/share/dotnet/sdk/3.0.101/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(234,5): error NETSDK1064: Package Google.Protobuf, version 3.9.1 was not found. It might have been deleted since NuGet restore. Otherwise, NuGet restore might have only partially completed, which might have been due to maximum path length restrictions.```\r\n\r\nThe error itself seems benign, but the problem is that this project is being built as part of a larger mixed language project that uses bash scripts to build.  The scripts exit on error which fails the build.  I can work around this by wrapping the \"dotnet clean\" calls with +e/-e but this still results with errors in the logs.\r\n\r\nIs there perhaps some additional step I can do prior to cleaning to prevent this?  I don't want to \"dotnet restore\" prior to every clean, and trying to find some pre-condition to check before doing the clean seems fragile."},{"Id":"11030191830","Type":"IssuesEvent","CreatedAt":"2019-12-06T15:18:11","Actor":"dmorrison42","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/4017","RelatedDescription":"Opened issue \"Cannot make trimmed single executable with debugging symbols\" (#4017) at dotnet/sdk","RelatedBody":"Unfortunately, I am unsure if this is a feature request, bug report, or my failure to properly read the documentation, but I am unable to make a trimmed single executable with debugging symbols. I have a simple code example here : https://github.com/dmorrison42/CrashTestDummy\r\n\r\nThe following line will create a single executable that will print a line number of an exception, but is fairly large (~67M).\r\n\r\n~~~bash\r\ndotnet publish -c release -r win7-x64 -p:PublishSingleFile=true -p:IncludeSymbolsInSingleFile=true -o .\r\n~~~\r\n\r\nThe following line with create a single executable that will print no line number, but is *relatively* small (~25M).\r\n\r\n~~~bash\r\ndotnet publish -c release -r win7-x64 -p:PublishSingleFile=true -p:IncludeSymbolsInSingleFile=true -p:PublishTrimmed=true -o .\r\n~~~\r\n\r\nI would like something that will give me the best of both worlds, but I haven't found it yet.\r\n\r\nI am using dotnet core 3.1.100."},{"Id":"11029765858","Type":"PullRequestEvent","CreatedAt":"2019-12-06T14:31:50","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/4016","RelatedDescription":"Merged pull request \"[master] Update dependencies from dotnet/arcade\" (#4016) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191205.6\r\n- **Date Produced**: 12/5/2019 9:49 PM\r\n- **Commit**: 45bfe0972a7354356daf799aae88533dcd0f071a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19605.6\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n"},{"Id":"11029001993","Type":"PullRequestEvent","CreatedAt":"2019-12-06T13:01:11","Actor":"dotnet-maestro[bot]","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/4016","RelatedDescription":"Opened pull request \"[master] Update dependencies from dotnet/arcade\" (#4016) at dotnet/sdk","RelatedBody":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191205.6\r\n- **Date Produced**: 12/5/2019 9:49 PM\r\n- **Commit**: 45bfe0972a7354356daf799aae88533dcd0f071a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19605.6\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n"},{"Id":"11027366975","Type":"IssuesEvent","CreatedAt":"2019-12-06T09:18:21","Actor":"eriawan","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/4015","RelatedDescription":"Opened issue \"Updating VS 2019 from 16.3.x to 16.14.0 uninstall existing .NET Core SDK 3.0.100\" (#4015) at dotnet/sdk","RelatedBody":"I have 2 different machines that has VS 2019 16.3.10 and VS 2019 16.3.7 on Windows 10 1909. \r\nBoth of them have .NET Core SDK v3.0.100 installed.\r\n\r\nAfter I update to VS 2019 16.4.0, the .NET Core SDK v3.0.100 got uninstalled and .NET Core 3.1.100 is installed. I don't mind having .NET Core 3.1.100 SDK installed. \r\n\r\nMy problem is why .NET Core 3.0.100 is uninstalled on every time I update VS 2019 from v16.3.x to v16.4.0?\r\n"},{"Id":"11026818316","Type":"IssuesEvent","CreatedAt":"2019-12-06T07:53:20","Actor":"Eznoka","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/issues/4014","RelatedDescription":"Opened issue \"[dotnet 3.1] dotnet new: error on Fedora 31\" (#4014) at dotnet/sdk","RelatedBody":"Hi,\r\n\r\nSteps to reproduce:\r\n\r\n1. On Fedora 31, up to date ('dnf distrosync --refresh'), with dotnet repo enabled.\r\n2. Remove dotnet-sdk (3.0) and its dependencies\r\n3. Install dotnet-sdk-3.1 (dnf)\r\n4. Run dotnet new ...\r\nI got the following error message, same with different 'dotnet' new options.\r\n\r\n`[eznoka@fedora-fpe-home ~]$ dotnet new\r\nGetting ready...\r\nObject reference not set to an instance of an object.\r\n   at Microsoft.TemplateEngine.Edge.Settings.SettingsLoader.Save(TemplateCache cacheToSave)\r\n   at Microsoft.TemplateEngine.Edge.Settings.SettingsLoader.Save()\r\n   at Microsoft.TemplateEngine.Cli.Installer.InstallPackages(IEnumerable`1 installationRequests, IList`1 nuGetSources, Boolean debugAllowDevInstall)\r\n   at Microsoft.TemplateEngine.Cli.Installer.InstallPackages(IEnumerable`1 installationRequests)\r\n   at Microsoft.DotNet.Tools.New.NewCommandShim.FirstRun(IEngineEnvironmentSettings environmentSettings, IInstaller installer)\r\n   at Microsoft.TemplateEngine.Cli.New3Command.ConfigureEnvironment()\r\n   at Microsoft.TemplateEngine.Cli.New3Command.Initialize()\r\n   at Microsoft.TemplateEngine.Cli.New3Command.ExecuteAsync()\r\n   at Microsoft.TemplateEngine.Cli.CommandParsing.NewCommandInputCli.<>c__DisplayClass19_0.<<OnExecute>b__0>d.MoveNext()\r\n`\r\n\r\n"},{"Id":"11026047865","Type":"IssuesEvent","CreatedAt":"2019-12-06T05:11:37","Actor":"dehghani-mehdi","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/sdk/issues/4008","RelatedDescription":"Closed issue \"Some tests failed, but ERRORLEVEL is 0\" (#4008) at dotnet/sdk","RelatedBody":"Hi,\r\n\r\nI'm using `xUnit`, after running `dotnet test MyApp.Tests.csproj`, I got:\r\n\r\n```\r\nTest Run Failed.\r\nTotal tests: 8\r\n     Passed: 5\r\n     Failed: 3\r\n Total time: 1.3661 Seconds\r\n```\r\n\r\nBut the value of `%ERRORLEVEL%` is 0.\r\n\r\n`dotnet --version` -> `3.0.100`\r\n\r\n"},{"Id":"11024898036","Type":"PullRequestEvent","CreatedAt":"2019-12-06T00:36:37","Actor":"dotnet-maestro-bot","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/sdk/pull/4013","RelatedDescription":"Opened pull request \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#4013) at dotnet/sdk","RelatedBody":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n"},{"Id":"11024878845","Type":"PullRequestEvent","CreatedAt":"2019-12-06T00:32:16","Actor":"mmitche","Repository":"dotnet/sdk","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/sdk/pull/4011","RelatedDescription":"Merged pull request \"[release/3.1.2xx] Update to 3.1.100 rtm SDK\" (#4011) at dotnet/sdk","RelatedBody":""}],"ResultType":"GitHubEvent"},"Home-Issues":{"Issues":[{"Id":"523940971","IsPullRequest":false,"CreatedAt":"2019-11-17T05:53:47","Actor":"NextTurn","Number":"155","RawContent":null,"Title":"Typos in CLA bot profile","State":"open","Body":"https://github.com/dnfclas\r\n\r\n## Expected\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003693-983ed400-0941-11ea-91d9-18c29e752b81.png)\r\n\r\n## Actual\r\n\r\n![image](https://user-images.githubusercontent.com/45985406/69003652-ec958400-0940-11ea-8239-f9b19a7dc957.png)\r\n\r\nAlways capitalized, never .Net or dot NET. \r\n\r\n[.NET Glossary](https://github.com/dotnet/docs/blob/master/docs/standard/glossary.md#net)\r\n\r\n[Microsoft Style Guide](https://github.com/MicrosoftDocs/microsoft-style-guide/blob/master/styleguide/a-z-word-list-term-collections/n/net.md)","Url":"https://github.com/dotnet/foundation/issues/155","RelatedDescription":"Open issue \"Typos in CLA bot profile\" (#155)"},{"Id":"523861891","IsPullRequest":true,"CreatedAt":"2019-11-16T15:59:11","Actor":"NextTurn","Number":"154","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/154","RelatedDescription":"Open PR \"Fix broken links\" (#154)"},{"Id":"522965180","IsPullRequest":true,"CreatedAt":"2019-11-14T16:22:27","Actor":"NextTurn","Number":"153","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/153","RelatedDescription":"Open PR \"Fix broken links\" (#153)"},{"Id":"522951789","IsPullRequest":true,"CreatedAt":"2019-11-14T16:00:23","Actor":"NextTurn","Number":"152","RawContent":null,"Title":"Fix broken links","State":"open","Body":"","Url":"https://github.com/dotnet/foundation/pull/152","RelatedDescription":"Open PR \"Fix broken links\" (#152)"},{"Id":"520212668","IsPullRequest":true,"CreatedAt":"2019-11-08T23:32:02","Actor":"onovotny","Number":"151","RawContent":null,"Title":"Update RxUI license to reflect repo","State":"closed","Body":"Fixes https://github.com/dotnet-foundation/dotnetfoundation-website/issues/68","Url":"https://github.com/dotnet/foundation/pull/151","RelatedDescription":"Closed or merged PR \"Update RxUI license to reflect repo\" (#151)"},{"Id":"455670422","IsPullRequest":true,"CreatedAt":"2019-11-07T05:43:04","Actor":"gep13","Number":"147","RawContent":null,"Title":"(GH-111) Update Source Link location","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/147","RelatedDescription":"Closed or merged PR \"(GH-111) Update Source Link location\" (#147)"},{"Id":"501128777","IsPullRequest":true,"CreatedAt":"2019-11-07T05:42:14","Actor":"gep13","Number":"150","RawContent":null,"Title":"Add new Cake Maintainer","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/150","RelatedDescription":"Closed or merged PR \"Add new Cake Maintainer\" (#150)"},{"Id":"500670461","IsPullRequest":true,"CreatedAt":"2019-11-07T05:41:48","Actor":"JimBobSquarePants","Number":"149","RawContent":null,"Title":"Add ImageSharp","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/149","RelatedDescription":"Closed or merged PR \"Add ImageSharp\" (#149)"},{"Id":"475315730","IsPullRequest":false,"CreatedAt":"2019-07-31T19:23:23","Actor":"MeikTranel","Number":"148","RawContent":null,"Title":"Clarify guidelines in regards to Options and Requirements","State":"open","Body":"I'd be interested in which part of the project submission guidelines is optional and which are deal breaker requirements.\r\n\r\n- Is the Role Matrix laid out an absolute or (as can be read between the lines) just a preset, which may be subject to individual projects needs?\r\n- Is it a strong requirement that the project uses the contributor covenant CoC?","Url":"https://github.com/dotnet/foundation/issues/148","RelatedDescription":"Open issue \"Clarify guidelines in regards to Options and Requirements\" (#148)"},{"Id":"455555823","IsPullRequest":true,"CreatedAt":"2019-06-13T06:28:59","Actor":"gep13","Number":"146","RawContent":null,"Title":"Update Cake Project Contacts","State":"closed","Body":"@jongalloway just noticed that this wasn't up to date.","Url":"https://github.com/dotnet/foundation/pull/146","RelatedDescription":"Closed or merged PR \"Update Cake Project Contacts\" (#146)"},{"Id":"441542047","IsPullRequest":true,"CreatedAt":"2019-05-09T18:35:22","Actor":"mitchelsellers","Number":"145","RawContent":null,"Title":"Edits to DNN Platform Information","State":"closed","Body":"Edits to reflect changes in repository structure with recent modifications to the overall project structure.","Url":"https://github.com/dotnet/foundation/pull/145","RelatedDescription":"Closed or merged PR \"Edits to DNN Platform Information\" (#145)"},{"Id":"437980746","IsPullRequest":true,"CreatedAt":"2019-05-03T20:10:38","Actor":"FlorianRappl","Number":"143","RawContent":null,"Title":"Add AngleSharp","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/143","RelatedDescription":"Closed or merged PR \"Add AngleSharp\" (#143)"},{"Id":"426787230","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:40","Actor":"mairaw","Number":"141","RawContent":null,"Title":"add links to ML.NET docs","State":"closed","Body":"/cc @JRAlexander @shauheen \r\n\r\nTo match the info we have added for other projects","Url":"https://github.com/dotnet/foundation/pull/141","RelatedDescription":"Closed or merged PR \"add links to ML.NET docs\" (#141)"},{"Id":"440030132","IsPullRequest":true,"CreatedAt":"2019-05-03T20:08:15","Actor":"tomasherceg","Number":"144","RawContent":null,"Title":"Add DotVVM","State":"closed","Body":"cc @jongalloway ","Url":"https://github.com/dotnet/foundation/pull/144","RelatedDescription":"Closed or merged PR \"Add DotVVM\" (#144)"},{"Id":"426787542","IsPullRequest":true,"CreatedAt":"2019-03-29T14:44:24","Actor":"mairaw","Number":"142","RawContent":null,"Title":"add docs samples link","State":"closed","Body":"@BillWagner should we add the samples project too?","Url":"https://github.com/dotnet/foundation/pull/142","RelatedDescription":"Closed or merged PR \"add docs samples link\" (#142)"},{"Id":"426658581","IsPullRequest":true,"CreatedAt":"2019-03-29T02:16:07","Actor":"scottaddie","Number":"139","RawContent":null,"Title":"Add link to ASP.NET Core docs","State":"closed","Body":"Provide a link to the docs site for ASP.NET Core.","Url":"https://github.com/dotnet/foundation/pull/139","RelatedDescription":"Closed or merged PR \"Add link to ASP.NET Core docs\" (#139)"},{"Id":"426666928","IsPullRequest":true,"CreatedAt":"2019-03-29T02:15:48","Actor":"BillWagner","Number":"140","RawContent":null,"Title":"add links to .NET docs","State":"closed","Body":"/cc @mairaw @scottaddie\r\n\r\nMaira, did I miss any project repos to tag?","Url":"https://github.com/dotnet/foundation/pull/140","RelatedDescription":"Closed or merged PR \"add links to .NET docs\" (#140)"},{"Id":"419205679","IsPullRequest":true,"CreatedAt":"2019-03-18T21:04:01","Actor":"MikeWilliams-UK","Number":"137","RawContent":null,"Title":"Add V3.1 repo and change documentation link","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/137","RelatedDescription":"Closed or merged PR \"Add V3.1 repo and change documentation link\" (#137)"},{"Id":"419897914","IsPullRequest":true,"CreatedAt":"2019-03-18T21:03:34","Actor":"devlead","Number":"138","RawContent":null,"Title":"Add Dave to cake.md","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/138","RelatedDescription":"Closed or merged PR \"Add Dave to cake.md\" (#138)"},{"Id":"417018694","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:32","Actor":"jkonicki","Number":"136","RawContent":null,"Title":"Fix logo and update team contributors","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/136","RelatedDescription":"Closed or merged PR \"Fix logo and update team contributors\" (#136)"},{"Id":"416428925","IsPullRequest":true,"CreatedAt":"2019-03-08T18:59:00","Actor":"manne","Number":"135","RawContent":null,"Title":"adds Umbraco logo","State":"closed","Body":"fixes #124 ","Url":"https://github.com/dotnet/foundation/pull/135","RelatedDescription":"Closed or merged PR \"adds Umbraco logo\" (#135)"},{"Id":"416427614","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:45","Actor":"manne","Number":"134","RawContent":null,"Title":"adds the prism logo","State":"closed","Body":"fixes #126 ","Url":"https://github.com/dotnet/foundation/pull/134","RelatedDescription":"Closed or merged PR \"adds the prism logo\" (#134)"},{"Id":"391460225","IsPullRequest":false,"CreatedAt":"2019-03-08T18:58:44","Actor":"manne","Number":"126","RawContent":null,"Title":"No logo provided for Prism","State":"closed","Body":"Can/should this [image](http://prismlibrary.github.io/images/logo-prism-symbol@2x.png) be used?\r\n\r\nhttps://github.com/dotnet/foundation/blob/c7e513139f593ad95237e864e4d2fdf9181ebafc/projects/projects.json#L155-L157","Url":"https://github.com/dotnet/foundation/issues/126","RelatedDescription":"Closed issue \"No logo provided for Prism\" (#126)"},{"Id":"416157860","IsPullRequest":true,"CreatedAt":"2019-03-08T18:58:26","Actor":"glennawatson","Number":"133","RawContent":null,"Title":"Add additional ReactiveUI organization projects.","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/133","RelatedDescription":"Closed or merged PR \"Add additional ReactiveUI organization projects.\" (#133)"},{"Id":"407251900","IsPullRequest":true,"CreatedAt":"2019-02-18T17:45:44","Actor":"Potapy4","Number":"132","RawContent":null,"Title":"Update MVVM project logo","State":"closed","Body":"Fixes dotnet/dotnetfoundation-website#72\r\nFixes #125","Url":"https://github.com/dotnet/foundation/pull/132","RelatedDescription":"Closed or merged PR \"Update MVVM project logo\" (#132)"},{"Id":"406210463","IsPullRequest":true,"CreatedAt":"2019-02-18T17:44:39","Actor":"NextTurn","Number":"131","RawContent":null,"Title":"Replace http links with https links","State":"closed","Body":"Replace http links with https where possible - both returned 200 OK.","Url":"https://github.com/dotnet/foundation/pull/131","RelatedDescription":"Closed or merged PR \"Replace http links with https links\" (#131)"},{"Id":"399191617","IsPullRequest":true,"CreatedAt":"2019-02-02T11:04:15","Actor":"NextTurn","Number":"130","RawContent":null,"Title":"Update Open XML links","State":"closed","Body":"OpenXmlDeveloper.org was shut down long ago.\r\n\r\nThe content has been moved to EricWhite.com.","Url":"https://github.com/dotnet/foundation/pull/130","RelatedDescription":"Closed or merged PR \"Update Open XML links\" (#130)"},{"Id":"395863354","IsPullRequest":true,"CreatedAt":"2019-01-09T22:28:14","Actor":"ErikEJ","Number":"128","RawContent":null,"Title":"Update of EF description","State":"closed","Body":"@divega !","Url":"https://github.com/dotnet/foundation/pull/128","RelatedDescription":"Closed or merged PR \"Update of EF description\" (#128)"},{"Id":"395901602","IsPullRequest":true,"CreatedAt":"2019-01-05T03:23:39","Actor":"MarcBruins","Number":"129","RawContent":null,"Title":"Update to absolute path","State":"closed","Body":"Update to absolute path so that when this list is copied the link will actually work","Url":"https://github.com/dotnet/foundation/pull/129","RelatedDescription":"Closed or merged PR \"Update to absolute path\" (#129)"},{"Id":"395705579","IsPullRequest":true,"CreatedAt":"2019-01-04T00:22:42","Actor":"carloscds","Number":"127","RawContent":null,"Title":"Update documentation information","State":"closed","Body":"","Url":"https://github.com/dotnet/foundation/pull/127","RelatedDescription":"Closed or merged PR \"Update documentation information\" (#127)"}],"ResultType":"GitHubIssue"},"CoreCLR-Issues":{"Issues":[{"Id":"533549794","IsPullRequest":true,"CreatedAt":"2019-12-05T23:18:06","Actor":"mmitche","Number":"27965","RawContent":null,"Title":"[release/3.1] Use 3.1.100 SDK in 3.1 build","State":"closed","Body":"To ensure that the 3.1 stack uses a consistent SDK.  The upper portions of the stack require the 3.1 SDK because for TFM purposes.","Url":"https://github.com/dotnet/coreclr/pull/27965","RelatedDescription":"Closed or merged PR \"[release/3.1] Use 3.1.100 SDK in 3.1 build\" (#27965)"},{"Id":"533008488","IsPullRequest":true,"CreatedAt":"2019-12-04T23:38:14","Actor":"jashook","Number":"27964","RawContent":null,"Title":"Disable formatting job in 3.0","State":"open","Body":"@hoyosjs ","Url":"https://github.com/dotnet/coreclr/pull/27964","RelatedDescription":"Open PR \"Disable formatting job in 3.0\" (#27964)"},{"Id":"532845984","IsPullRequest":true,"CreatedAt":"2019-12-04T18:01:14","Actor":"jashook","Number":"27963","RawContent":null,"Title":"This is a point fix for not allowing fast tail calls on windows arm64 for vararg methods","State":"open","Body":"This only affects windows arm and arm64.\r\n\r\n/cc @dotnet/jit-contrib ","Url":"https://github.com/dotnet/coreclr/pull/27963","RelatedDescription":"Open PR \"This is a point fix for not allowing fast tail calls on windows arm64 for vararg methods\" (#27963)"},{"Id":"532816885","IsPullRequest":false,"CreatedAt":"2019-12-04T17:04:35","Actor":"yashwanthreddyg","Number":"27962","RawContent":null,"Title":"dotnet 2.1.12 : Segmentation fault on NullReferenceException","State":"open","Body":"Dotnet version:\r\n2.1.12 aspnetcore\r\n2.1.5 aspnetcore\r\n2.1.13 aspnetcore\r\n\r\nOS:\r\n```\r\nLinux version 3.10.0-1062.4.3.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-39) (GCC) ) #1 SMP Wed Nov 13 23:58:53 UTC 2019\r\n```\r\n\r\nOur application is a web app and a certain code path leads to a null reference exception. lt causes the runtime to crash with segmentation fault despite there being a catch around the exception. I see the same behavior on all the above mentioned runtimes but I have backtrace from version 2.1.12.\r\n\r\n```\r\nProcess 3204 stopped\r\n\r\n* thread #11: tid = 3222, 0x00007f7a9dcd4669, name = 'dotnet', stop reason = invalid address (fault address: 0x0)\r\n    frame #0: 0x00007f7a9dcd4669\r\n-> 0x7f7a9dcd4669:  cmpl   %edi, (%rdi)\r\n   0x7f7a9dcd466b:  callq  *(%rax)\r\n   0x7f7a9dcd466d:  testq  %rax, %rax\r\n   0x7f7a9dcd4670:  jne    0x7f7a9dcd46c8\r\nbt\r\n* thread #11: tid = 3222, 0x00007f7a9dcd4669, name = 'dotnet', stop reason = invalid address (fault address: 0x0)\r\n  * frame #0: 0x00007f7a9dcd4669\r\n    frame #1: 0x00007f7a9dcd35b9\r\n    frame #2: 0x00007f7a9dcce664\r\n    frame #3: 0x00007f7a9dcca87d\r\n    frame #4: 0x00007f7a9dc8eee5\r\n    frame #5: 0x00007f7a9b1842ad\r\n    frame #6: 0x00007f7a9d5267c2\r\n    frame #7: 0x00007f7a9d525a4e\r\n    frame #8: 0x00007f7a9d5257bb\r\n    frame #9: 0x00007f7a9d525749\r\n    frame #10: 0x00007f7a9d51e6f7\r\n    frame #11: 0x00007f7a9d521482\r\n    frame #12: 0x00007f7a9d5212ab\r\n    frame #13: 0x00007f7a9d521239\r\n    frame #14: 0x00007f7a9d520f93\r\n    frame #15: 0x00007f7a9d520e2b\r\n    frame #16: 0x00007f7a9d520da9\r\n    frame #17: 0x00007f7a9d521f5b\r\n    frame #18: 0x00007f7a9d521dbb\r\n    frame #19: 0x00007f7a9d521d41\r\n    frame #20: 0x00007f7a9d51e3e3\r\n    frame #21: 0x00007f7a9d521482\r\n    frame #22: 0x00007f7a9d5212ab\r\n    frame #23: 0x00007f7a9d521239\r\n    frame #24: 0x00007f7a9d520f93\r\n    frame #25: 0x00007f7a9d520e2b\r\n    frame #26: 0x00007f7a9d520da9\r\n    frame #27: 0x00007f7a9d521f5b\r\n    frame #28: 0x00007f7a9d521dbb\r\n    frame #29: 0x00007f7a9d521d41\r\n    frame #30: 0x00007f7a9d51e3e3\r\n    frame #31: 0x00007f7a9d521482\r\n    frame #32: 0x00007f7a9d5212ab\r\n    frame #33: 0x00007f7a9d521239\r\n    frame #34: 0x00007f7a9d520f93\r\n    frame #35: 0x00007f7a9d520e2b\r\n    frame #36: 0x00007f7a9d520da9\r\n    frame #37: 0x00007f7a9d521f5b\r\n    frame #38: 0x00007f7a9d521dbb\r\n    frame #39: 0x00007f7a9d521d41\r\n    frame #40: 0x00007f7a9d51e3e3\r\n    frame #41: 0x00007f7a9d521482\r\n    frame #42: 0x00007f7a9d5212ab\r\n    frame #43: 0x00007f7a9d521239\r\n    frame #44: 0x00007f7a9d51e626\r\n    frame #45: 0x00007f7a9d521482\r\n    frame #46: 0x00007f7a9d5212ab\r\n    frame #47: 0x00007f7a9d521239\r\n    frame #48: 0x00007f7a9d520f93\r\n    frame #49: 0x00007f7a9d520e2b\r\n    frame #50: 0x00007f7a9d520da9\r\n    frame #51: 0x00007f7a9d52074f\r\n    frame #52: 0x00007f7a9d5205ab\r\n    frame #53: 0x00007f7a9d520531\r\n    frame #54: 0x00007f7a9d51e3e3\r\n    frame #55: 0x00007f7a9d51df87\r\n    frame #56: 0x00007f7a9d51ddbb\r\n    frame #57: 0x00007f7a9d51dd49\r\n    frame #58: 0x00007f7a9d51be68\r\n    frame #59: 0x00007f7a9d51dad2\r\n    frame #60: 0x00007f7a9d51d8fb\r\n    frame #61: 0x00007f7a9d51d889\r\n    frame #62: 0x00007f7a9d51ba24\r\n    frame #63: 0x00007f7a9d51d612\r\n    frame #64: 0x00007f7a9d51d43b\r\n    frame #65: 0x00007f7a9d51d3c9\r\n    frame #66: 0x00007f7a9d51b873\r\n    frame #67: 0x00007f7a9d51aaf7\r\n    frame #68: 0x00007f7a9d51a92b\r\n    frame #69: 0x00007f7a9d51a8b9\r\n    frame #70: 0x00007f7a9d5186f2\r\n    frame #71: 0x00007f7a9d51809b\r\n    frame #72: 0x00007f7a9d518029\r\n    frame #73: 0x00007f7a9c904810\r\n    frame #74: 0x00007f7a9c903a8b\r\n    frame #75: 0x00007f7a9c90393d\r\n    frame #76: 0x00007f7a9c901e1a\r\n    frame #77: 0x00007f7a9c900acb\r\n    frame #78: 0x00007f7a9c900a51\r\n    frame #79: 0x00007f7a9c8f8789\r\n    frame #80: 0x00007f7a9c8f861b\r\n    frame #81: 0x00007f7a9c8f85ad\r\n    frame #82: 0x00007f7a9c8f3605\r\n    frame #83: 0x00007f7a9c8f2b1b\r\n    frame #84: 0x00007f7a9c8f2aad\r\n    frame #85: 0x00007f7a9c8f28a3\r\n    frame #86: 0x00007f7a9c8f226b\r\n    frame #87: 0x00007f7a9c8f21fd\r\n    frame #88: 0x00007f7a9c8f0245\r\n    frame #89: 0x00007f7a9c8efe74\r\n    frame #90: 0x00007f7a996bdcfd\r\n    frame #91: 0x00007f7a9c8db8b0\r\n    frame #92: 0x00007f7a996bdcfd\r\n    frame #93: 0x00007f7a9974e268\r\n    frame #94: 0x00007f7b12df3edf libcoreclr.so`CallDescrWorkerInternal + 124\r\n    frame #95: 0x00007f7b12d1460c libcoreclr.so`MethodDescCallSite::CallTargetWorker(unsigned long const*, unsigned long*, int) + 83 at callhelpers.cpp:78\r\n    frame #96: 0x00007f7b12d145b9 libcoreclr.so`MethodDescCallSite::CallTargetWorker(this=<unavailable>, pArguments=<unavailable>, pReturnValue=0x00007f783aeedb28, cbReturnValue=8) + 857 at callhelpers.cpp:620\r\n    frame #97: 0x00007f7b12e948b5 libcoreclr.so`QueueUserWorkItemManagedCallback(void*) [inlined] MethodDescCallSite::Call_RetBool(this=0x00007f783aeedb30, pArguments=<unavailable>) + 15 at callhelpers.h:433\r\n    frame #98: 0x00007f7b12e948a6 libcoreclr.so`QueueUserWorkItemManagedCallback(pArg=0x00007f783aeedebe) + 166 at comthreadpool.cpp:451\r\n    frame #99: 0x00007f7b12ce5f3d libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchInner(pCallState=0x00007f783aeedd68) + 413 at threads.cpp:8850\r\n    frame #100: 0x00007f7b12ce5eeb libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchMiddle(pCallState=0x00007f783aeedd68) + 83 at threads.cpp:8901\r\n    frame #101: 0x00007f7b12ce5e98 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) [inlined] ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)::$_8::operator()(ManagedThreadBase_DispatchOuter(ManagedThreadCallState*)::TryArgs*) const::{lambda(Param*)#1}::operator()(Param*) const at threads.cpp:9139\r\n    frame #102: 0x00007f7b12ce5e98 libcoreclr.so`ManagedThreadBase_DispatchOuter(ManagedThreadCallState*) at threads.cpp:9141\r\n    frame #103: 0x00007f7b12ce5e98 libcoreclr.so`ManagedThreadBase_DispatchOuter(pCallState=<unavailable>) + 248 at threads.cpp:9178\r\n    frame #104: 0x00007f7b12ce66a0 libcoreclr.so`ManagedThreadBase::ThreadPool(ADID, void (*)(void*), void*) [inlined] ManagedThreadBase_FullTransitionWithAD(pAppDomain=<unavailable>, pTarget=<unavailable>, args=<unavailable>, filterType=<unavailable>)(void*), void*, UnhandledExceptionLocation) + 43 at threads.cpp:9199\r\n    frame #105: 0x00007f7b12ce6675 libcoreclr.so`ManagedThreadBase::ThreadPool(pAppDomain=<unavailable>, pTarget=<unavailable>, args=<unavailable>)(void*), void*) + 21 at threads.cpp:9241\r\n    frame #106: 0x00007f7b12e78ab7 libcoreclr.so`ManagedPerAppDomainTPCount::DispatchWorkItem(this=0x0000000001d0bf60, foundWork=0x00007f783aeedebf, wasNotRecalled=0x00007f783aeedebe) + 295 at threadpoolrequest.cpp:754\r\n    frame #107: 0x00007f7b12d04d33 libcoreclr.so`ThreadpoolMgr::WorkerThreadStart(void*) [inlined] ThreadpoolMgr::ExecuteWorkRequest(bool*, bool*) + 1267 at win32threadpool.cpp:1560\r\n    frame #108: 0x00007f7b12d04d12 libcoreclr.so`ThreadpoolMgr::WorkerThreadStart(lpArgs=<unavailable>) + 1234 at win32threadpool.cpp:2024\r\n    frame #109: 0x00007f7b1307a712 libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x00007f7834002260) + 306 at thread.cpp:1682\r\n    frame #110: 0x00007f7b1456ee65 libpthread.so.0`start_thread + 197\r\n(lldb)\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27962","RelatedDescription":"Open issue \"dotnet 2.1.12 : Segmentation fault on NullReferenceException\" (#27962)"},{"Id":"531827281","IsPullRequest":false,"CreatedAt":"2019-12-04T01:51:24","Actor":"MiyamuraMiyako","Number":"27961","RawContent":null,"Title":"AssemblyLoadContext.Default.LoadFromAssemblyPath throw FileLoadException","State":"closed","Body":"Main program and module program is `.net core3.1` program.\r\n\r\nModule program just one class with out any content:\r\n```C#\r\npublic class Module {}\r\n```\r\nMainProgram have below logic:\r\n```C#\r\nAssemblyLoadContext.Default.LoadFromAssemblyPath($@\"{myPath}\\Module.dll\");\r\n```\r\n\r\nthen MainProgram throw `System.IO.FileLoadException`.\r\n```\r\nCould not load file or assembly 'Module, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'.\r\n\r\n   at System.Runtime.Loader.AssemblyLoadContext.LoadFromPath(IntPtr ptrNativeAssemblyLoadContext, String ilPath, String niPath, ObjectHandleOnStack retAssembly)\r\n   at System.Runtime.Loader.AssemblyLoadContext.LoadFromAssemblyPath(String assemblyPath)\r\n   at ZZJ.Hospital.Plugin.MEF.Operate.FindSubModule() in D:\\ZZJ.Hospital\\ZZJ.Hospital\\Plugin\\MEF\\Operate.cs:line 24\r\n   at ZZJ.Hospital.Plugin.MEF.SubModule.FindInitSubModule() in D:\\ZZJ.Hospital\\ZZJ.Hospital\\Plugin\\MEF\\SubModule.cs:line 18\r\n   at ZZJ.Hospital.MainWindow.FindSubModule() in D:\\ZZJ.Hospital\\ZZJ.Hospital\\StartWindow.xaml.cs:line 33\r\n   at ZZJ.Hospital.MainWindow..ctor() in D:\\ZZJ.Hospital\\ZZJ.Hospital\\StartWindow.xaml.cs:line 28\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27961","RelatedDescription":"Closed issue \"AssemblyLoadContext.Default.LoadFromAssemblyPath throw FileLoadException\" (#27961)"},{"Id":"530233832","IsPullRequest":true,"CreatedAt":"2019-12-02T19:36:42","Actor":"alpencolt","Number":"27956","RawContent":null,"Title":"[armel/Linux] Fix armel build","State":"closed","Body":"Option '-DARM_SOFTFP' not passed after #27077 which required for armel build.\r\nThis commit fix it.\r\n\r\nHaven't checked dotnet/runtime, but think it should be ported.\r\ncc @jkotas @y-yamshchikov @o-piskunov","Url":"https://github.com/dotnet/coreclr/pull/27956","RelatedDescription":"Closed or merged PR \"[armel/Linux] Fix armel build\" (#27956)"},{"Id":"529195568","IsPullRequest":true,"CreatedAt":"2019-12-02T15:53:15","Actor":"hoyosjs","Number":"27952","RawContent":null,"Title":"Change non_virtual_calls_to_instance_methods test to non-il-sdk format","State":"closed","Body":"Branch 3.1 doesn't have the changes necessary to build ilproj using the SDK. PR #27868 ported a bug fix and added this test, so just use the old format.","Url":"https://github.com/dotnet/coreclr/pull/27952","RelatedDescription":"Closed or merged PR \"Change non_virtual_calls_to_instance_methods test to non-il-sdk format\" (#27952)"},{"Id":"530797589","IsPullRequest":false,"CreatedAt":"2019-12-01T21:19:33","Actor":"cup","Number":"27960","RawContent":null,"Title":"Print array","State":"open","Body":"I can create a program like this:\r\n\r\n~~~cs\r\nusing System;\r\nclass App {\r\n   static void Main() {\r\n      int[] a1 = {10, 20};\r\n      Console.WriteLine(a1);\r\n   }\r\n}\r\n~~~\r\n\r\nbut it doesnt give expected output:\r\n\r\n~~~\r\nSystem.Int32[]\r\n~~~\r\n\r\nI checked online:\r\n\r\nhttps://stackoverflow.com/questions/16265247\r\n\r\nand people suggest to loop through the array. Is that really necessary? Many\r\nother languages dont require that, like Go:\r\n\r\n~~~go\r\npackage main\r\nimport \"fmt\"\r\nfunc main() {\r\n   a1 := []int{10, 20}\r\n   fmt.Println(a1)\r\n}\r\n~~~\r\n\r\nNim:\r\n\r\n~~~nim\r\nvar a1 = [10, 20]\r\necho a1\r\n~~~\r\n\r\nD:\r\n\r\n~~~d\r\nimport std.stdio;\r\nvoid main() {\r\n   auto a1 = [10, 20];\r\n   a1.writeln;\r\n}\r\n~~~\r\n\r\nJavaScript:\r\n\r\n~~~js\r\nlet a1 = [10, 20];\r\nconsole.log(a1);\r\n~~~\r\n\r\nPython:\r\n\r\n~~~py\r\na1 = [10, 20]\r\nprint(a1)\r\n~~~\r\n","Url":"https://github.com/dotnet/coreclr/issues/27960","RelatedDescription":"Open issue \"Print array\" (#27960)"},{"Id":"530496346","IsPullRequest":true,"CreatedAt":"2019-11-29T22:01:19","Actor":"janvorli","Number":"27959","RawContent":null,"Title":"Port to 3.1 - Fix out of range access in GetRecycleMemoryInfo","State":"open","Body":"Customer impact\r\n---\r\n\r\nRuntime crash or hang within a few seconds in certain types of Linux virtualized environments (e.g. OpenVZ)\r\n\r\nRegression?\r\n---\r\nRegression from 2.1, introduced by https://github.com/dotnet/coreclr/pull/23824\r\n\r\nRisk\r\n---\r\nLow\r\n\r\n---\r\n\r\nPorts change #26873 to release 3.1 branch.\r\n\r\nOn OpenVZ virtualized linux, GetCurrentProcessorNumber which uses sched_getcpu()\r\ncan return a value greater than the number of processors reported by\r\nsched_getaffinity with CPU_COUNT or sysconf(_SC_NPROCESSORS_ONLN).\r\nFor example, taskset -c 2,3 ./MyApp will make CPU_COUNT be 2 but\r\nsched_getcpu() can return 2 or 3, and OpenVZ kernel can make\r\nsysconf(_SC_NPROCESSORS_ONLN) return a limited cpu count but\r\nsched_getcpu() still report the real processor number.\r\n\r\nExample of affinity vs current CPU id on OpenVZ:\r\nnproc: 8\r\nnprocOnline: 1\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 2\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 2\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 2\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 2\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 2\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 5\r\naffinity: 1, 0, 0, 0, 0, 0, 0, 0, cpuid: 5","Url":"https://github.com/dotnet/coreclr/pull/27959","RelatedDescription":"Open PR \"Port to 3.1 - Fix out of range access in GetRecycleMemoryInfo\" (#27959)"},{"Id":"530496338","IsPullRequest":true,"CreatedAt":"2019-11-29T22:01:15","Actor":"janvorli","Number":"27958","RawContent":null,"Title":"Port to 3.1 - Fix VirtualMemoryLogging::logRecords overflow","State":"open","Body":"Issue: https://github.com/dotnet/coreclr/issues/27547\r\n\r\nCustomer impact\r\n---\r\n\r\nCrash or hang in long running (days) processes on Linux, triggered by runtime executing 2 billion of  virtual memory operations.\r\n\r\nRegression?\r\n---\r\n\r\nNot a regression - the bug is present since .NET Core 1.0. Windows/Linux reliability gap.\r\n\r\nRisk\r\n---\r\nLow\r\n\r\n----\r\n\r\nwhen VirtualMemoryLogging::recordNumber increments from LONG_MAX,\r\nit became negative number, and the result of i % MaxRecords became\r\na number from -127 to 0.\r\n\r\nWhen that happens we will ovewrite CRITICAL_SECTION virtual_critsec\r\nwhich are stored in bss right before logRecords with garbage data.\r\nThen most likely the process will have a GC hang with one or more\r\nGC threads stuck trying to enter or leave critical section.\r\n\r\nThe fix is to ensure ULONG value are passed to modulo operation.","Url":"https://github.com/dotnet/coreclr/pull/27958","RelatedDescription":"Open PR \"Port to 3.1 - Fix VirtualMemoryLogging::logRecords overflow\" (#27958)"},{"Id":"530496332","IsPullRequest":true,"CreatedAt":"2019-11-29T22:01:12","Actor":"janvorli","Number":"27957","RawContent":null,"Title":"Port to 3.1 - Fix getting affinity set on MUSL on Jetson TX2","State":"open","Body":"Customer impact\r\n---\r\n\r\nPrevents running Linux Alpine tests on checked runtime on Jetson TX2 ARM boards used by our lab. This bug causes the checked runtime to assert and crash during startup on this board.\r\n\r\nCustomers may see degraded GC performance on Jetson TX2 and similar devices.\r\n\r\nRegression?\r\n---\r\n\r\nRegression from 2.1, introduced by the docker/cgroup changes.\r\n\r\nRisk\r\n---\r\nLow\r\n\r\n----\r\nPorts https://github.com/dotnet/runtime/pull/206 to release/3.1.\r\n\r\nThe code in PAL_GetCurrentThreadAffinitySet relied on the fact that the\r\nnumber of processors reported as configured in the system is always\r\nlarger than the maximum CPU index. However, it turns out that it is not\r\ntrue on some devices / distros. The Jetson TX2 reports CPUs 0, 3, 4 and\r\n5 in the affinity mask and the 1 and 2 are never reported. GLIBC reports\r\n6 as the number of configured CPUs, however MUSL reports just 4. The\r\nPAL_GetCurrentThreadAffinitySet was using the number of CPUs reported as\r\nconfigured as the upper bound for scanning affinity set, so on Jetson\r\nTX2, the affinity mask returned had just two bits set while there were\r\n4 CPUs. That triggered an assert in the GCToOSInterface::Initialize.\r\n\r\nThis change fixes that by reading the maximum CPU index from the\r\n/proc/cpuinfo. It falls back to using the number of processors\r\nconfigured when the /proc/cpuinfo is not available (on macOS, FreeBSD, ...)\r\n\r\nFixes https://github.com/dotnet/runtime/issues/170","Url":"https://github.com/dotnet/coreclr/pull/27957","RelatedDescription":"Open PR \"Port to 3.1 - Fix getting affinity set on MUSL on Jetson TX2\" (#27957)"},{"Id":"530130188","IsPullRequest":false,"CreatedAt":"2019-11-29T02:44:51","Actor":"Daniel15","Number":"27955","RawContent":null,"Title":"Segmentation fault when running .NET Core 3.0 app on OpenVZ","State":"open","Body":"I have a .NET Core app that's a fairly basic gRPC service (unfortunately not open source yet, so I can't link to the source at the moment). On one particular server, it's throwing a segmentation fault as soon as I run it:\r\n```\r\nASPNETCORE_ENVIRONMENT=Production ASPNETCORE_URLS=http://*:54561 ./TestApp\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Now listening on: http://[::]:54561\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Application started. Press Ctrl+C to shut down.\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Hosting environment: Production\r\ninfo: Microsoft.Hosting.Lifetime[0]\r\n      Content root path: /opt/exampleapp-worker\r\nSegmentation fault\r\n```\r\n\r\nIn fact, I'm seeing this for a very basic ASP.NET website too (just one custom middleware using `app.Run`).\r\n\r\nBacktrace from lldb + SOS:\r\n```\r\n* thread #7, name = 'TestApp', stop reason = signal SIGSEGV: invalid address (fault address: 0x0)\r\n  * frame #0: 0x00007ffff7019b3d libcoreclr.so`ThreadpoolMgr::GetRecycledMemory(ThreadpoolMgr::MemType) [inlined] ThreadpoolMgr::RecycledListInfo::Remove() at win32threadpool.h:655\r\n    frame #1: 0x00007ffff7019aa5 libcoreclr.so`ThreadpoolMgr::GetRecycledMemory(memType=<unavailable>) at win32threadpool.cpp:1674\r\n    frame #2: 0x00007ffff715e464 libcoreclr.so`UnManagedPerAppDomainTPCount::QueueUnmanagedWorkRequest(unsigned int (*)(void*), void*) [inlined] ThreadpoolMgr::MakeWorkRequest(unsigned int (*)(void*), void*) at win32threadpool.h:367\r\n    frame #3: 0x00007ffff715e45a libcoreclr.so`UnManagedPerAppDomainTPCount::QueueUnmanagedWorkRequest(this=0x00007ffff75dd640, function=(libcoreclr.so`ThreadpoolMgr::AsyncTimerCallbackCompletion(void*) at win32threadpool.cpp:4765), context=0x0000000000738290)(void*), void*) at threadpoolrequest.cpp:356\r\n    frame #4: 0x00007ffff701d100 libcoreclr.so`ThreadpoolMgr::FireTimers() at win32threadpool.cpp:855\r\n    frame #5: 0x00007ffff701d088 libcoreclr.so`ThreadpoolMgr::FireTimers() at win32threadpool.cpp:4710\r\n    frame #6: 0x00007ffff701cd41 libcoreclr.so`ThreadpoolMgr::TimerThreadFire() at win32threadpool.cpp:4598\r\n    frame #7: 0x00007ffff701cc15 libcoreclr.so`ThreadpoolMgr::TimerThreadStart(p=<unavailable>) at win32threadpool.cpp:4569\r\n    frame #8: 0x00007ffff732c86d libcoreclr.so`CorUnix::CPalThread::ThreadEntry(pvParam=0x0000000000737530) at thread.cpp:1807\r\n    frame #9: 0x00007ffff7fb1fa3 libpthread.so.0`start_thread(arg=<unavailable>) at pthread_create.c:486\r\n    frame #10: 0x00007ffff7bbc4cf libc.so.6`__GI___clone at clone.S:95\r\n```\r\n\r\nDebian stable (buster)\r\n\r\n```\r\n$ apt list --installed | grep dotnet\r\n\r\nWARNING: apt does not have a stable CLI interface. Use with caution in scripts.\r\n\r\ndotnet-host/buster,now 3.0.1-1 amd64 [installed,automatic]\r\ndotnet-hostfxr-3.0/buster,now 3.0.1-1 amd64 [installed,automatic]\r\ndotnet-runtime-3.0/buster,now 3.0.1-1 amd64 [installed]\r\ndotnet-runtime-deps-3.0/buster,now 3.0.1-1 amd64 [installed,automatic]\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27955","RelatedDescription":"Open issue \"Segmentation fault when running .NET Core 3.0 app on OpenVZ\" (#27955)"},{"Id":"529602760","IsPullRequest":true,"CreatedAt":"2019-11-28T15:39:53","Actor":"jashook","Number":"27954","RawContent":null,"Title":"Disable formatting jobs in release/3.1","State":"closed","Body":"/cc @hoyosjs ","Url":"https://github.com/dotnet/coreclr/pull/27954","RelatedDescription":"Closed or merged PR \"Disable formatting jobs in release/3.1\" (#27954)"},{"Id":"529572120","IsPullRequest":false,"CreatedAt":"2019-11-28T02:57:12","Actor":"mikernet","Number":"27953","RawContent":null,"Title":"RuntimeBinderException when dynamically casting private enum type","State":"closed","Body":"It took me way too long to figure out what the heck was going on here and isolate the problem because the code where this is happening is fairly complex and anytime I would try to simplify it to write a simple repro it would infuriatingly start working again...but I finally got it, and here it is:\r\n\r\n```c#\r\nvoid Main()\r\n{\t\r\n        // Works fine\r\n\tSomeClass.Method1().Dump(); \r\n\r\n        // RuntimeBinderException: Cannot convert type 'System.Enum' to 'decimal'\r\n\tSomeClass.Method2().Dump();\r\n}\r\n\r\npublic static class SomeClass {\r\n\tpublic static bool Method1()\r\n\t{\r\n\t\treturn (decimal)(dynamic)Test.A == (decimal)(dynamic)Test.A;\r\n\t}\r\n\t\r\n\tpublic static bool Method2()\r\n\t{\r\n\t\treturn CompareDecimalValues(Test.A, Test.A);\r\n\t}\r\n\r\n\tprivate enum Test\r\n\t{\r\n\t\tA = -100,\r\n\t}\r\n}\r\n\r\npublic static bool CompareDecimalValues<T>(T value1, T value2) where T : unmanaged, Enum\r\n{\r\n\treturn (decimal)(dynamic)value1 == (decimal)(dynamic)value2;\r\n}\r\n```\r\n\r\nIf `CompareDecimalValues()` is inside the same assembly then changing the enum to internal or public makes `Method2` work. If `CompareDecimalValues` is outside the assembly then the enum must be changed to public for it to work. \r\n\r\nBasically, it seems like the method doing the dynamic cast must have visibility of the enum type otherwise it fails.\r\n\r\n","Url":"https://github.com/dotnet/coreclr/issues/27953","RelatedDescription":"Closed issue \"RuntimeBinderException when dynamically casting private enum type\" (#27953)"},{"Id":"528330168","IsPullRequest":false,"CreatedAt":"2019-11-27T02:01:43","Actor":"erozenfeld","Number":"27941","RawContent":null,"Title":"Remove PAL_RegisterModule jit export","State":"closed","Body":"This issue is a follow-up from https://github.com/dotnet/runtime/pull/167#discussion_r349868608\r\n\r\nThe work that's done inside PAL_RegisterModule should be done in jitStartup.\r\n\r\nCorInfoImpl  (in src\\coreclr\\src\\tools\\Common\\JitInterface\\CorInfoImpl.cs) currently calls PAL_RegisterModule followed by jitStartup but it only needs the PAL_InitializeDLL part of PAL_RegisterModule. Because of that it can't properly check the return code from PAL_RegisterModule.\r\n","Url":"https://github.com/dotnet/coreclr/issues/27941","RelatedDescription":"Closed issue \"Remove PAL_RegisterModule jit export\" (#27941)"},{"Id":"529055217","IsPullRequest":false,"CreatedAt":"2019-11-27T01:08:06","Actor":"VSadov","Number":"27951","RawContent":null,"Title":"[Pinned Object Heap] Need to generalize GC notification API","State":"open","Body":"The `GC.RegisterForFullGCNotification` API takes a separate parameter for LOH. Most likely need another overload for POH","Url":"https://github.com/dotnet/coreclr/issues/27951","RelatedDescription":"Open issue \"[Pinned Object Heap] Need to generalize GC notification API\" (#27951)"},{"Id":"528917611","IsPullRequest":true,"CreatedAt":"2019-11-26T21:20:05","Actor":"jashook","Number":"27947","RawContent":null,"Title":"Disable test with warning","State":"closed","Body":"","Url":"https://github.com/dotnet/coreclr/pull/27947","RelatedDescription":"Closed or merged PR \"Disable test with warning\" (#27947)"},{"Id":"528951170","IsPullRequest":true,"CreatedAt":"2019-11-26T20:19:50","Actor":"dotnet-maestro-bot","Number":"27950","RawContent":null,"Title":"Update BuildTools to preview1-04626-03 (release/2.2)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/27950","RelatedDescription":"Open PR \"Update BuildTools to preview1-04626-03 (release/2.2)\" (#27950)"},{"Id":"528950486","IsPullRequest":true,"CreatedAt":"2019-11-26T20:18:10","Actor":"stephentoub","Number":"27949","RawContent":null,"Title":"Fix CancellationTokenRegistration.Unregister race condition","State":"open","Body":"Port https://github.com/dotnet/runtime/pull/309 to release/3.1\r\nFixes https://github.com/dotnet/coreclr/issues/22946\r\n\r\n## Description\r\n\r\nIf multiple threads race to Unregister and zero out a CancellationTokenRegistration field, we can end up null ref'ing due to a torn read/write on a struct resulting in passing around some inconsistent state.  This pattern is possible as part of clean up in Task.Delay(timeout, cancellationToken), with the null ref then happening on a thread pool thread that results in the app crashing.\r\n\r\n## Customer Impact\r\n\r\nValid coding patterns, both in customer code and in our framework implementation, resulting in NullReferenceExceptions that may not be catchable.  Back in March a customer reported this, and just recently @rynowak hit up against it in ASP.NET.\r\n\r\n## Regression?\r\n\r\nYes, from .NET Framework 4.8 and .NET Core 2.0.  This was introduced in https://github.com/dotnet/coreclr/pull/12819 in 2.1 as part of overhauling the CancellationToken implementation.\r\n\r\n## Testing\r\n\r\nIsolated a repro that quickly fails (within a second) prior to the fix and successfully runs for a long time after.\r\n\r\n## Risk\r\n\r\nMinimal.\r\n\r\ncc: @tarekgh, @kouvel, @rynowak \r\n\r\n@danmosemsft ","Url":"https://github.com/dotnet/coreclr/pull/27949","RelatedDescription":"Open PR \"Fix CancellationTokenRegistration.Unregister race condition\" (#27949)"},{"Id":"528397569","IsPullRequest":true,"CreatedAt":"2019-11-26T19:30:17","Actor":"brianrob","Number":"27942","RawContent":null,"Title":"Emit an Event for Every Tiered Compilation Call Counter Operation","State":"closed","Body":"Adds a new verbose event that when enabled via the CompilationDiagnostic keyword will emit an event each time a tiered compilation method call counter increment operation occurs.\r\n\r\nThis is expected to be very verbose, but can help with understanding call counter behavior and verifying tiered compilation behavior in real workloads.","Url":"https://github.com/dotnet/coreclr/pull/27942","RelatedDescription":"Closed or merged PR \"Emit an Event for Every Tiered Compilation Call Counter Operation\" (#27942)"},{"Id":"528926512","IsPullRequest":true,"CreatedAt":"2019-11-26T19:26:20","Actor":"dotnet-maestro-bot","Number":"27948","RawContent":null,"Title":"Update BuildTools to rc1-04626-02 (release/2.1)","State":"open","Body":"/cc @dotnet/maestro-reviewers-core","Url":"https://github.com/dotnet/coreclr/pull/27948","RelatedDescription":"Open PR \"Update BuildTools to rc1-04626-02 (release/2.1)\" (#27948)"},{"Id":"528886486","IsPullRequest":true,"CreatedAt":"2019-11-26T18:44:02","Actor":"dotnet-maestro-bot","Number":"27946","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @Anipik\n* @mmitche\n* @davmason\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27946","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#27946)"},{"Id":"528078084","IsPullRequest":false,"CreatedAt":"2019-11-26T18:16:43","Actor":"saucecontrol","Number":"27937","RawContent":null,"Title":"RyuJIT: Access violation when calling IsLclVarUpdateTree on GenTreeHWIntrinsic","State":"closed","Body":"When compiling the `crash` method below, RyuJIT throws an AV when `GenTree::IsLclVarUpdateTree` is called from `Compiler::optExtractInitTestIncr`.  The rhs arg in this case is a `GenTreeHWIntrinsic`  (NI_Vector128_Zero), which causes a nullptr dereference.\r\n\r\n```C#\r\nusing System.Runtime.Intrinsics;\r\n\r\nclass Program\r\n{\r\n    static unsafe void crash(float* fa, float* fb)\r\n    {\r\n        float* pb = fb;\r\n        float* eb = pb + 16;\r\n\r\n        do\r\n        {\r\n            float* pa = fa;\r\n            float* ea = pa + 16;\r\n            var va = Vector128<float>.Zero;\r\n\r\n            do\r\n            {\r\n                *pa = va.ToScalar();\r\n\r\n                pa += Vector128<float>.Count;\r\n                pb += Vector128<float>.Count;\r\n            } while (pa < ea);\r\n\r\n        } while (pb < eb);\r\n    }\r\n\r\n    static unsafe void Main()\r\n    {\r\n        float* a = stackalloc float[16];\r\n        float* b = stackalloc float[16];\r\n\r\n        crash(a, b);\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27937","RelatedDescription":"Closed issue \"RyuJIT: Access violation when calling IsLclVarUpdateTree on GenTreeHWIntrinsic\" (#27937)"},{"Id":"528835856","IsPullRequest":false,"CreatedAt":"2019-11-26T17:53:40","Actor":"znakeeye","Number":"27945","RawContent":null,"Title":"ArrayPool's Return() and Rent() have the wrong signature","State":"closed","Body":"[ConfigurableArrayPool.Return()](https://github.com/dotnet/coreclr/blob/master/src/System.Private.CoreLib/shared/System/Buffers/ConfigurableArrayPool.cs#L123) should return a `bool`, indicating if the buffer was indeed returned. Similarly, there should be a `Rent(int minimumLength, out bool rented)` so that you can quickly determine if the returned buffer is indeed from the pool.\r\n\r\n**Important for unit tests**\r\nThe current implementation makes it impossible to determine if you are working with a pooled array or temporary array. Distinguishing between the two can be critical for e.g. unit tests. In our use case, we traverse a tree structure and it's important that we don't reach a point where the array pool has been exhausted. Here, fine-tuning the size of the pool (impossible due to the above) would allow us to get a deterministic GC behavior.","Url":"https://github.com/dotnet/coreclr/issues/27945","RelatedDescription":"Closed issue \"ArrayPool's Return() and Rent() have the wrong signature\" (#27945)"},{"Id":"528401202","IsPullRequest":false,"CreatedAt":"2019-11-25T23:40:45","Actor":"ViktorHofer","Number":"27943","RawContent":null,"Title":"🎉🎉🎉 dotnet/runtime welcomes you 🎉🎉🎉","State":"open","Body":"We are excited to announce that we just opened the [dotnet/runtime](https://github.com/dotnet/runtime) repository for community members: https://github.com/dotnet/runtime/issues/253. Issues will be ported over early December and this master branch will be recycled soon after. Please open Issues and Pull Requests in the new repository.\r\n\r\ncc @MeiChin-Tsai ","Url":"https://github.com/dotnet/coreclr/issues/27943","RelatedDescription":"Open issue \"🎉🎉🎉 dotnet/runtime welcomes you 🎉🎉🎉\" (#27943)"},{"Id":"528249356","IsPullRequest":false,"CreatedAt":"2019-11-25T18:05:47","Actor":"EgorBo","Number":"27940","RawContent":null,"Title":"JIT: use `test` for Nullable == null","State":"open","Body":"```csharp\r\npublic static bool MyTest(int? a)\r\n{\r\n    return a == null;\r\n}\r\n```\r\nCodegen:\r\n```asm\r\nG_M41936_IG01:\r\n       mov      qword ptr [rsp+08H], rcx\r\nG_M41936_IG02:\r\n       cmp      byte  ptr [rsp+08H], 0\r\n       sete     al\r\n       movzx    rax, al\r\nG_M41936_IG03:\r\n       ret      \r\n; Total bytes of code: 17\r\n```\r\nShould use a slightly cheaper `test` instead of `cmp 0`.\r\nPS: Mono-LLVM's cogegen for this case:\r\n```asm\r\n       test     dil,dil\r\n       sete     al\r\n       ret\r\n```","Url":"https://github.com/dotnet/coreclr/issues/27940","RelatedDescription":"Open issue \"JIT: use `test` for Nullable == null\" (#27940)"},{"Id":"528187837","IsPullRequest":false,"CreatedAt":"2019-11-25T16:12:40","Actor":"jkotas","Number":"27939","RawContent":null,"Title":"Move ILVerify tool to dotnet/runtime repo","State":"open","Body":"https://github.com/dotnet/coreclr/issues/27934#issuecomment-558193025","Url":"https://github.com/dotnet/coreclr/issues/27939","RelatedDescription":"Open issue \"Move ILVerify tool to dotnet/runtime repo\" (#27939)"},{"Id":"528154820","IsPullRequest":true,"CreatedAt":"2019-11-25T15:40:36","Actor":"dotnet-maestro-bot","Number":"27938","RawContent":null,"Title":"[automated] Merge branch 'release/2.1' => 'release/2.2'","State":"closed","Body":"I detected changes in the release/2.1 branch which have not been merged yet to release/2.2. I'm a robot and am configured to help you automatically keep release/2.2 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/2.1 by the following committers:\n\n* @mmitche\n* @davmason\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/2.1\r\ngit pull --ff-only\r\ngit checkout release/2.2\r\ngit pull --ff-only\r\ngit merge --no-ff release/2.1\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/2.1-to-release/2.2'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull https://github.com/dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/2.1-to-release/2.2 release/2.2\r\ngit pull git@github.com:dotnet-maestro-bot/coreclr merge/release/2.1-to-release/2.2\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/coreclr HEAD:merge/release/2.1-to-release/2.2\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/coreclr/pull/27938","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/2.1' => 'release/2.2'\" (#27938)"},{"Id":"527890918","IsPullRequest":false,"CreatedAt":"2019-11-25T07:05:25","Actor":"stasgaonkar","Number":"27936","RawContent":null,"Title":"Cannot unload a collectible AssemblyLoadContext if System.Data.SqlClient is used","State":"open","Body":"The Assembly we want to load (and unload) needs the ability to connect to a database for which we use Dapper. Dapper internally makes use of System.Data.SqlClient. We find that when we create such an assembly, then we are unable to Unload the **collectible AssemblyLoadContext**.\r\n\r\nThe sample source code is available at: https://github.com/stasgaonkar/DynamicLoading\r\n\r\nHaving followed the steps mentioned in https://docs.microsoft.com/en-us/dotnet/standard/assembly/unloadability#, the following is the output of `gcroot` command,\r\n\r\n```\r\n0:000> !dumpheap -type LoaderAllocator\r\n         Address               MT     Size\r\n000002022c46e1f0 00007fff74999410       48     \r\n000002022c46e260 00007fff74999538       24     \r\n\r\nStatistics:\r\n              MT    Count    TotalSize Class Name\r\n00007fff74999538        1           24 System.Reflection.LoaderAllocatorScout\r\n00007fff74999410        1           48 System.Reflection.LoaderAllocator\r\nTotal 2 objects\r\n0:000> !gcroot -all 0x000002022c46e1f0\r\nHandleTable:\r\n    000002022A9D12A0 (strong handle)\r\n    -> 000002022C4E8C48 System.Data.SqlClient.TdsParserStateObjectNative\r\n    -> 000002022C46E1F0 System.Reflection.LoaderAllocator\r\n\r\n    000002022A9D12A8 (strong handle)\r\n    -> 000002022C4E00F0 System.Data.SqlClient.TdsParserStateObjectNative\r\n    -> 000002022C46E1F0 System.Reflection.LoaderAllocator\r\n\r\n    000002022A9D12E0 (strong handle)\r\n    -> 000002022C4B38C0 System.Data.SqlClient.TdsParserStateObjectNative\r\n    -> 000002022C46E1F0 System.Reflection.LoaderAllocator\r\n\r\n    000002022A9D15F8 (pinned handle)\r\n    -> 000002023C461038 System.Object[]\r\n    -> 000002022C475768 System.Threading.TimerQueue[]\r\n    -> 000002022C475840 System.Threading.TimerQueue\r\n    -> 000002022C4ABE88 System.Threading.TimerQueueTimer\r\n    -> 000002022C475708 System.Threading.TimerQueueTimer\r\n    -> 000002022C475580 System.Threading.TimerCallback\r\n    -> 000002022C474D60 System.Data.SqlClient.SqlConnectionFactory\r\n    -> 000002022C46E1F0 System.Reflection.LoaderAllocator\r\n\r\nFound 4 roots.\r\n```\r\n\r\nSo it seems that the TdsParserStateObjectNative is the culprit. What we have also noticed is that there are some **\"unmanaged/native DLL\"** that are used (`sni.dll`) internally by `System.Data.SqlClient`, possibly from within `TdsParserStateObjectNative`. Not sure if this is causing any issues. \r\n\r\nIs something that we are attempting to do, incorrect? ","Url":"https://github.com/dotnet/coreclr/issues/27936","RelatedDescription":"Open issue \"Cannot unload a collectible AssemblyLoadContext if System.Data.SqlClient is used\" (#27936)"},{"Id":"527782075","IsPullRequest":false,"CreatedAt":"2019-11-25T00:12:32","Actor":"Thealexbarney","Number":"27935","RawContent":null,"Title":"JIT: Dead code at runtime not completely removed","State":"open","Body":"The JIT doesn't properly remove dead code in certain instances. [Here's an example](https://sharplab.io/#v2:EYLgxg9gTgpgtADwGwBYA0AXEBDAzgWwB8ABAJgEYBYAKGIAYACY8gOgCUBXAOwwEt8YLAMIR8AB14AbGFADKMgG68wMXAG4a9Jq049+ggJI8ovLrmW4WADQAcSDdU0BmJqQZCaAbxoNfTF8xIDMAQEJIMBrgAggoIshxiYtAYMAAmABQAlD5+3tR+BUwA7AwxCCyR8YnJaQ4FAL40Ob7EAeRBxCil6aYYDNhoDLJi2FwAPMAAnikAfMHZ+bnNhbwAZgzpkWVVSVApGZkLhUuLxwXEAKxl6QPzdWeNp4UwkrgwywV5Z4WXAHIQ11uwEy92OjwaTSerW0HS6UVIPR4/UGw1GE2mMDmwOWXzOaw2ZQquB2NVSRzOuO+LSusRug2BoMK4LOLzeHxOVL8fwBtKBIPZvmZgsh5zasNKTkRfVuqPGU1m8xxAoY+M20ViJL2aSy5OOlKpl0B9P5Twhpr8rPe5t8+u+AHo7Qw2DB8BAFGkGMqhQxHssANoAWRgGAAFhBUgZxJJ0kHQ+HI2JJAB5MR8CBmFj/IySUymADmmQAustoYEmF1DbTesihiM5RisZkGJ4fSK/IHg2GI1GY5341GU2mM1muDmuPmiyWxeWmBd/tdqzK6+iFcDm63qPUgA==) that does some method dispatching based on CPU features:\r\n```\r\npublic class C\r\n{\r\n    public static bool IsAvxSupported()\r\n    {\r\n        return Avx.IsSupported;\r\n    }\r\n\r\n    public static void A(int a, Span<byte> b)\r\n    {\r\n        if (IsAvxSupported())\r\n            FuncAvx(a, b);\r\n        else\r\n            FuncNoAvx(a, b);\r\n    }\r\n\r\n    public static void A2(int a, Span<byte> b)\r\n    {\r\n        if (Avx.IsSupported)\r\n            FuncAvx(a, b);\r\n        else\r\n            FuncNoAvx(a, b);\r\n    }\r\n\r\n    public static void A3(int a, Span<byte> b)\r\n    {\r\n        if (IsAvxSupported())\r\n            FuncAvx(a, b);\r\n        else\r\n        {\r\n            // Removed \r\n        }\r\n    }\r\n\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    public static void FuncAvx(int a, Span<byte> b) { }\r\n\r\n    [MethodImpl(MethodImplOptions.NoInlining)]\r\n    public static void FuncNoAvx(int a, Span<byte> b) { }\r\n}\r\n```\r\n\r\n`A1` Moves some arguments around on the stack unnecessarily.\r\n```\r\nG_M13277_IG01:\r\n       sub      rsp, 56\r\n       vzeroupper \r\n       xor      rax, rax\r\n       mov      qword ptr [rsp+28H], rax\r\n\r\nG_M13277_IG02:\r\n       vmovdqu  xmm0, qword ptr [rdx]\r\n       vmovdqu  qword ptr [rsp+28H], xmm0\r\n\r\nG_M13277_IG03:\r\n       lea      rdx, bword ptr [rsp+28H]\r\n       call     C:FuncAvx(int,struct)\r\n       nop      \r\n\r\nG_M13277_IG04:\r\n       add      rsp, 56\r\n       ret\r\n```\r\n\r\nManually inlining `IsAvxSupported` or removing the code from the `false` branch like in `A2` and `A3` make the JIT remove all those instructions, leaving just the call.\r\n```\r\nG_M62574_IG01:\r\n       sub      rsp, 40\r\n       nop      \r\n\r\nG_M62574_IG02:\r\n       call     C:FuncAvx(int,struct)\r\n       nop      \r\n\r\nG_M62574_IG03:\r\n       add      rsp, 40\r\n       ret   \r\n```","Url":"https://github.com/dotnet/coreclr/issues/27935","RelatedDescription":"Open issue \"JIT: Dead code at runtime not completely removed\" (#27935)"}],"ResultType":"GitHubIssue"},"CLI-Issues":{"Issues":[{"Id":"534221922","IsPullRequest":true,"CreatedAt":"2019-12-06T19:35:49","Actor":"mmitche","Number":"13147","RawContent":null,"Title":"[release/3.0.1xx] Change to name/value variables and remove unused","State":"open","Body":"- Remove old legacy PB_ values that are no longer used\r\n- Change to the name, value pair approach for variables.\r\nThis will allow internal builds to add variable groups required for accessing internal runtimes","Url":"https://github.com/dotnet/cli/pull/13147","RelatedDescription":"Open PR \"[release/3.0.1xx] Change to name/value variables and remove unused\" (#13147)"},{"Id":"533540123","IsPullRequest":true,"CreatedAt":"2019-12-06T18:06:21","Actor":"wli3","Number":"13142","RawContent":null,"Title":"Update branding to \"preview\"","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13142","RelatedDescription":"Closed or merged PR \"Update branding to \"preview\"\" (#13142)"},{"Id":"533696470","IsPullRequest":true,"CreatedAt":"2019-12-06T02:25:32","Actor":"dotnet-maestro[bot]","Number":"13146","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191205.2\r\n- **Date Produced**: 12/6/2019 1:04 AM\r\n- **Commit**: 13abe7e2749d95337e8d72efdc5b71611815fd43\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.1-servicing.19605.2\r\n\r\n[marker]: <> (End:2edc82a1-19d9-431c-901b-08d76d41c6c3)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13146","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/templating\" (#13146)"},{"Id":"533696469","IsPullRequest":true,"CreatedAt":"2019-12-06T02:20:30","Actor":"dotnet-maestro[bot]","Number":"13145","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191205.2\r\n- **Date Produced**: 12/6/2019 1:04 AM\r\n- **Commit**: 13abe7e2749d95337e8d72efdc5b71611815fd43\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.1-servicing.19605.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13145","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13145)"},{"Id":"533591152","IsPullRequest":true,"CreatedAt":"2019-12-05T20:49:38","Actor":"mmitche","Number":"13144","RawContent":null,"Title":"[release/3.1.2xx] Update to 3.1.100 rtm sdk","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/13144","RelatedDescription":"Open PR \"[release/3.1.2xx] Update to 3.1.100 rtm sdk\" (#13144)"},{"Id":"533589968","IsPullRequest":true,"CreatedAt":"2019-12-05T20:47:04","Actor":"mmitche","Number":"13143","RawContent":null,"Title":"[release/3.1.1xx] Update to 3.1.100 rtm sdk","State":"open","Body":"","Url":"https://github.com/dotnet/cli/pull/13143","RelatedDescription":"Open PR \"[release/3.1.1xx] Update to 3.1.100 rtm sdk\" (#13143)"},{"Id":"533009789","IsPullRequest":true,"CreatedAt":"2019-12-05T19:18:59","Actor":"dotnet-maestro[bot]","Number":"13139","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191203.16\r\n- **Date Produced**: 12/3/2019 9:25 PM\r\n- **Commit**: 8e47254f93b276c974968aff83222f89ec3931ed\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19603.16\r\n\r\n[marker]: <> (End:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13139","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/arcade\" (#13139)"},{"Id":"533009481","IsPullRequest":true,"CreatedAt":"2019-12-05T19:18:18","Actor":"dotnet-maestro[bot]","Number":"13138","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191203.16\r\n- **Date Produced**: 12/3/2019 9:25 PM\r\n- **Commit**: 8e47254f93b276c974968aff83222f89ec3931ed\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19603.16\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13138","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13138)"},{"Id":"533505361","IsPullRequest":true,"CreatedAt":"2019-12-05T19:16:24","Actor":"mmitche","Number":"13141","RawContent":null,"Title":"Use Microsoft.NETCore.App.Internal for runtime version","State":"closed","Body":"The final non-suffixed build is not written to a non-suffixed directory. \r\n\r\nAlso reorder a pinned dependency to work around potential https://github.com/dotnet/arcade/issues/4067","Url":"https://github.com/dotnet/cli/pull/13141","RelatedDescription":"Closed or merged PR \"Use Microsoft.NETCore.App.Internal for runtime version\" (#13141)"},{"Id":"533010316","IsPullRequest":true,"CreatedAt":"2019-12-05T19:10:00","Actor":"dotnet-maestro[bot]","Number":"13140","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191203.16\r\n- **Date Produced**: 12/3/2019 9:25 PM\r\n- **Commit**: 8e47254f93b276c974968aff83222f89ec3931ed\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19603.16\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13140","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#13140)"},{"Id":"529075631","IsPullRequest":true,"CreatedAt":"2019-12-04T23:33:51","Actor":"dotnet-maestro[bot]","Number":"13128","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.08\r\n- **Date Produced**: 11/27/2019 1:35 AM\r\n- **Commit**: 547ae1f5f072d130b32ec3089876711070b2dc4f\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19576-08\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19576-08\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19576-08\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19576-08\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19576-08\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13128","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13128)"},{"Id":"528487412","IsPullRequest":true,"CreatedAt":"2019-12-04T23:33:43","Actor":"dotnet-maestro[bot]","Number":"13124","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191125.14\r\n- **Date Produced**: 11/26/2019 4:11 AM\r\n- **Commit**: 7db696998c6ae4852fbf01827efdb10634e22668\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19575.14\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13124","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13124)"},{"Id":"529644622","IsPullRequest":true,"CreatedAt":"2019-12-04T23:28:42","Actor":"dotnet-maestro[bot]","Number":"13134","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191127.2\r\n- **Date Produced**: 11/28/2019 1:08 AM\r\n- **Commit**: ea3020cd0422107d6f982b363aa16c59fe2e846e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.1.1-servicing.19577.2\r\n\r\n[marker]: <> (End:2f46839f-4f80-4d33-eeee-08d727dab80f)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13134","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/templating\" (#13134)"},{"Id":"529651007","IsPullRequest":true,"CreatedAt":"2019-12-04T23:28:28","Actor":"dotnet-maestro[bot]","Number":"13135","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/templating","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n## From https://github.com/dotnet/templating\r\n- **Build**: 20191127.4\r\n- **Date Produced**: 11/28/2019 1:42 AM\r\n- **Commit**: 15b6aee2f5702a8d38bf9063e52f34d8e689ab72\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.TemplateEngine.Cli** -> 3.0.1-servicing.19577.4\r\n\r\n[marker]: <> (End:d4b89351-e138-4a22-94d9-08d690bc143a)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13135","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/templating\" (#13135)"},{"Id":"529079605","IsPullRequest":true,"CreatedAt":"2019-12-04T23:02:32","Actor":"dotnet-maestro[bot]","Number":"13129","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.9\r\n- **Date Produced**: 11/27/2019 1:52 AM\r\n- **Commit**: f3f2dd583fffa254015fc21ff0e45784b333256d\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19576.9\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.1-servicing.19576.9\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13129","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13129)"},{"Id":"532356783","IsPullRequest":true,"CreatedAt":"2019-12-04T19:00:10","Actor":"wli3","Number":"13137","RawContent":null,"Title":"Merge release/2.1.6xx release/2.1.8xx ","State":"closed","Body":"","Url":"https://github.com/dotnet/cli/pull/13137","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx release/2.1.8xx \" (#13137)"},{"Id":"529602649","IsPullRequest":true,"CreatedAt":"2019-12-02T18:58:08","Actor":"wtgodbe","Number":"13131","RawContent":null,"Title":"Pin dependency on Microsoft.Netcore.App refpack to 3.1.0","State":"closed","Body":"@nguerrera @mmitche PTAL","Url":"https://github.com/dotnet/cli/pull/13131","RelatedDescription":"Closed or merged PR \"Pin dependency on Microsoft.Netcore.App refpack to 3.1.0\" (#13131)"},{"Id":"529633633","IsPullRequest":true,"CreatedAt":"2019-12-02T18:41:01","Actor":"dotnet-maestro[bot]","Number":"13132","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:15385bb3-00bd-44e3-5c73-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13132","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#13132)"},{"Id":"531378595","IsPullRequest":true,"CreatedAt":"2019-12-02T18:37:48","Actor":"dotnet-maestro[bot]","Number":"13136","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:94c24b6f-4197-4be9-5768-08d76e1d56cb)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13136","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/arcade\" (#13136)"},{"Id":"529412032","IsPullRequest":true,"CreatedAt":"2019-12-02T17:26:42","Actor":"dotnet-maestro[bot]","Number":"13130","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from nuget/nuget.client","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n## From https://github.com/NuGet/NuGet.Client\r\n- **Build**: 5.5.0.6319\r\n- **Date Produced**: 11/21/2019 2:19 AM\r\n- **Commit**: ba2a72ac9afd9e7260798a6ad14088297570b350\r\n- **Branch**: refs/heads/dev\r\n- **Updates**:\r\n  - **NuGet.Build.Tasks** -> 5.5.0-preview.1.6319\r\n\r\n[marker]: <> (End:3c9d65bb-d2bc-4c69-c5d7-08d76fa9c820)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13130","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from nuget/nuget.client\" (#13130)"},{"Id":"529636031","IsPullRequest":true,"CreatedAt":"2019-11-29T17:32:16","Actor":"dotnet-maestro[bot]","Number":"13133","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:9b125d25-276f-4859-b4e2-08d6910bdae0)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13133","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#13133)"},{"Id":"529047920","IsPullRequest":true,"CreatedAt":"2019-11-27T01:15:29","Actor":"dotnet-maestro[bot]","Number":"13127","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.7\r\n- **Date Produced**: 11/26/2019 11:48 PM\r\n- **Commit**: 3175a035df26e4082ad5513be661400ce722d0f5\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.1-servicing.19576.7\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.1-servicing.19576.7\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.1-servicing.19576.7\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.1-servicing.19576.7\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19576.7\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.1-servicing.19576.7\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13127","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13127)"},{"Id":"529036669","IsPullRequest":true,"CreatedAt":"2019-11-27T01:05:44","Actor":"dotnet-maestro[bot]","Number":"13126","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.05\r\n- **Date Produced**: 11/26/2019 11:00 PM\r\n- **Commit**: bf4c7b66bc5aea96c8569384aa11fa88a8966cf8\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19576-05\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19576-05\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19576-05\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19576-05\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19576-05\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13126","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13126)"},{"Id":"528281071","IsPullRequest":true,"CreatedAt":"2019-11-26T23:33:18","Actor":"dotnet-maestro[bot]","Number":"13121","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.4\r\n- **Date Produced**: 11/26/2019 10:04 PM\r\n- **Commit**: 07f2d6521b95b6a5e781dc2597e0d6a2c3849f3c\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.1.1-servicing.19576.4\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.1.1-servicing.19576.4\r\n  - **Microsoft.NETCore.App.Ref** -> 3.1.1-servicing.19576.4\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.1.1-servicing.19576.4\r\n  - **Microsoft.NET.HostModel** -> 3.1.1-servicing.19576.4\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.1.1-servicing.19576.4\r\n\r\n[marker]: <> (End:caa76adf-c67f-4e61-5c6d-08d72a4d3f20)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13121","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/core-setup\" (#13121)"},{"Id":"528993213","IsPullRequest":true,"CreatedAt":"2019-11-26T22:25:32","Actor":"dotnet-maestro[bot]","Number":"13125","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n## From https://github.com/dotnet/core-setup\r\n- **Build**: 20191126.03\r\n- **Date Produced**: 11/26/2019 9:04 PM\r\n- **Commit**: 62e9d13376ca698367b5f7682cce8a2bf4666f42\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64** -> 3.0.2-servicing-19576-03\r\n  - **Microsoft.NETCore.DotNetHostResolver** -> 3.0.2-servicing-19576-03\r\n  - **Microsoft.DotNet.PlatformAbstractions** -> 3.0.2-servicing-19576-03\r\n  - **Microsoft.NET.HostModel** -> 3.0.2-servicing-19576-03\r\n  - **Microsoft.Extensions.DependencyModel** -> 3.0.2-servicing-19576-03\r\n\r\n[marker]: <> (End:1a2c0403-dbb9-4253-1c2d-08d6fb3704ce)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13125","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/core-setup\" (#13125)"},{"Id":"528459182","IsPullRequest":true,"CreatedAt":"2019-11-26T03:11:26","Actor":"flcdrg","Number":"13123","RawContent":null,"Title":"Add switch to enable searching global path for existing SDK version","State":"open","Body":"Implements #11058","Url":"https://github.com/dotnet/cli/pull/13123","RelatedDescription":"Open PR \"Add switch to enable searching global path for existing SDK version\" (#13123)"},{"Id":"528336049","IsPullRequest":true,"CreatedAt":"2019-11-26T01:27:58","Actor":"wtgodbe","Number":"13122","RawContent":null,"Title":"Add trigger for internal builds","State":"closed","Body":"Needed for the internal builds for 3.1.1. CC @wli3 @livarcocc @mmitche ","Url":"https://github.com/dotnet/cli/pull/13122","RelatedDescription":"Closed or merged PR \"Add trigger for internal builds\" (#13122)"},{"Id":"527634913","IsPullRequest":false,"CreatedAt":"2019-11-24T01:37:22","Actor":"alexzandros","Number":"13120","RawContent":null,"Title":"Container Image cannot run default console app in F#","State":"open","Body":"Same problem when trying to run the default F# console app\r\ndotnet --version\r\n3.0.101\r\nSystem.ComponentModel.Win32Exception (13): Permission denied\r\n   at System.Diagnostics.Process.ForkAndExecProcess(String filename, String[] argv, String[] envp, String cwd, Boolean redirectStdin, Boolean redirectStdout, Boolean redirectStderr, Boolean setCredentials, UInt32 userId, UInt32 groupId, UInt32[] groups, Int32& stdinFd, Int32& stdoutFd, Int32& stderrFd, Boolean usesTerminal, Boolean throwOnNoExec)\r\nRunning inside a container created from the latest image present in MS images repository.\r\n\r\n_Originally posted by @alexzandros in https://github.com/dotnet/cli/issues/11231#issuecomment-557848531_","Url":"https://github.com/dotnet/cli/issues/13120","RelatedDescription":"Open issue \"Container Image cannot run default console app in F#\" (#13120)"},{"Id":"527613050","IsPullRequest":true,"CreatedAt":"2019-11-23T22:10:26","Actor":"dotnet-maestro[bot]","Number":"13119","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191123.3\r\n- **Date Produced**: 11/23/2019 8:16 PM\r\n- **Commit**: c31f51e5c778dc817862d0c932e7cfe9223d4899\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19573.3\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13119","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13119)"},{"Id":"527524674","IsPullRequest":true,"CreatedAt":"2019-11-23T08:20:27","Actor":"dotnet-maestro[bot]","Number":"13118","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n## From https://github.com/aspnet/AspNetCore\r\n- **Build**: 20191122.19\r\n- **Date Produced**: 11/23/2019 6:59 AM\r\n- **Commit**: 814f3bd24b68db6881273d1639673842d697486e\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.AspNetCore.DeveloperCertificates.XPlat** -> 3.1.0-rtm.19572.19\r\n\r\n[marker]: <> (End:c7c33a9e-18af-4618-5026-08d727dabd66)\r\n\r\n","Url":"https://github.com/dotnet/cli/pull/13118","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from aspnet/AspNetCore\" (#13118)"}],"ResultType":"GitHubIssue"},"Standard-Issues":{"Issues":[{"Id":"529638047","IsPullRequest":true,"CreatedAt":"2019-11-28T01:14:42","Actor":"dotnet-maestro[bot]","Number":"1660","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1660","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1660)"},{"Id":"529573719","IsPullRequest":false,"CreatedAt":"2019-11-27T21:33:26","Actor":"timdoke","Number":"1659","RawContent":null,"Title":"Generic class operators derived from interface seems broken","State":"closed","Body":"Let's say I have a CaseInsensitiveConcurrentDictionary.  The intention of it is to be interchangeable with regular Dictionary implementations -- where, we always use the interface IDictionary<T, T> to interact with either.  Both Dictionary and ConcurrentDictionary implement IDictionary interface members.\r\n\r\nThe class looks like this:\r\n\r\n\r\n    public class CaseInsensitiveDictionary<TValue>\r\n        : ConcurrentDictionary<string, TValue>\r\n    {\r\n        public CaseInsensitiveDictionary()\r\n            : base(StringComparer.InvariantCultureIgnoreCase)\r\n        {\r\n        }\r\n\r\n        private CaseInsensitiveDictionary(IDictionary<string, TValue> attributes)\r\n            : this()\r\n        {\r\n            AddRange(attributes);\r\n        }\r\n\r\n        public void Add(string key, TValue value)\r\n        {\r\n            this.TryAdd(key, value);\r\n        }\r\n\r\n        public void AddRange(IDictionary<string, TValue> entries)\r\n        {\r\n            foreach (var item in entries)\r\n            {\r\n                this.TryAdd(item.Key, item.Value);\r\n            }\r\n        }\r\n\r\n        public static CaseInsensitiveDictionary<TValue> Create(IDictionary<string, TValue> attributes = null)\r\n        {\r\n            if (attributes == null)\r\n            {\r\n                return new CaseInsensitiveDictionary<TValue>();\r\n            }\r\n            return new CaseInsensitiveDictionary<TValue>(attributes);\r\n        }\r\n\r\n        public static implicit operator Dictionary<string, TValue>(CaseInsensitiveDictionary<TValue> data)\r\n        {\r\n            return new Dictionary<string, TValue>(data);\r\n        }\r\n\r\n        public static implicit operator CaseInsensitiveDictionary<TValue>(Dictionary<string, TValue> data)\r\n        {\r\n            return Create(data);\r\n        }\r\n\r\n    }\r\n\r\n\r\n`  \r\n\r\n\r\nLet's say then that we are trying to implicitly convert the ConcurrentDictionary to and from a dictionary.  To test, I wrote these methods:\r\n\r\n\r\n\r\n        public void FromDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n\r\n            Dictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n            Console.WriteLine(\"FromDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n        public void FromIDictionaryToCaseInsensitiveDictionaryTest()\r\n        {\r\n            IDictionary<string, string> dc2 = new Dictionary<string, string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (CaseInsensitiveDictionary<string>)dc2;\r\n\r\n            Console.WriteLine(\"FromIDictionaryToCaseInsensitiveDictionaryTest success\");\r\n        }\r\n\r\n\r\n        public void FromCaseInsensitiveDictionaryToDictionaryTest()\r\n        {\r\n\r\n            var dc2 = new CaseInsensitiveDictionary<string>();\r\n            dc2.Add(\"test1\", \"test1 value\");\r\n\r\n            var dc3 = (Dictionary<string, string>)dc2;\r\n\r\n            Console.WriteLine(\"FromCaseInsensitiveDictionaryToDictionaryTest success\");\r\n\r\n        }\r\n\r\n\r\n\r\nThe first (FromDictionaryToCaseInsensitiveDictionaryTest) and third methods (FromCaseInsensitiveDictionaryToDictionaryTest) work fine and correctly use the operators.\r\n\r\nThe second one fails with this exception: System.InvalidCastException: 'Unable to cast object of type 'System.Collections.Generic.Dictionary`2[System.String,System.String]' to type 'OpenToken.CaseInsensitiveDictionary`1[System.String]'.'\r\n.  In my opinion, FromIDictionaryToCaseInsensitiveDictionaryTest should work because the type is CaseInsensitiveDictionary and implements IDictionary.  If I do NOT have the first conversion operator, the first test method fails with this exact same error message, \r\n\r\nWith this evidence, it seems to me that something is missing when the runtime is looking for the appropriate operator.  FromIDictionaryToCaseInsensitiveDictionaryTest should work either from the Dictionary operator or automatically work because it implements the IDictionary interface.  (I cannot create an operator for IDictionary conversion because that is illegal).  \r\n\r\nPlease let me know if this is expected behavior and if there is some workaround for it.  This issue seems to be present in all versions of C#.\r\n\r\nThanks!\r\n\r\n","Url":"https://github.com/dotnet/standard/issues/1659","RelatedDescription":"Closed issue \"Generic class operators derived from interface seems broken\" (#1659)"},{"Id":"526765953","IsPullRequest":false,"CreatedAt":"2019-11-25T02:23:45","Actor":"arizvisa","Number":"1657","RawContent":null,"Title":"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed","State":"closed","Body":"Hey guys, the signature check for this package seems to be failing. Not sure what that actually means, but here's the checksum as of 2019/11/21 12:23 (CST).\r\n\r\n```\r\n# fetch https://packages.microsoft.com/fedora/30/prod/netstandard-targeting-pack-2.1.0-x64.rpm\r\nnetstandard-targeting-pack-2.1.0-x64.rpm 100% 2201944 2201944\r\n# openssl dgst -sha256 netstandard-targeting-pack-2.1.0-x64.rpm \r\nSHA256(netstandard-targeting-pack-2.1.0-x64.rpm)= 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480\r\n```\r\n\r\nThen with dnf actually complaining about it.\r\n```\r\n# dnf repository-packages packages-microsoft-com-prod install netstandard-targeting-pack-2.1                                                                                 \r\nenabling fedora-modular-debuginfo repository                                                                  \r\nenabling updates-modular-debuginfo repository       \r\nenabling updates-debuginfo repository                                                                         \r\nenabling fedora-debuginfo repository\r\nenabling rpmfusion-free-updates-debuginfo repository\r\nenabling rpmfusion-free-debuginfo repository                                                                  \r\nLast metadata expiration check: 0:13:30 ago on Thu 21 Nov 2019 12:03:15 PM CST.\r\nDependencies resolved.     \r\n==============================================================================================================\r\n Package                               Architecture  Version         Repository                          Size \r\n==============================================================================================================\r\nInstalling:\r\n netstandard-targeting-pack-2.1        x86_64        2.1.0-1         packages-microsoft-com-prod        2.1 M\r\n\r\nTransaction Summary\r\n==============================================================================================================\r\nInstall  1 Package\r\n\r\nTotal download size: 2.1 M\r\nInstalled size: 2.1 M\r\nIs this ok [y/N]: y\r\nDownloading Packages:\r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[MIRROR] netstandard-targeting-pack-2.1.0-x64.rpm: Downloading successful, but checksum doesn't match. Calculated: 45e199caf1151a750d11d9c5c7669d6e23d8dbb33da54d1d90bde55745996480(sha256)  Expected: fa194a8c12913dcec85c8d24bfc91686a7b93128b4c05346df16e2c641e2ba41(sha256) \r\n[FAILED] netstandard-targeting-pack-2.1.0-x64.rpm: No more mirrors to try - All mirrors were already tried without success\r\n```\r\n\r\nHopefully this doesn't entail the need for ir. Heh.","Url":"https://github.com/dotnet/standard/issues/1657","RelatedDescription":"Closed issue \"packages.microsoft.com: signature check for netstandard-targeting-pack-2.1.0 failed\" (#1657)"},{"Id":"527469491","IsPullRequest":true,"CreatedAt":"2019-11-23T01:19:55","Actor":"dotnet-maestro[bot]","Number":"1658","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191122.3\r\n- **Date Produced**: 11/22/2019 7:14 PM\r\n- **Commit**: 0e0d227c57e69c03427d6e668716d62cf4ceb36e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19572.3\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19572.3\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1658","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1658)"},{"Id":"526119676","IsPullRequest":true,"CreatedAt":"2019-11-20T20:02:50","Actor":"dotnet-maestro[bot]","Number":"1656","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:29f70c24-3711-40be-9246-08d6c732a216)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191119.2\r\n- **Date Produced**: 11/19/2019 6:14 PM\r\n- **Commit**: e34d933e18ba1cd393bbafcb6018e0f858d3e89e\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19569.2\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19569.2\r\n\r\n[marker]: <> (End:29f70c24-3711-40be-9246-08d6c732a216)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1656","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#1656)"},{"Id":"523456559","IsPullRequest":false,"CreatedAt":"2019-11-19T23:58:30","Actor":"SetTrend","Number":"1655","RawContent":null,"Title":"Change .NET Framework in version table from 4.6.1 to 4.7.1","State":"closed","Body":"Currently, the [.NET Standard version table](/dotnet/standard/blob/master/docs/versions.md) shows `.NET Framework 4.6.1` to be compatible with `.NET Standard >= 1.5`.\r\n\r\nHowever, a footnote clarifies that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nMoreover, many issues on [StackOverflow.com](https://stackoverflow.com/questions/49925484/you-must-add-a-reference-to-assembly-netstandard-version-2-0-0-0) and [GitHub](542) give evidence that `.NET Framework 4.6.1` is **_not_** fully compatible with `.NET Standard >= 1.5`.\r\n\r\nWouldn't it be wise then to update above version table to provide **_true_** information than just spout some wannabe information?","Url":"https://github.com/dotnet/standard/issues/1655","RelatedDescription":"Closed issue \"Change .NET Framework in version table from 4.6.1 to 4.7.1\" (#1655)"},{"Id":"523175041","IsPullRequest":false,"CreatedAt":"2019-11-15T00:02:51","Actor":"replaysMike","Number":"1654","RawContent":null,"Title":"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator","State":"open","Body":"I'm trying to use certificate based authentication using HttpClient in .Net Standard 2.0. However, I've noticed TLS negotiation doesn't succeed unless running the application in Administrator mode.\r\n\r\n```\r\nvar requestMessage = new HttpRequestMessage() {\r\n    RequestUri = new Uri(new Uri(_configuration.Endpoint), \"someendpoint\"),\r\n    Method = HttpMethod.Get\r\n};\r\nvar handler = new HttpClientHandler {\r\n    ClientCertificateOptions = ClientCertificateOption.Manual,\r\n    SslProtocols = SslProtocols.Tls12,\r\n};          \r\nhandler.ClientCertificates.Add(certificate);\r\nhandler.CheckCertificateRevocationList = false;\r\n// this is required to get around untrusted self-signed certs\r\nhandler.ServerCertificateCustomValidationCallback = (httpRequestMessage, cert, cetChain, policyErrors) => true;\r\nvar client = new HttpClient(handler);\r\nrequestMessage.Headers.Add(\"X-ARR-ClientCert\", certificate.GetRawCertDataString());\r\nvar response = await client.SendAsync(requestMessage);\r\n```\r\nThe client certificate is valid and installed in the local computer `My` store.\r\n\r\nWithout Administrator privileges a generic error is thrown: `The request was aborted: Could not create SSL/TLS secure channel` when not Administrator.\r\n\r\nAnyone have a clue as to why?","Url":"https://github.com/dotnet/standard/issues/1654","RelatedDescription":"Open issue \"HttpClient error 'Could not create SSL/TLS secure channel' when not Administrator\" (#1654)"},{"Id":"522886300","IsPullRequest":false,"CreatedAt":"2019-11-14T14:14:42","Actor":"tndata","Number":"1653","RawContent":null,"Title":"Broken link","State":"open","Body":"\r\nI found a broken link in this sentence:\r\n\r\nThe plan for handling .NET Framework 4.6.1 and .NET Standard 2.0 is outlined in the **spec**.\r\n\r\nOn this page \r\nhttps://github.com/dotnet/standard/blob/master/docs/faq.md\r\n","Url":"https://github.com/dotnet/standard/issues/1653","RelatedDescription":"Open issue \"Broken link\" (#1653)"},{"Id":"522854157","IsPullRequest":true,"CreatedAt":"2019-11-14T13:46:23","Actor":"dotnet-maestro[bot]","Number":"1652","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191113.6\r\n- **Date Produced**: 11/14/2019 7:13 AM\r\n- **Commit**: 5cee7c97d602f294e27c582d4dab81ec388f1d7b\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19563.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19563.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1652","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1652)"},{"Id":"522220691","IsPullRequest":true,"CreatedAt":"2019-11-13T13:59:11","Actor":"dotnet-maestro[bot]","Number":"1651","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191112.8\r\n- **Date Produced**: 11/13/2019 9:07 AM\r\n- **Commit**: a528006b4536e5b73227285b57d2a56116532506\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19562.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19562.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19562.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1651","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1651)"},{"Id":"522208590","IsPullRequest":true,"CreatedAt":"2019-11-13T13:01:39","Actor":"dotnet-maestro[bot]","Number":"1650","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191205.6\r\n- **Date Produced**: 12/5/2019 9:49 PM\r\n- **Commit**: 45bfe0972a7354356daf799aae88533dcd0f071a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.ApiCompat** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.GenAPI** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.GenFacades** -> 5.0.0-beta.19605.6\r\n\r\n[marker]: <> (End:13e4918d-b9bd-4474-29f1-08d6225f093d)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1650","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#1650)"},{"Id":"521547575","IsPullRequest":true,"CreatedAt":"2019-11-12T14:07:43","Actor":"dotnet-maestro[bot]","Number":"1649","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191112.1\r\n- **Date Produced**: 11/12/2019 10:06 AM\r\n- **Commit**: 21278249c6b417469737b20445a0dd045cd1b16e\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19562.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19562.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19562.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1649","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1649)"},{"Id":"520598776","IsPullRequest":true,"CreatedAt":"2019-11-10T13:31:00","Actor":"dotnet-maestro[bot]","Number":"1648","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191109.6\r\n- **Date Produced**: 11/10/2019 6:07 AM\r\n- **Commit**: bc115700c3ece60acd6b8dbe4b0bdb8f6f80c756\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19559.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19559.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19559.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1648","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1648)"},{"Id":"520424908","IsPullRequest":true,"CreatedAt":"2019-11-09T14:01:26","Actor":"dotnet-maestro[bot]","Number":"1647","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191109.1\r\n- **Date Produced**: 11/9/2019 9:20 AM\r\n- **Commit**: f546aa9e76c776f2c27e30dfb91c50d8f62da2f8\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19559.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19559.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19559.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1647","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1647)"},{"Id":"520010128","IsPullRequest":true,"CreatedAt":"2019-11-08T13:28:42","Actor":"dotnet-maestro[bot]","Number":"1646","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191107.22\r\n- **Date Produced**: 11/8/2019 8:30 AM\r\n- **Commit**: 7a318879f787e9feee9266fe9e876ee2411b548f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19557.22\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19557.22\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19557.22\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1646","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1646)"},{"Id":"519262813","IsPullRequest":true,"CreatedAt":"2019-11-07T13:26:42","Actor":"dotnet-maestro[bot]","Number":"1645","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191106.12\r\n- **Date Produced**: 11/7/2019 8:14 AM\r\n- **Commit**: a4f04476ea74c61a52168cf0b31c0281822ecad3\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19556.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19556.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19556.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1645","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1645)"},{"Id":"518467413","IsPullRequest":true,"CreatedAt":"2019-11-06T13:31:10","Actor":"dotnet-maestro[bot]","Number":"1644","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191105.8\r\n- **Date Produced**: 11/6/2019 9:54 AM\r\n- **Commit**: 9e94e2552ad869005f30f6a59eb638c544d3efdd\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19555.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19555.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19555.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1644","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1644)"},{"Id":"518175351","IsPullRequest":false,"CreatedAt":"2019-11-06T01:11:51","Actor":"tchitnis","Number":"1643","RawContent":null,"Title":"Debug.Assert causing entire test run to be aborted","State":"open","Body":"Similar to the issues reported here:\r\n\r\nhttps://github.com/Microsoft/vstest/issues/1022\r\nhttps://github.com/dotnet/coreclr/issues/22569\r\n\r\nI still see the same error/issue on .net standard 2.0 with MSTest. Sounds like it was fixed with .Net Core 3.0, can someone comment on whether a similar fix was applied to .Net Standard as well?","Url":"https://github.com/dotnet/standard/issues/1643","RelatedDescription":"Open issue \"Debug.Assert causing entire test run to be aborted\" (#1643)"},{"Id":"517769508","IsPullRequest":true,"CreatedAt":"2019-11-05T13:42:32","Actor":"dotnet-maestro[bot]","Number":"1642","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191104.10\r\n- **Date Produced**: 11/5/2019 7:44 AM\r\n- **Commit**: ee038925bde85c1c45c52f235ab09ea03b9c126c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19554.10\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19554.10\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19554.10\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1642","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1642)"},{"Id":"517192004","IsPullRequest":false,"CreatedAt":"2019-11-04T14:33:56","Actor":"peni4142","Number":"1641","RawContent":null,"Title":"Regex Bug","State":"open","Body":"Hi guys,\r\nI have a test for you\r\n\r\n[x] Bug Report\r\n\r\nThe following regex test will return an empty string in the group[0], which in my opinion can't be true.\r\n\r\n\r\n```C#\r\n        [TestMethod()]\r\n        public void BugTest()\r\n        {\r\n            Match matchEnsureObject = new Regex(\"^\\\\[MERGE-CMD: ENSURE OBJECT\\\\(([^)]+)\\\\)\\\\]$\").Match(\"[MERGE-CMD: ENSURE OBJECT(aLong) AT 1]\");\r\n            if(matchEnsureObject.Groups[0].Value == \"\")\r\n            {\r\n                throw new Exception(\"Match can't be an empty value\");\r\n            }\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/standard/issues/1641","RelatedDescription":"Open issue \"Regex Bug\" (#1641)"},{"Id":"517142571","IsPullRequest":true,"CreatedAt":"2019-11-04T13:21:47","Actor":"dotnet-maestro[bot]","Number":"1640","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191103.8\r\n- **Date Produced**: 11/4/2019 8:18 AM\r\n- **Commit**: 15e7e1569a8c3a5502c476c31b60e06d633b3efa\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19553.8\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19553.8\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1640","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1640)"},{"Id":"516826733","IsPullRequest":true,"CreatedAt":"2019-11-03T13:44:18","Actor":"dotnet-maestro[bot]","Number":"1639","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191102.6\r\n- **Date Produced**: 11/3/2019 4:48 AM\r\n- **Commit**: bfaed4d48a921a339f9691c74425bec9d2f760a1\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19552.6\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19552.6\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1639","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1639)"},{"Id":"516615712","IsPullRequest":false,"CreatedAt":"2019-11-02T14:52:31","Actor":"bernd5","Number":"1638","RawContent":null,"Title":"_dummy and _dummyPrimitive in System.Span","State":"closed","Body":"Why is it required that all net standard compliant implementations need a private field _dummy and _dummyPrimitive to provide a standard Span<T>?\r\n\r\nShould it be really part of the standard? Isn't it just an implementation detail?","Url":"https://github.com/dotnet/standard/issues/1638","RelatedDescription":"Closed issue \"_dummy and _dummyPrimitive in System.Span\" (#1638)"},{"Id":"516573954","IsPullRequest":true,"CreatedAt":"2019-11-02T12:25:00","Actor":"dotnet-maestro[bot]","Number":"1637","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191101.24\r\n- **Date Produced**: 11/2/2019 4:59 AM\r\n- **Commit**: eb41b7841f1d8edc499a8c0fbaec5e4d53187fa0\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19551.24\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19551.24\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1637","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1637)"},{"Id":"516079198","IsPullRequest":true,"CreatedAt":"2019-11-01T12:30:54","Actor":"dotnet-maestro[bot]","Number":"1636","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.13\r\n- **Date Produced**: 11/1/2019 5:06 AM\r\n- **Commit**: a24db0ba5666f46f50649810fe698ad267b60331\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.13\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.13\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1636","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1636)"},{"Id":"515387745","IsPullRequest":true,"CreatedAt":"2019-10-31T12:31:11","Actor":"dotnet-maestro[bot]","Number":"1635","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191031.1\r\n- **Date Produced**: 10/31/2019 9:35 AM\r\n- **Commit**: 18e82cabc1d2cddad8ff07ae96edb7296d9fad9d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19531.1\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19531.1\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1635","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1635)"},{"Id":"514625134","IsPullRequest":true,"CreatedAt":"2019-10-30T12:31:21","Actor":"dotnet-maestro[bot]","Number":"1634","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191029.15\r\n- **Date Produced**: 10/30/2019 3:37 AM\r\n- **Commit**: 8ee61dd103ff55445f8baf3137bb768ed86370d9\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19529.15\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19529.15\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1634","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1634)"},{"Id":"513879230","IsPullRequest":true,"CreatedAt":"2019-10-29T12:32:35","Actor":"dotnet-maestro[bot]","Number":"1633","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191028.12\r\n- **Date Produced**: 10/29/2019 2:19 AM\r\n- **Commit**: 15e1ea023d2818b6083a61c7447a720ff3779482\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19528.12\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19528.12\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1633","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1633)"},{"Id":"513668220","IsPullRequest":false,"CreatedAt":"2019-10-29T03:17:07","Actor":"2300070","Number":"1632","RawContent":null,"Title":"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.","State":"open","Body":"I define a class to inherit existen generic type definition, however, the base type has one generic argument, the type I processing has two generic argument, and I want the second generic as the generic argument of base type, so I write the code below, but the strange thing is: if the first generic argument is class type(though it is not used by any place), it works fine, but if I change it to a value type, an exception will thrown('Unable to read memory'), is there any problem while the 'TypeBuilder' class processing the generic arguments?\r\n\r\n\t[TestClass]\r\n\tpublic class GeneralTest\r\n\t{\r\n\t\t[TestMethod]\r\n\t\tpublic void TestDefineGenericType()\r\n\t\t{\r\n\t\t\tAssemblyBuilder assembly = AssemblyBuilder.DefineDynamicAssembly(new AssemblyName(\"GeneralTest\"), AssemblyBuilderAccess.RunAndCollect);\r\n\t\t\tModuleBuilder module = assembly.DefineDynamicModule(\"GeneralTest.dll\");\r\n\r\n\t\t\t//define type\r\n\t\t\tTypeBuilder builder = module.DefineType(\"TestGenericClass\");\r\n\t\t\tGenericTypeParameterBuilder[] arguments = builder.DefineGenericParameters(\"TValue1\", \"TValue2\");\r\n\t\t\t\r\n\t\t\tbuilder.SetParent(typeof(TestClass<>).MakeGenericType(arguments[1]));\r\n\r\n\t\t\t//define constructor that invoke base constructor\r\n\t\t\tConstructorBuilder constructor = builder.DefineConstructor(MethodAttributes.Public, CallingConventions.Standard, new Type[] {arguments[1] });\r\n\t\t\tILGenerator generator = constructor.GetILGenerator();\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_0);\r\n\t\t\tgenerator.Emit(OpCodes.Ldarg_1);\r\n\t\t\tgenerator.Emit(OpCodes.Call, typeof(TestClass<>).GetConstructors(BindingFlags.Public | BindingFlags.Instance)[0]);\r\n\t\t\tgenerator.Emit(OpCodes.Ret);\r\n\t\t\t\r\n\t\t\tType builtType = builder.CreateType();\r\n\t\t\tType testType;\r\n\t\t\tTestClass<string> test;\r\n\r\n\t\t\t//this test is okay.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(object), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\r\n\t\t\t//change the first generic argument to value type, exception will be thrown.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(int), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\t//Assert.AreEqual(string.Empty, test.Value);//ERROR WHILE READ THE FIELD OF 'test'\r\n\r\n\t\t\t\r\n\t\t\t//change the first generic argument to class type back, exception disapear.\r\n\t\t\ttestType = builtType.MakeGenericType(typeof(string), typeof(string));\r\n\t\t\ttest = Activator.CreateInstance(testType, string.Empty) as TestClass<string>;\r\n\t\t\tAssert.AreEqual(typeof(string), test.ValueType);\r\n\t\t\tAssert.AreEqual(string.Empty, test.Value);//OK\r\n\t\t}\r\n\r\n\t\tpublic class TestClass<TValue>\r\n\t\t{\r\n\t\t\tpublic readonly TValue Value;\r\n\r\n\t\t\tpublic Type ValueType => typeof(TValue);\r\n\r\n\t\t\tpublic TestClass(TValue value)\r\n\t\t\t{\r\n\t\t\t\tthis.Value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}","Url":"https://github.com/dotnet/standard/issues/1632","RelatedDescription":"Open issue \"A bug while the 'TypeBuilder' class processing the value type generic argument for generic definition.\" (#1632)"},{"Id":"513270667","IsPullRequest":true,"CreatedAt":"2019-10-28T12:31:05","Actor":"dotnet-maestro[bot]","Number":"1631","RawContent":null,"Title":"[master] Update dependencies from dotnet/corefx","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n## From https://github.com/dotnet/corefx\r\n- **Build**: 20191027.5\r\n- **Date Produced**: 10/28/2019 8:28 AM\r\n- **Commit**: 17c14aa2b50cfb5920d03ea8835c9a4932b5359c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Reflection.Emit** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.ILGeneration** -> 5.0.0-alpha.1.19527.5\r\n  - **System.Reflection.Emit.Lightweight** -> 5.0.0-alpha.1.19527.5\r\n\r\n[marker]: <> (End:2a9b120a-74e9-4ac8-c08c-08d6da235811)\r\n\r\n","Url":"https://github.com/dotnet/standard/pull/1631","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/corefx\" (#1631)"}],"ResultType":"GitHubIssue"},"CoreFx-Issues":{"Issues":[{"Id":"533572448","IsPullRequest":true,"CreatedAt":"2019-12-07T00:10:52","Actor":"mmitche","Number":"42757","RawContent":null,"Title":"[release/3.1] Switch to using 3.1100 SDK to build 3.1","State":"closed","Body":"Required for upstack components, so this is for consistency.","Url":"https://github.com/dotnet/corefx/pull/42757","RelatedDescription":"Closed or merged PR \"[release/3.1] Switch to using 3.1100 SDK to build 3.1\" (#42757)"},{"Id":"533852278","IsPullRequest":false,"CreatedAt":"2019-12-06T09:42:49","Actor":"freesix","Number":"42761","RawContent":null,"Title":"Want to contribute to the Project but don't know where to start","State":"open","Body":"Hi,\r\n\r\nCan I contribute to the Project? \r\n\r\nI'd like to improve my .Net skills.\r\n\r\nI running VS 2017.\r\n\r\nWhere do I start? do I need to clone this repo to my PC?","Url":"https://github.com/dotnet/corefx/issues/42761","RelatedDescription":"Open issue \"Want to contribute to the Project but don't know where to start\" (#42761)"},{"Id":"533687089","IsPullRequest":true,"CreatedAt":"2019-12-06T02:30:55","Actor":"dotnet-maestro[bot]","Number":"42760","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191202.2\r\n- **Date Produced**: 12/2/2019 9:49 PM\r\n- **Commit**: 53826cad1db670d13c424f1afe048b3aad92f7ba\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.1-servicing.19602.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.1-servicing.19602.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.1-servicing.19602.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42760","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42760)"},{"Id":"533685254","IsPullRequest":false,"CreatedAt":"2019-12-06T01:03:54","Actor":"chenyj796","Number":"42759","RawContent":null,"Title":"System.Threading.Channels.Channel<T>: After Complete with exception, the ReadAsync and ReadAllAsync method throws different exception","State":"open","Body":"I have some codes as below:\r\n```csharp\r\n\tclass Program\r\n\t{\r\n\t\tclass TestException : Exception\r\n\t\t{\r\n\t\t\tpublic TestException()\r\n\t\t\t\t: base(\"This is for test channel complete method with exception\")\r\n\t\t\t{\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tstatic async Task Main(string[] args)\r\n\t\t{\r\n\t\t\tvar channel = Channel.CreateUnbounded<string>();\r\n\t\t\tchannel.Writer.Complete(new TestException());\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tawait channel.Reader.ReadAsync();\r\n\t\t\t}\r\n\t\t\tcatch (Exception ex)\r\n\t\t\t{\r\n\t\t\t\tConsole.WriteLine($\"ReadAsync throws {ex.GetType().Name}: {ex.Message}\");\r\n\t\t\t}\r\n\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tawait foreach (var item in channel.Reader.ReadAllAsync())\r\n\t\t\t\t{\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcatch (Exception ex)\r\n\t\t\t{\r\n\t\t\t\tConsole.WriteLine($\"ReadAllAsync throws {ex.GetType().Name}: {ex.Message}\");\r\n\t\t\t}\r\n\r\n\t\t\tConsole.ReadLine();\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n```\r\n\r\nAfter run it, I get the following output:\r\n```\r\nReadAsync throws ChannelClosedException: The channel has been closed.\r\nReadAllAsync throws TestException: This is for test channel complete method with exception\r\n```\r\n\r\nI hope the ReadAsync also throws TestException just as ReadAllAsync does.","Url":"https://github.com/dotnet/corefx/issues/42759","RelatedDescription":"Open issue \"System.Threading.Channels.Channel<T>: After Complete with exception, the ReadAsync and ReadAllAsync method throws different exception\" (#42759)"},{"Id":"533603733","IsPullRequest":true,"CreatedAt":"2019-12-05T22:44:11","Actor":"carlossanlop","Number":"42758","RawContent":null,"Title":"[release/3.1] .NET Core 3.1.1 Intellisense bump (English)","State":"closed","Body":"@mmitche \r\n\r\nCreated the package with these changes:\r\nhttps://github.com/dotnet/corefxlab/pull/2799\r\n\r\nPushed the package using these instructions:\r\nhttps://github.com/dotnet/core-eng/tree/master/Documentation/Tools/dotnet-core-push-oneoff-package\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42758","RelatedDescription":"Closed or merged PR \"[release/3.1] .NET Core 3.1.1 Intellisense bump (English)\" (#42758)"},{"Id":"532647597","IsPullRequest":false,"CreatedAt":"2019-12-04T19:43:41","Actor":"mshobohm","Number":"42755","RawContent":null,"Title":"FileNotFoundException with FileInfo.Length on Linux if binary filename contains a 0xDF-Byte ","State":"closed","Body":"Special characters in Linux filenames can confuse the FileInfo.Length property, resulting in FileNotFoundException as shown in the attached test case , see also readme.txt.\r\n\r\n[SSharpException.zip](https://github.com/dotnet/corefx/files/3921699/SSharpException.zip)\r\n","Url":"https://github.com/dotnet/corefx/issues/42755","RelatedDescription":"Closed issue \"FileNotFoundException with FileInfo.Length on Linux if binary filename contains a 0xDF-Byte \" (#42755)"},{"Id":"532322237","IsPullRequest":true,"CreatedAt":"2019-12-03T23:25:20","Actor":"mmitche","Number":"42754","RawContent":null,"Title":"[release/3.1] Stabilize package versions","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42754","RelatedDescription":"Closed or merged PR \"[release/3.1] Stabilize package versions\" (#42754)"},{"Id":"529559765","IsPullRequest":true,"CreatedAt":"2019-12-02T19:42:54","Actor":"wfurt","Number":"42743","RawContent":null,"Title":"WIP: test some ideas","State":"closed","Body":"this is only to run test. I will close after. ","Url":"https://github.com/dotnet/corefx/pull/42743","RelatedDescription":"Closed or merged PR \"WIP: test some ideas\" (#42743)"},{"Id":"529885496","IsPullRequest":true,"CreatedAt":"2019-12-02T19:42:53","Actor":"Gnbrkm41","Number":"42747","RawContent":null,"Title":"Add issue / pull request template explaining repo consolidation","State":"closed","Body":"Related: https://github.com/dotnet/corefx/issues/42733\r\n\r\nI left the PR template commented out, since I heard the repo will still be used for servicing fixes (so PRs would be opened here for legitimate reasons in future)\r\n\r\nNits welcome, I'm terrible when it comes to my English skills 😄. Also wanted to give a go at modifying README.md but I guess someone else could do it better, and repo descriptions... well, I don't have the perms!\r\n\r\ncc @danmosemsft ","Url":"https://github.com/dotnet/corefx/pull/42747","RelatedDescription":"Closed or merged PR \"Add issue / pull request template explaining repo consolidation\" (#42747)"},{"Id":"531353533","IsPullRequest":true,"CreatedAt":"2019-12-02T18:44:52","Actor":"dotnet-maestro[bot]","Number":"42753","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191128.1\r\n- **Date Produced**: 11/28/2019 5:05 PM\r\n- **Commit**: 1423ad5f3155362303ad9453c5604776040f9bbd\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-servicing.19578.1\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-servicing.19578.1\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-servicing.19578.1\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42753","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42753)"},{"Id":"531306663","IsPullRequest":false,"CreatedAt":"2019-12-02T18:04:26","Actor":"LeroyK","Number":"42752","RawContent":null,"Title":"Allow (de)serialization of abstract types with JsonSerializer when there is a JsonConverter for that type","State":"closed","Body":"# Issue Title\r\n\r\nAllow (de)serialization of abstract types with ``JsonSerializer`` when there is a ``JsonConverter`` for that type\r\n\r\n# General\r\n\r\nWhen you try to serialize or deserialize a type that is abstract, ``System.Text.Json.JsonSerializer`` currently throws a ``NotSupportedException`` with the message:\r\n\r\n> Deserialization of reference types without parameterless constructor is not supported.\r\n\r\nJsonSerializer should first check if the list of JsonConverters supports the abstract type and throw this exception only when there is no JsonConverter capable of converting the type.\r\n\r\nWe currently have a JsonConverter that supports polymorphism and because of this issue we cannot make the base type abstract.\r\n\r\n# Additional info\r\n.NET Core version: 3.0.1","Url":"https://github.com/dotnet/corefx/issues/42752","RelatedDescription":"Closed issue \"Allow (de)serialization of abstract types with JsonSerializer when there is a JsonConverter for that type\" (#42752)"},{"Id":"530466840","IsPullRequest":false,"CreatedAt":"2019-11-30T21:01:40","Actor":"kevin-montrose","Number":"42751","RawContent":null,"Title":"Calling Latin1 / iso-8859-1 Encoder Convert method iteratively produces different results than Encoding GetBytes on \"naughty\" string","State":"closed","Body":"Another bit of odd behavior with [`Encoder`](https://docs.microsoft.com/en-us/dotnet/api/system.text.encoder?view=netcore-3.0), this time with the Latin1 encoding.\r\n\r\nFor the [\"naughty\" string ](https://github.com/minimaxir/big-list-of-naughty-strings)`@\"0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟\"` calling `Encoding.GetBytes(...)` produces a different result than iteratively calling `Encoder.Convert(...)`.  I have a [repository with a reproduction](https://github.com/kevin-montrose/Latin1Repro/blob/master/Latin1Repro/Program.cs#L20) (also shows off issue #42750 , but I suspect these are unrelated issues - I just happened to find them at the same time).\r\n\r\nFor that string, the issue seems to be that `Encoder` doesn't write the final byte during flushing.\r\n\r\nLatin1 is sufficiently weird of an encoding that this may be expected?\r\n\r\nA smaller reproduction:\r\n\r\n```csharp\r\nvar encoding = Encoding.GetEncoding(\"iso-8859-1\");\r\nvar text = @\"0️⃣ 1️⃣ 2️⃣ 3️⃣ 4️⃣ 5️⃣ 6️⃣ 7️⃣ 8️⃣ 9️⃣ 🔟\";\r\nvar destBufferSize = 2;\r\n\r\nvar encodingBytes = encoding.GetBytes(text);\r\nvar encoder = encoding.GetEncoder();\r\n\r\nvar chars = text.ToCharArray();\r\n\r\nvar sourceSpan = chars.AsSpan();\r\nvar destSpan = new byte[destBufferSize].AsSpan();\r\nvar encoderBytes = new List<byte>();\r\n\r\nvar completed = false;\r\n\r\n// write everything in sourceSpan\r\nwhile (!completed)\r\n{\r\n    var flush = sourceSpan.Length == 0;\r\n    encoder.Convert(sourceSpan, destSpan, flush, out var charsConsumed, out var bytesProduced, out completed);\r\n    encoderBytes.AddRange(destSpan.Slice(0, bytesProduced).ToArray());\r\n\r\n    sourceSpan = sourceSpan.Slice(charsConsumed);\r\n}\r\n\r\nvar eq = encodingBytes.SequenceEqual(encoderBytes);\r\n\r\nif (eq)\r\n{\r\n    return;\r\n}\r\n\r\nvar encodingAsStr = encoding.GetString(encodingBytes);\r\nvar encoderAsStr = encoding.GetString(encoderBytes.ToArray());\r\n\r\nConsole.WriteLine($@\"Encoding Convert failure for destBufferSize={destBufferSize} - {encodingBytes.Length}:\"\"{encodingAsStr}\"\" vs {encoderBytes.Count}:\"\"{encoderAsStr}\"\"\");\r\n```\r\n\r\nThis prints when it (probably) shouldn't.\r\n\r\nThis behavior is quite sensitive to the value of `destBufferSize`, happening for this particular string at values 2, 4, 5, 8, 10, 20, 40 ,& 41 (note that 42 is the size the destination buffer needs to be for a single `Convert` call to be sufficient).","Url":"https://github.com/dotnet/corefx/issues/42751","RelatedDescription":"Closed issue \"Calling Latin1 / iso-8859-1 Encoder Convert method iteratively produces different results than Encoding GetBytes on \"naughty\" string\" (#42751)"},{"Id":"530463719","IsPullRequest":false,"CreatedAt":"2019-11-30T20:58:46","Actor":"kevin-montrose","Number":"42750","RawContent":null,"Title":"UTF7 Encoder Convert method fails to make progress on \"naughty\" string","State":"closed","Body":"I noticed some odd behavior with UTF7's [`Encoder`](https://docs.microsoft.com/en-us/dotnet/api/system.text.encoder?view=netcore-3.0), and failing to make progress on a [\"naughty\" string](https://github.com/minimaxir/big-list-of-naughty-strings).\r\n\r\nNamely, adapting the example code provided for [`Convert`](https://docs.microsoft.com/en-us/dotnet/api/system.text.encoder.convert?view=netcore-3.0) will spin forever (failing to set `completed == true`) on `@\"00˙Ɩ$-\"`.\r\n\r\nUTF7 is sufficiently weird that maybe this is expected, and I just don't understand it?\r\n\r\nI have a [repository with a repro](https://github.com/kevin-montrose/Latin1Repro/blob/master/Latin1Repro/Program.cs#L19) (it also has some Latin1 stuff that I'll report in a separate issue, as it's probably unrelated).\r\n\r\nA smaller version of what's in the repo:\r\n\r\n```csharp\r\nvar destBufferSize = 16;\r\nvar encoding = System.Text.Encoding.UTF7;\r\nvar text = @\"00˙Ɩ$-\";\r\n\r\nvar encoder = encoding.GetEncoder();\r\n\r\nvar chars = text.ToCharArray();\r\n\r\nvar sourceSpan = chars.AsSpan();\r\nvar destSpan = new byte[destBufferSize].AsSpan();\r\nvar encoderBytes = new List<byte>();\r\n\r\nvar completed = false;\r\n\r\nwhile (!completed)\r\n{\r\n    var flush = sourceSpan.Length == 0;\r\n    encoder.Convert(sourceSpan, destSpan, flush, out var charsConsumed, out var bytesProduced, out completed);\r\n    encoderBytes.AddRange(destSpan.Slice(0, bytesProduced).ToArray());\r\n\r\n    sourceSpan = sourceSpan.Slice(charsConsumed);\r\n\r\n    if (charsConsumed == 0 && bytesProduced == 0 && flush)\r\n    {\r\n        Console.WriteLine($@\"Encoding Convert failure for destBufferSize={destBufferSize}, stopped making progress\");\r\n        return;\r\n    }\r\n}\r\n```\r\n\r\nWill print, when it (probably) shouldn't.","Url":"https://github.com/dotnet/corefx/issues/42750","RelatedDescription":"Closed issue \"UTF7 Encoder Convert method fails to make progress on \"naughty\" string\" (#42750)"},{"Id":"530147717","IsPullRequest":false,"CreatedAt":"2019-11-29T04:14:37","Actor":"oliverjanik","Number":"42749","RawContent":null,"Title":"Include System.Linq.Async from https://github.com/dotnet/reactive into corefx","State":"open","Body":"I am very happy we have the new `IAsyncEnumerable` and some c# sugar to go with it in .net core 3.\r\n\r\nI think it would be even better if it had batteries included just like `IEnumerable`.\r\n\r\n👍 ","Url":"https://github.com/dotnet/corefx/issues/42749","RelatedDescription":"Open issue \"Include System.Linq.Async from https://github.com/dotnet/reactive into corefx\" (#42749)"},{"Id":"529960264","IsPullRequest":false,"CreatedAt":"2019-11-28T19:06:35","Actor":"sulemanb","Number":"42748","RawContent":null,"Title":"Error: GSSAPI operation failed with error - An unsupported mechanism was requested. NTLM authentication requires the GSSAPI plugin 'gss-ntlmssp'","State":"closed","Body":"Hi All,\r\n\r\nI am facing this error message when my api (dotnet core 3) tries to call another api endpoint.\r\nI am packaging my apis as docker images on the on-prem k8s docker enterprise cluster.\r\n\r\nMy docker file is as follows:\r\n\r\n`\r\n#FROM microsoft/dotnet:2.2-aspnetcore-runtime-alpine AS runtime\r\nFROM ddcdtr.bayer.cnb/microsoft/dotnet-core-aspnet:3.0 AS runtime\r\n\r\nWORKDIR /app\r\n# Only Metadata\r\n#EXPOSE 80\r\nENV PORT=8080\r\nENV ASPNETCORE_URLS=http://+:${PORT}\r\n\r\nENV HTTP_PROXY=${http_proxy}\r\nENV HTTPS_PROXY=${https_proxy}\r\n\r\n\r\nEXPOSE $PORT\r\n\r\n\r\n#ARG ASPNETCORE_ENVIRONMENT\r\n#ENV ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}\r\n# https://rehansaeed.com/securing-asp-net-core-in-docker/\r\nENV COMPlus_EnableDiagnostics=0\r\n\r\n#FROM microsoft/dotnet:2.2-sdk AS build\r\nFROM ddcdtr.bayer.cnb/microsoft/dotnet-core-sdk:3.0 AS build\r\n\r\nRUN apt-get update\r\n#RUN apt-get -y install gss-ntlmssp\r\nRUN apt-get update && apt-get install -y --no-install-recommends gss-ntlmssp\r\n\r\n\r\n\r\nWORKDIR /src\r\n#ARG NUGET_CONFIG\r\n#RUN echo $NUGET_CONFIG > NuGet.config\r\n\r\nCOPY Bardo.Data/Bardo.Data.csproj Bardo.Data/\r\nCOPY GBoxApi/GBoxApi.csproj GBoxApi/\r\nCOPY GBoxApi.IntegrationTests/GBoxApi.IntegrationTests.csproj GBoxApi.IntegrationTests/\r\nCOPY GBoxData/GBoxData.csproj GBoxData/\r\n\r\n\r\nRUN dotnet restore GBoxApi/GBoxApi.csproj\r\n\r\nCOPY . .\r\nWORKDIR /src/GBoxApi\r\n\r\nRUN dotnet build -c Release -o /app\r\n\r\nFROM build AS publish\r\n\r\nRUN dotnet publish -c Release -o /app\r\n\r\nFROM runtime AS final\r\n\r\n###\r\n\r\n# Create a group and user\r\n#RUN addgroup -S -g 1000 appgroup \\\r\n#&& adduser -S -u 1000 -G appgroup -s /bin/sh appuser\r\n\r\n###\r\n\r\n\r\nWORKDIR /app\r\n\r\nRUN mkdir -p /local/\r\n\r\nCOPY --from=publish /app .\r\n\r\nCOPY --from=build /src/GBoxApi/GBoxApi.xml .\r\n#COPY --from=build . .\r\n\r\n#RUN chown appuser:appgroup /local\r\n#RUN chown appuser:appgroup /app\r\n\r\n\r\n\r\nUSER root:root\r\n\r\n# Tell docker that all future commands should run as the appuser user\r\n#USER appuser\r\n\r\n\r\nENTRYPOINT [\"dotnet\", \"GBoxApi.dll\"]\r\n\r\n`\r\n\r\nbuild and deployment is all fine, but at runtime, my application throws this error after (log entry 4) at client.SendAsync(request);\r\n\r\n`\r\npublic async Task<Permission> GetPermissionsAsync(string identity, string context)\r\n        {\r\n            string log = \"/n Start: \";\r\n            try\r\n            {\r\n                Permission result = null;\r\n                var permissionUri = $\"{ _config[\"PermissionAPI:BaseUrl\"] }?digitalIdentity={identity}&apiContext={context}\";\r\n                log += \"1 \";\r\n                var request = new HttpRequestMessage(HttpMethod.Get, permissionUri);\r\n                log += \"2 \";\r\n                request.Headers.Add(\"Accept\", \"application/json\");\r\n                log += \"3 \";\r\n\r\n                var client = _clientFactory.CreateClient();\r\n                log += \"4 PermissionUri: \" + permissionUri;\r\n\r\n                var response = await client.SendAsync(request);\r\n\r\n`\r\n\r\ni have also tried other base images for (sdk, runtime) like dotnet-core-aspnet:3.0-alpine and dotnet-core-sdk:3.0-alpine, but still same problem.\r\n","Url":"https://github.com/dotnet/corefx/issues/42748","RelatedDescription":"Closed issue \"Error: GSSAPI operation failed with error - An unsupported mechanism was requested. NTLM authentication requires the GSSAPI plugin 'gss-ntlmssp'\" (#42748)"},{"Id":"529660113","IsPullRequest":false,"CreatedAt":"2019-11-28T11:33:13","Actor":"DaRosenberg","Number":"42746","RawContent":null,"Title":"InvariantCulture string comparison is inconsistent between Windows and macOS","State":"closed","Body":"Verified in .NET Core 3.0 on Windows 10 1909 and macOS 10.15.1.\r\n\r\nThis expression:\r\n\r\n```cs\r\nSystem.StringComparer.InvariantCulture.Compare(\".\", \"_\")\r\n```\r\n\r\nReturns `-1` on Windows, but `1` on macOS.\r\n\r\nSince the invariant culture is being used, expected result is for string comparison to behave the same.\r\n\r\nThis is a blocking issue for us, because we are building a cross-platform tool whose output goes into shared data storage, and contains sorted strings. Currently, Windows users and Mac users overwrite each others' data with changes in sorting.","Url":"https://github.com/dotnet/corefx/issues/42746","RelatedDescription":"Closed issue \"InvariantCulture string comparison is inconsistent between Windows and macOS\" (#42746)"},{"Id":"529636218","IsPullRequest":true,"CreatedAt":"2019-11-28T02:02:44","Actor":"dotnet-maestro[bot]","Number":"42745","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19577.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:a5bda823-89f1-4ce6-0d43-08d6910cd73b)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42745","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#42745)"},{"Id":"529634564","IsPullRequest":true,"CreatedAt":"2019-11-28T01:46:00","Actor":"dotnet-maestro[bot]","Number":"42744","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191127.5\r\n- **Date Produced**: 11/27/2019 11:33 PM\r\n- **Commit**: 99c6b59a8afff97fe891341b39abe985f1d3c565\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions** -> 2.4.1-beta.19577.5\r\n  - **Microsoft.DotNet.XUnitConsoleRunner** -> 2.5.1-beta.19577.5\r\n  - **Microsoft.DotNet.VersionTools.Tasks** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.ApiCompat** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Configuration** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Feed** -> 2.2.0-beta.19577.5\r\n  - **Microsoft.DotNet.Build.Tasks.Packaging** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CodeAnalysis** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.CoreFxTesting** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenAPI** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.GenFacades** -> 1.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19577.5\r\n  - **Microsoft.DotNet.RemoteExecutor** -> 1.0.0-beta.19577.5\r\n\r\n[marker]: <> (End:8e91fa34-ea12-4ebd-d4c2-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42744","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#42744)"},{"Id":"529449217","IsPullRequest":true,"CreatedAt":"2019-11-27T18:00:49","Actor":"mmitche","Number":"42741","RawContent":null,"Title":"[release/3.0] Stabilize package versions","State":"closed","Body":"","Url":"https://github.com/dotnet/corefx/pull/42741","RelatedDescription":"Closed or merged PR \"[release/3.0] Stabilize package versions\" (#42741)"},{"Id":"529195231","IsPullRequest":false,"CreatedAt":"2019-11-27T12:05:29","Actor":"KamranShahid","Number":"42738","RawContent":null,"Title":".net core 3.0 getting System.Threading.Tasks.TaskCanceledException: The operation was canceled.","State":"closed","Body":"I have .net core 3.0 web api project where i am calling my .net core 3.0 service (systemd in linux) httplistener calls.\r\nI am getting error\r\n\r\n```\r\nawait client.PostAsync(url, content).ConfigureAwait(false)\r\nSystem.Threading.Tasks.TaskCanceledException: The operation was canceled.\r\n   at System.Net.Http.ConnectHelper.ConnectAsync(String host, Int32 port, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean allowHttp2, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.CreateHttp11ConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.GetHttpConnectionAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithRetryAsync(HttpRequestMessage request, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.DiagnosticsHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.FinishSendAsyncBuffered(Task`1 sendTask, HttpRequestMessage request, CancellationTokenSource cts, Boolean disposeCts)\r\n```\r\n\r\nMy calling method is \r\n\r\n```\r\n\t\tpublic static async Task<GenerricApiResponsewithResult> ProcessWebRequestWithResponsetype<T>(string url, string friendlyName, T req)\r\n        {\r\n            var obj = new GenerricApiResponsewithResult();\r\n            try\r\n            {\r\n                using (var client = new HttpClient())\r\n                {\r\n                    var jsonRequest = JsonSerializer.Serialize(req);\r\n                    client.DefaultRequestHeaders.ExpectContinue = false;\r\n                    var content = new StringContent(jsonRequest);\r\n                    content.Headers.Clear();\r\n                    content.Headers.ContentType = new MediaTypeHeaderValue(\"application/json\");\r\n                    \r\n                    var response = await client.PostAsync(url, content).ConfigureAwait(false);\r\n                    obj.HttpResponseCode = response.StatusCode;\r\n                    if (response.StatusCode == HttpStatusCode.OK)\r\n                    {\r\n                        obj.Response = await response.Content.ReadAsStringAsync();\r\n                        if (obj.Response != null && IsValidJson(obj.Response))\r\n                        {\r\n                            obj = JsonSerializer.Deserialize<GenerricApiResponsewithResult>(obj.Response);\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n\r\n                        obj.IsError = true;\r\n                        obj.Response = response.StatusCode.ToString();\r\n                    }\r\n                    client.Dispose();\r\n                }\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                obj.IsError = true;\r\n                obj.Exception = ex;\r\n\r\n                obj.Response = $\"Error Processing a call to {friendlyName}. Please see logs\";\r\n                Logger.Fatal(obj.Response + \" \" + ex.Message, ex);\r\n            }\r\n            return obj;\r\n        }\r\n```\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42738","RelatedDescription":"Closed issue \".net core 3.0 getting System.Threading.Tasks.TaskCanceledException: The operation was canceled.\" (#42738)"},{"Id":"528993585","IsPullRequest":true,"CreatedAt":"2019-11-27T05:44:10","Actor":"dotnet-maestro-bot","Number":"42728","RawContent":null,"Title":"[automated] Merge branch 'release/3.0' => 'release/3.1'","State":"closed","Body":"I detected changes in the release/3.0 branch which have not been merged yet to release/3.1. I'm a robot and am configured to help you automatically keep release/3.1 up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.0 by the following committers:\n\n* @Anipik\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.0\r\ngit pull --ff-only\r\ngit checkout release/3.1\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.0\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.0-to-release/3.1'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull https://github.com/dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.0-to-release/3.1 release/3.1\r\ngit pull git@github.com:dotnet-maestro-bot/corefx merge/release/3.0-to-release/3.1\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/corefx HEAD:merge/release/3.0-to-release/3.1\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/corefx/pull/42728","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.0' => 'release/3.1'\" (#42728)"},{"Id":"529121223","IsPullRequest":false,"CreatedAt":"2019-11-27T05:17:34","Actor":"kamaruddin-desai","Number":"42737","RawContent":null,"Title":"Support for reading the windows events from the  Linux host","State":"open","Body":"I was happy that when I heard the .NET Core can be used to build apps onto the across the platforms.\r\nSpecifically the Linux one. I've code snippet which reads the windows event from the windows localhost or the remote windows host. For that purpose, I've created the below issue and the code snippet that I am using can be seen here[https://github.com/dotnet/corefx/issues/40925](https://github.com/dotnet/corefx/issues/40925).\r\n\r\nThi issue focus on the milestone to \r\n\r\n> **Support for reading the windows events from the  Linux host**\r\n\r\n\r\n","Url":"https://github.com/dotnet/corefx/issues/42737","RelatedDescription":"Open issue \"Support for reading the windows events from the  Linux host\" (#42737)"},{"Id":"529052742","IsPullRequest":true,"CreatedAt":"2019-11-27T03:28:09","Actor":"Anipik","Number":"42735","RawContent":null,"Title":"disabling publishing of stable packages on 3.1","State":"closed","Body":"I missed to disable the packages build in branding due to which internal build was failing","Url":"https://github.com/dotnet/corefx/pull/42735","RelatedDescription":"Closed or merged PR \"disabling publishing of stable packages on 3.1\" (#42735)"},{"Id":"529082915","IsPullRequest":false,"CreatedAt":"2019-11-27T03:03:40","Actor":"Dogwei","Number":"42736","RawContent":null,"Title":"What is the difference between '_methodPtrAux' and '_methodPtr' in The private fields for 'System.Delegate'?","State":"closed","Body":"As title.\r\nI need this knowledge.\r\nPlease.","Url":"https://github.com/dotnet/corefx/issues/42736","RelatedDescription":"Closed issue \"What is the difference between '_methodPtrAux' and '_methodPtr' in The private fields for 'System.Delegate'?\" (#42736)"},{"Id":"529045950","IsPullRequest":false,"CreatedAt":"2019-11-27T00:32:52","Actor":"replaysMike","Number":"42734","RawContent":null,"Title":"PublishTrimmed=true issue - TypeInitializationException in System.Runtime.Serialization.Formatters","State":"open","Body":"When using PublishTrimmed=true for publishing single file applications in .net core, I get a runtime error when performing binary serialization/deserialization in System.Runtime.Serialization.Formatters library.\r\n\r\n```\r\n<PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>netcoreapp3.0</TargetFramework>\r\n    <PublishTrimmed>true</PublishTrimmed>\r\n    <PublishReadyToRun>true</PublishReadyToRun>\r\n    <PublishReadyToRunShowWarnings>true</PublishReadyToRunShowWarnings>\r\n    <PublishSingleFile>true</PublishSingleFile>\r\n    <RuntimeIdentifier>win-x64</RuntimeIdentifier>\r\n    <RuntimeIdentifiers>win-x64;linux-x64</RuntimeIdentifiers>\r\n  </PropertyGroup>\r\n```\r\nThe error during runtime received is:\r\n\r\n```\r\nSystem.TypeInitializationException: The type initializer for 'System.Runtime.Serialization.Formatters.Binary.Converter' threw an exception.\r\n ---> System.IO.FileNotFoundException: Could not load file or assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. The system cannot find the file specified.\r\nFile name: 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\n   at System.Reflection.RuntimeAssembly.nLoad(AssemblyName fileName, String codeBase, RuntimeAssembly assemblyContext, StackCrawlMark& stackMark, Boolean throwOnFileNotFound, AssemblyLoadContext assemblyLoadContext)\r\n   at System.Reflection.RuntimeAssembly.InternalLoadAssemblyName(AssemblyName assemblyRef, StackCrawlMark& stackMark, AssemblyLoadContext assemblyLoadContext)\r\n   at System.Reflection.Assembly.Load(String assemblyString)\r\n   at System.Runtime.Serialization.Formatters.Binary.Converter..cctor()\r\n\r\n\r\n   --- End of inner exception stack trace ---\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryParser.get_SystemAssemblyInfo()\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryParser.ReadObjectWithMapTyped(BinaryObjectWithMapTyped record)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryParser.ReadObjectWithMapTyped(BinaryHeaderEnum binaryHeaderEnum)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryParser.Run()\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize(BinaryParser serParser, Boolean fCheck)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream, Boolean check)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream)\r\n```\r\n\r\nI also tried adding the following to address this error:\r\n```\r\n<ItemGroup>\r\n    <TrimmerRootAssembly Include=\"System.Runtime.Serialization.Formatters.Binary.Converter\" />\r\n</ItemGroup>\r\n```\r\nbut that prevents it from publishing as it returns an error: `C:\\Program Files\\dotnet\\sdk\\3.0.100\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.ILLink.targets(87,5): error MSB6006: \"dotnet.exe\" exited with code -1073741819.`\r\n\r\nI can disable PublishTrimmed=true for now, but I would think there's a way to address this.\r\n\r\nThe application is a .Net Core 3 app, which references two multi-target libraries which are `netstandard2.0;net462`","Url":"https://github.com/dotnet/corefx/issues/42734","RelatedDescription":"Open issue \"PublishTrimmed=true issue - TypeInitializationException in System.Runtime.Serialization.Formatters\" (#42734)"},{"Id":"529044580","IsPullRequest":false,"CreatedAt":"2019-11-27T00:27:57","Actor":"danmosemsft","Number":"42733","RawContent":null,"Title":"⛔ Please do not open new PR's and issues in this repo ⛔","State":"open","Body":"We have moved! All new issues and PR's now should be opened in https://github.com/dotnet/runtime.\r\n\r\nIn a little bit, all existing PR's in this repo will be closed, and all existing issues will be migrated. Meantime, new ones should go over there.\r\n\r\nMore details here.\r\n\r\n(Pinning this so everyone sees it.)","Url":"https://github.com/dotnet/corefx/issues/42733","RelatedDescription":"Open issue \"⛔ Please do not open new PR's and issues in this repo ⛔\" (#42733)"},{"Id":"529035602","IsPullRequest":true,"CreatedAt":"2019-11-27T00:22:54","Actor":"martynasapanavicius","Number":"42732","RawContent":null,"Title":"update missing docs for System.IO.UnmanagedMemoryStream","State":"closed","Body":"Was looking into System.IO.UnmanagedMemoryStream.ReadByte() return documentation because apparently it has some encoded meaning to it. Updated that one + some other docs while looking around.","Url":"https://github.com/dotnet/corefx/pull/42732","RelatedDescription":"Closed or merged PR \"update missing docs for System.IO.UnmanagedMemoryStream\" (#42732)"},{"Id":"529009409","IsPullRequest":true,"CreatedAt":"2019-11-26T23:45:54","Actor":"dotnet-maestro[bot]","Number":"42731","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/coreclr","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n## From https://github.com/dotnet/coreclr\r\n- **Build**: 20191126.2\r\n- **Date Produced**: 11/26/2019 9:25 PM\r\n- **Commit**: 016d9d67a7be81c68c6d870b7e7de31c4b4fb468\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.NET.Sdk.IL** -> 3.1.0-rtm.19576.2\r\n  - **Microsoft.NETCore.ILAsm** -> 3.1.0-rtm.19576.2\r\n  - **Microsoft.NETCore.Runtime.CoreCLR** -> 3.1.0-rtm.19576.2\r\n\r\n[marker]: <> (End:dbb830b1-8f81-460f-dd40-08d72a4caef5)\r\n\r\n","Url":"https://github.com/dotnet/corefx/pull/42731","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/coreclr\" (#42731)"},{"Id":"528999476","IsPullRequest":false,"CreatedAt":"2019-11-26T22:09:59","Actor":"Uzivatel919","Number":"42729","RawContent":null,"Title":"New API proposal; new collection interfacing, new read-only models – read-only & alter-also design pattern","State":"open","Body":"## Abstract\r\n\r\nRecently I went through ```ReadOnlyCollection<T>``` ([1](https://referencesource.microsoft.com/#mscorlib/system/collections/objectmodel/readonlycollection.cs,aafef79f3fced6c2), [2](https://docs.microsoft.com/en-us/dotnet/api/system.collections.objectmodel.readonlycollection-1?view=netframework-4.8)) finding it [generaly failing](https://github.com/dotnet/corefx/issues/42699) by design terms.\r\n\r\nI reviewed the origin (root cause) and I found out that some collection designs are not as good as they could.\r\n\r\nNowadays any movement toward protectivity and declarativity is beyond nice-to-have. Today readonly fields, structs, parameters (in) are part of programers’ day. (Let mention there ```ReadOnlySpan<T>```, ```ReadOnlyMemory<T>```.)\r\n\r\nThe same is missing on the collection level in framework in a way we get used to feel such presence. There exists in [System.Collections.ObjectModel](https://docs.microsoft.com/en-us/dotnet/api/system.collections.objectmodel?view=netframework-4.8) mentioned ```ReadOnlyCollection<T>``` that is declared to be base type for collection of kind. Must be noted that dedicated base class throws 12 times NotImplementedException. 🙅‍♂️ \r\n\r\nIf one review interface like [```IReadOnlyList<T>```](https://docs.microsoft.com/en-gb/dotnet/api/system.collections.generic.ireadonlylist-1?view=netframework-4.8) or [```IReadOnlyCollection<T>```](https://docs.microsoft.com/en-gb/dotnet/api/system.collections.generic.ireadonlycollection-1?view=netframework-4.8) surely will find that these interfaces are capable of little making them inapplicable for any reasonable read-only collection designing on framework level since for any advanced work one have to implement other interface or find out other workaround (like acting classic type as read-only one). In any place no collection alteration will ever come the read-only type could be used – idea for resource management.\r\n\r\nAs it was noted actual trend confirms read-only tendecies and wide popularity for it. For a such new trends new collections could become. I find that making design in let name it **read-only & alter-also pairs** fits this trend and demands. Beside popularity of readonlyness one can find out that such designs are really proper in opposite to actual ones.\r\n\r\nThat is observable at ```ReadOnlyCollection<T>```. There is no general tendecy about its usage although commonly we declare readonly fields (they are stil less efective than classic fields since defensive copying), use in paramater modifiers etc. This is likely due its bad design and aside this also by fact that it is sited in some “top-level” designers’ namespace. Worth noting that regardless its naming it exposes indexer – like lists do. I found this far away from proper. It is just some dirty sufficient solution to readonlyness for case where it must be. More proper is to go with as simple type as it is needed like it is aforementioned but with such read-only collectioning framework avoids this.\r\n\r\n## Concrete\r\n\r\nI prepared some design samples for demonstration of such **read-only & alter-also** patterning.\r\n\r\nThis pattern is about building “classic” types on top of their read-only counterparts.\r\n\r\n#### Sample for non-generics:\r\n\r\n    namespace System.Fine.Collection.Collection.Interface\r\n    {\r\n      /// <remarks>\r\n      ///  Completely replaces System.Collections.ICollection that does not exists at all.\r\n      /// </remarks>\r\n      public interface IReadOnlyCollection : System.Collections.IEnumerable\r\n      {\r\n        void CopyTo(Array array, int index);\r\n\r\n        int Count { get; }\r\n\r\n        Object SyncRoot { get; }\r\n\r\n        bool IsSynchronized { get; }\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Collection.Interface\r\n    {\r\n      interface IReadOnlyList : IReadOnlyCollection\r\n      {    \r\n        Object this[int index] { get; }\r\n\r\n        bool Contains(Object value);\r\n        \r\n        int IndexOf(Object value);\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Collection.Interface\r\n    {\r\n      interface IList : IReadOnlyList\r\n      {\r\n        new Object this[int index] { get; set; }\r\n\r\n        int Add(Object value);\r\n\r\n        void Clear();\r\n\r\n        bool IsFixedSize { get; }\r\n\r\n        void Insert(int index, Object value);\r\n\r\n        void Remove(Object value);\r\n\r\n        void RemoveAt(int index);\r\n      }\r\n    }\r\n\r\n#### Sample for generics:\r\n    \r\n    namespace System.Fine.Collection.Generic.Interface\r\n    {\r\n      public interface IReadOnlyCollection<T> : System.Collections.Generic.IEnumerable<T>\r\n      {  \r\n        int Count { get; }\r\n\r\n        bool Contains(T item);\r\n\r\n        void CopyTo(T[] array, int arrayIndex);\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Interface\r\n    {\r\n      public interface ICollection<T> : IReadOnlyCollection<T>\r\n      {        \r\n        void Add(T item);\r\n\r\n        void Clear();\r\n\r\n        bool Remove(T item);\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Interface\r\n    {\r\n      public interface IReadOnlyList<T> : IReadOnlyCollection<T>\r\n      {\r\n        T this[int index] { get; }\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Interface\r\n    {\r\n      public interface IList<T> : IReadOnlyList<T>, ICollection<T>\r\n      {\r\n        new T this[int index] { get; set; }\r\n\r\n        int IndexOf(T item);\r\n        \r\n        void Insert(int index, T item);\r\n        \r\n        void RemoveAt(int index);\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Model\r\n    {\r\n      public class ReadOnlyCollection<T> :\r\n        Interface.IReadOnlyCollection<T>,\r\n        Collection.Interface.IReadOnlyCollection\r\n      {\r\n        // Implementation.\r\n      }\r\n    }\r\n\r\n\r\n    namespace System.Fine.Collection.Generic.Model\r\n    {\r\n      public class Collection<T> :\r\n        ReadOnlyCollection<T>, \r\n        Interface.ICollection<T>\r\n      {\r\n        // Implementation.\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Model\r\n    {\r\n      public class ReadOnlyList<T> :\r\n        ReadOnlyCollection<T>, \r\n        Interface.IReadOnlyList<T>,\r\n        Collection.Interface.IReadOnlyList\r\n      {\r\n        // Implementation.\r\n      }\r\n    }\r\n\r\n    namespace System.Fine.Collection.Generic.Model\r\n    {\r\n      public class List<T> : \r\n        ReadOnlyList<T>, \r\n        Interface.IList<T>,\r\n        Collections.IList\r\n      {\r\n        // Implementation.\r\n      }\r\n    }\r\n\r\n\r\nGoing along with this approach the benifits are:\r\n1. Straight hierarchy logic where all non-altering executions belongs to read-only type/interface.\r\n2. Consumer is provided with read-only types that are not lame brothers of their counterparts while alter-also types are fully capable.\r\n3. Resource efficiency. Since alter-also types are bigger in bytes, consumer can go on with lightweight but capable read-only types.\r\n4. Brings popular readonlyness to consumers instead of code magicians.\r\n\r\n## Conclusion:\r\n\r\nI am totally aware about actual count of types in framework build on actual collection types and interfaces but still any move forward is not move backward or stiff attitude.\r\n\r\nAlso I know that such redesign is not just about to copy paste because time advanced and other changes would be included also in bunch.\r\n\r\nIt is not possible to look readonlyness popularity over and the same should be seen on framework collections. Not such stain like ```System.Collections.ObjectModel.ReadOnlyCollection<T>```.  (No any of read-only kind of the proper ones.)\r\n\r\nThis read-only & alter-also desing results in ```ReadOnlyList<T>``` that never throws for any member of any interfaces that it contracts to implement. That is far better than 12 throws.\r\n\r\nSince actual framework collection robustness I suppose that such new designs should come as separated bunch in dedicated namespace like System.Collections.Fine. From there they can leak out.","Url":"https://github.com/dotnet/corefx/issues/42729","RelatedDescription":"Open issue \"New API proposal; new collection interfacing, new read-only models – read-only & alter-also design pattern\" (#42729)"},{"Id":"528950638","IsPullRequest":true,"CreatedAt":"2019-11-26T21:53:14","Actor":"Anipik","Number":"42727","RawContent":null,"Title":"[release/3.0] Update SslClientAuthenticationOptionsExtensions.ShallowClone to copy CipherSuitesPolicy","State":"closed","Body":"Already ported to 3.1\r\n\r\nhttps://github.com/dotnet/corefx/pull/42694","Url":"https://github.com/dotnet/corefx/pull/42727","RelatedDescription":"Closed or merged PR \"[release/3.0] Update SslClientAuthenticationOptionsExtensions.ShallowClone to copy CipherSuitesPolicy\" (#42727)"}],"ResultType":"GitHubIssue"},"Roslyn-Issues":{"Issues":[{"Id":"534315208","IsPullRequest":true,"CreatedAt":"2019-12-07T03:20:07","Actor":"dotnet-bot","Number":"40221","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40221","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#40221)"},{"Id":"534343968","IsPullRequest":true,"CreatedAt":"2019-12-07T02:54:57","Actor":"tmat","Number":"40222","RawContent":null,"Title":"Fix nullable annotations for ValueSource","State":"open","Body":"Removes `ValueSource<T>.Empty` as it is awkward to correctly annotate it with nullables and it can be easily replaced with storing `null` `ValueSource<T>` instance.\r\n\r\nAlso annotates `SpecializedTasks`. Replaces `SpecializedTasks.Empty<T>` with `SpecializedTasks.Null<T> where T : class` and `SpecializedTasks.Default<T> where T : struct` to allow flowing nullable annotations.","Url":"https://github.com/dotnet/roslyn/pull/40222","RelatedDescription":"Open PR \"Fix nullable annotations for ValueSource\" (#40222)"},{"Id":"534315140","IsPullRequest":true,"CreatedAt":"2019-12-07T02:01:55","Actor":"dotnet-bot","Number":"40220","RawContent":null,"Title":"Merge release/dev16.4 to release/dev16.4-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40220","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#40220)"},{"Id":"534315006","IsPullRequest":true,"CreatedAt":"2019-12-07T01:56:27","Actor":"dotnet-bot","Number":"40219","RawContent":null,"Title":"Merge release/dev16.4-vs-deps to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4-vs-deps into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-vs-deps-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/release/dev16.4-vs-deps\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-vs-deps-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40219","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4-vs-deps to master-vs-deps\" (#40219)"},{"Id":"534183783","IsPullRequest":true,"CreatedAt":"2019-12-07T01:34:18","Actor":"dotnet-bot","Number":"40205","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40205","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#40205)"},{"Id":"534314876","IsPullRequest":true,"CreatedAt":"2019-12-07T00:40:43","Actor":"dotnet-bot","Number":"40218","RawContent":null,"Title":"Merge release/dev16.4 to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40218","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4 to master\" (#40218)"},{"Id":"534213903","IsPullRequest":true,"CreatedAt":"2019-12-07T00:20:51","Actor":"tmat","Number":"40208","RawContent":null,"Title":"EnC: Fix incorrect reporting of changes in non-UTF8 encoded source files","State":"closed","Body":"Port from master.","Url":"https://github.com/dotnet/roslyn/pull/40208","RelatedDescription":"Closed or merged PR \"EnC: Fix incorrect reporting of changes in non-UTF8 encoded source files\" (#40208)"},{"Id":"534307380","IsPullRequest":false,"CreatedAt":"2019-12-06T23:31:13","Actor":"vsfeedback","Number":"40217","RawContent":null,"Title":"intellisense explicit cast vs dot","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/594082/intellisense-explicit-cast-vs-dot.html)._\n\n---\n<p>Example:</p>\n<p>var r = new Random();<br>\n<code>(int)r.</code><strong>&lt;cursor&gt;.Next();</strong></p>\n<p>Upon typing the “.” above.<br>\n<strong>Expected</strong>: show intellisense options for Random<br>\nI would continue to type:<br>\n<code>(int)r.GetDouble();</code></p>\n<p><strong>Actual</strong>: r is streated as an int, giving intellisense options for int.</p>\n<p>Since the dot has higher precedense than the cast it should also apply to intellisense.</p>\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 6/4/2019, 02:44 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Vatsalya Agrawal [MSFT] on 6/4/2019, 01:29 PM: \n\n<p>Thank you for providing feedback, and we're sorry to hear it's not behaving as you expect. Based on your description so far, we were unable to reproduce the issue. Please provide more details that could help us understand/repro this issue. If possible please provide a sample project where this issue is occurring.</p>\n\n#### Peter on 6/4/2019, 10:54 PM: \n\n<p>I'm sorry I made an assumption about the scope of the bug.</p><p>Correct description follows:</p><p>1. Type the full line of code.</p><p>var x = (int)r.PropertyA();</p><p>2. Place cursor after the \"r\" and press \".\" (leaving the code after it intact)</p><p>Screencast: <a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/attachments/76933-2019-06-05-07-52-35.mp4\">2019-06-05-07-52-35.mp4</a></p>\n\n#### Visual Studio Feedback System on 11/12/2019, 05:06 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n#### Ivan Basov [MSFT] on 11/13/2019, 00:39 PM: \n\n<p>Thank you for your feedback!</p>\n<p>I have tried to reproduce the issue with latest version of Visual Studio. And it works fine for me. We realized that the issue could happen with version 16.1 mentioned in feedback logs. Sorry for inconveniences! Could you please update to the latest bits? Please let us know if it helps or not.</p><p><img src=\"https://developercommunity.visualstudio.com/storage/attachments/104650-untitled.png\"></p>\n\n#### Peter on 11/15/2019, 06:20 AM: \n\n<p>I've updated the first post to match the conversation.</p>\n<p>This is in Visual Studio 16.3.9.</p><p>1. as expected</p><p><img src=\"https://developercommunity.visualstudio.com/storage/attachments/105108-2019-11-15-15-17-15.jpg\"></p><p>2. As expected</p><p><img src=\"https://developercommunity.visualstudio.com/storage/attachments/105109-2019-11-15-15-15-58.jpg\"></p><p>3. Giving suggestions for int rather than Random.</p><p>Expected the same drop-down as in 1 and 2</p><p><img src=\"https://developercommunity.visualstudio.com/storage/attachments/105110-2019-11-15-15-11-27.jpg\"></p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/40217","RelatedDescription":"Open issue \"intellisense explicit cast vs dot\" (#40217)"},{"Id":"534183721","IsPullRequest":true,"CreatedAt":"2019-12-06T23:20:13","Actor":"dotnet-bot","Number":"40204","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40204","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#40204)"},{"Id":"534298727","IsPullRequest":false,"CreatedAt":"2019-12-06T23:03:03","Actor":"vsfeedback","Number":"40216","RawContent":null,"Title":"Completion incorrectly infers lambda parameter types when the lambda is passed as a named argument in a different position than the corresponding parameter","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/825326/vs2019-intellisense-wrong.html)._\n\n---\nI have a post on stackoverflow a bout this problem. Please review it\nhttps://stackoverflow.com/questions/58926131/graphql-netcore-visualstudio-2019-wrong-suggestions\n\n---\n### Original Comments\n\n#### Visual Studio Feedback System on 11/18/2019, 10:25 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Visual Studio Feedback System on 12/3/2019, 05:11 PM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/roslyn/issues/40216","RelatedDescription":"Open issue \"Completion incorrectly infers lambda parameter types when the lambda is passed as a named argument in a different position than the corresponding parameter\" (#40216)"},{"Id":"534183175","IsPullRequest":true,"CreatedAt":"2019-12-06T23:01:13","Actor":"dotnet-bot","Number":"40202","RawContent":null,"Title":"Merge release/dev16.4 to master","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4 into master.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-master\ngit reset --hard upstream/master\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-master --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40202","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4 to master\" (#40202)"},{"Id":"534295432","IsPullRequest":true,"CreatedAt":"2019-12-06T22:52:38","Actor":"jcouv","Number":"40215","RawContent":null,"Title":"Update status on \"lambda discard parameters\"","State":"open","Body":"","Url":"https://github.com/dotnet/roslyn/pull/40215","RelatedDescription":"Open PR \"Update status on \"lambda discard parameters\"\" (#40215)"},{"Id":"534294471","IsPullRequest":false,"CreatedAt":"2019-12-06T22:49:51","Actor":"jcouv","Number":"40214","RawContent":null,"Title":"ExtractLocalFunction: code style for naming local functions isn't respected","State":"open","Body":"Currently, if you extract a block of code to a local function, the local function will be named using PascalCase convention, instead of honoring the user's preference.","Url":"https://github.com/dotnet/roslyn/issues/40214","RelatedDescription":"Open issue \"ExtractLocalFunction: code style for naming local functions isn't respected\" (#40214)"},{"Id":"534286558","IsPullRequest":false,"CreatedAt":"2019-12-06T22:26:01","Actor":"tmat","Number":"40213","RawContent":null,"Title":"Improve experience when using stack-only types in interactive code","State":"open","Body":"This doesn't work since script variables are not stack allocated:\r\n```C#\r\n> var span = new byte[] { 1, 2, 3 }.AsSpan();\r\n(1,1): error CS8345: Field or auto-implemented property cannot be of type 'Span<byte>' unless it is an instance member of a ref struct.\r\n```\r\nThis is by design, the message could be better though (something like `Script variables cannot be of type 'Span<byte>'.`).\r\n\r\n\r\nThis doesn't work since top-level code is implicitly async:\r\n```C#\r\n> {\r\n.     var span = new byte[] { 1, 2, 3 }.AsSpan();\r\n. }\r\n(2,5): error CS4012: Parameters or locals of type 'Span<byte>' cannot be declared in async methods or lambda expressions.\r\n```\r\n\r\nIs there a reason why this can't be allowed for variables that do not need to be hoisted? Is it just to simplify handling of these cases?\r\n\r\nIf we don't make this work we should report a better error message (e.g. `Locals of type 'Span<byte>' cannot be declared outside of methods in scripts.`).\r\n\r\nBTW, one can still work with spans in interactive, they just need to be declared within a method:\r\n\r\n```C#\r\n> void F()\r\n. {\r\n.     var span = new byte[] { 1, 2, 3 }.AsSpan();\r\n. \r\n. }\r\n```\r\n","Url":"https://github.com/dotnet/roslyn/issues/40213","RelatedDescription":"Open issue \"Improve experience when using stack-only types in interactive code\" (#40213)"},{"Id":"534265824","IsPullRequest":true,"CreatedAt":"2019-12-06T21:28:25","Actor":"jcouv","Number":"40212","RawContent":null,"Title":"Add test for some null tests with is operator","State":"open","Body":"Closes https://github.com/dotnet/roslyn/issues/39540","Url":"https://github.com/dotnet/roslyn/pull/40212","RelatedDescription":"Open PR \"Add test for some null tests with is operator\" (#40212)"},{"Id":"534196977","IsPullRequest":true,"CreatedAt":"2019-12-06T20:28:11","Actor":"mavasani","Number":"40206","RawContent":null,"Title":"Revert \"Move to new API for GetSuggestedActions\"","State":"closed","Body":"Reverts dotnet/roslyn#39914\r\n\r\nThis PR broke DDRITs, likely from upgrading to newer package versions. Reverting to unblock insertion.","Url":"https://github.com/dotnet/roslyn/pull/40206","RelatedDescription":"Closed or merged PR \"Revert \"Move to new API for GetSuggestedActions\"\" (#40206)"},{"Id":"534233953","IsPullRequest":true,"CreatedAt":"2019-12-06T20:04:46","Actor":"CyrusNajmabadi","Number":"40211","RawContent":null,"Title":"Switch to iterative algorithm to prevent stack overflows.","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/40041\r\n","Url":"https://github.com/dotnet/roslyn/pull/40211","RelatedDescription":"Open PR \"Switch to iterative algorithm to prevent stack overflows.\" (#40211)"},{"Id":"534233492","IsPullRequest":true,"CreatedAt":"2019-12-06T20:03:38","Actor":"jcouv","Number":"40210","RawContent":null,"Title":"Debugger should prioritize members with underscore prefix","State":"open","Body":"From discussion with debugger and EE folks, it would make sense to prioritize data members in the debugger expansion of members. But then we would need to visually separate data members and non-data members, which would require UI change.\r\nIn the meantime, most of the problem can be solved by prioritizing members that start with '_' or '*_' (which are typically data members by convention).\r\n\r\nFixes https://github.com/dotnet/roslyn/issues/40179\r\n\r\nHere's the result:\r\n\r\n![image](https://user-images.githubusercontent.com/12466233/70354165-ce29f680-1823-11ea-9aa5-ad386c6859d0.png)\r\n","Url":"https://github.com/dotnet/roslyn/pull/40210","RelatedDescription":"Open PR \"Debugger should prioritize members with underscore prefix\" (#40210)"},{"Id":"534232295","IsPullRequest":false,"CreatedAt":"2019-12-06T20:00:39","Actor":"jcouv","Number":"40209","RawContent":null,"Title":"ExtractLocal: does not extract across local functions","State":"open","Body":"In the following code, extracting a local for all instances of `i.ToString()` behaves correctly on the declaration of `x`, but not on the declaration of `y`. Only the instance on the declaration of `y` would be extracted, instead of both (see screenshot).\r\n\r\n``` chsarp\r\n        void M(int i)\r\n        {\r\n            var x = i.ToString();\r\n            local();\r\n\r\n            void local()\r\n            {\r\n                var y = i.ToString();\r\n            }\r\n        }\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/12466233/70352397-ec8df300-181f-11ea-8a4f-8a0fdee2808f.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/40209","RelatedDescription":"Open issue \"ExtractLocal: does not extract across local functions\" (#40209)"},{"Id":"534183603","IsPullRequest":true,"CreatedAt":"2019-12-06T19:39:08","Actor":"dotnet-bot","Number":"40203","RawContent":null,"Title":"Merge release/dev16.4 to release/dev16.4-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from release/dev16.4 into release/dev16.4-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/release/dev16.4-to-release/dev16.4-vs-deps\ngit reset --hard upstream/release/dev16.4-vs-deps\ngit merge upstream/release/dev16.4\n# Fix merge conflicts\ngit commit\ngit push upstream merges/release/dev16.4-to-release/dev16.4-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40203","RelatedDescription":"Closed or merged PR \"Merge release/dev16.4 to release/dev16.4-vs-deps\" (#40203)"},{"Id":"534199637","IsPullRequest":true,"CreatedAt":"2019-12-06T18:43:18","Actor":"jcouv","Number":"40207","RawContent":null,"Title":"Nullable warning for iteration variables is W-warning","State":"open","Body":"Fixes https://github.com/dotnet/roslyn/issues/40164","Url":"https://github.com/dotnet/roslyn/pull/40207","RelatedDescription":"Open PR \"Nullable warning for iteration variables is W-warning\" (#40207)"},{"Id":"533717809","IsPullRequest":true,"CreatedAt":"2019-12-06T17:17:16","Actor":"tmat","Number":"40196","RawContent":null,"Title":"EnC: Fix incorrect reporting of changes in non-UTF8 encoded source files","State":"closed","Body":"EnC was detecting non-existing changes in source files that contained non-ascii characters and did not specify BOM. The APIs used by the EnC defaulted to UTF8 while the editor buffer defaulted to a different encoding (e.g. Win-1252). This discrepancy resulted in incorrectly reported changes.\r\n\r\nFixes https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1032968","Url":"https://github.com/dotnet/roslyn/pull/40196","RelatedDescription":"Closed or merged PR \"EnC: Fix incorrect reporting of changes in non-UTF8 encoded source files\" (#40196)"},{"Id":"534125193","IsPullRequest":false,"CreatedAt":"2019-12-06T16:32:43","Actor":"JoeRobich","Number":"40201","RawContent":null,"Title":"The Simplifier fails to simplify","State":"open","Body":"This is a case that the Simplifier should have been able handle.\r\n\r\n![image](https://user-images.githubusercontent.com/611219/70338947-b5f5af80-1802-11ea-9b88-61811c47c1a2.png)\r\n\r\nBecause it handles it when the unused `typeSymbol` variable name is changed to a discard.\r\n\r\n![image](https://user-images.githubusercontent.com/611219/70338929-ad9d7480-1802-11ea-830b-66971ea8da87.png)\r\n\r\nOr when it is removed entirely.\r\n\r\n![image](https://user-images.githubusercontent.com/611219/70338909-a4aca300-1802-11ea-8a62-b1c6dc62c8df.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/40201","RelatedDescription":"Open issue \"The Simplifier fails to simplify\" (#40201)"},{"Id":"533924756","IsPullRequest":true,"CreatedAt":"2019-12-06T13:41:01","Actor":"dotnet-bot","Number":"40199","RawContent":null,"Title":"Merge master to master-vs-deps","State":"closed","Body":"\nThis is an automatically generated pull request from master into master-vs-deps.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-master-vs-deps\ngit reset --hard upstream/master-vs-deps\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-master-vs-deps --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40199","RelatedDescription":"Closed or merged PR \"Merge master to master-vs-deps\" (#40199)"},{"Id":"533924849","IsPullRequest":true,"CreatedAt":"2019-12-06T13:36:50","Actor":"dotnet-bot","Number":"40200","RawContent":null,"Title":"Merge master to features/local-function-attributes","State":"closed","Body":"\nThis is an automatically generated pull request from master into features/local-function-attributes.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-features/local-function-attributes\ngit reset --hard upstream/features/local-function-attributes\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push upstream merges/master-to-features/local-function-attributes --force\n```\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request.","Url":"https://github.com/dotnet/roslyn/pull/40200","RelatedDescription":"Closed or merged PR \"Merge master to features/local-function-attributes\" (#40200)"},{"Id":"533846842","IsPullRequest":false,"CreatedAt":"2019-12-06T09:32:28","Actor":"sehra","Number":"40198","RawContent":null,"Title":"IDE0066 suggests to refactor ref returns","State":"open","Body":"**Version Used**:\r\n3.4.0-beta4-19569-03+82f2e2541478e239dc4b04f231e90dc2b3dcb422\r\n\r\n**Steps to Reproduce**:\r\n```csharp\r\nstatic ref int GetRef(int[] mem, int addr, int mode)\r\n{\r\n  switch (mode)\r\n  {\r\n    case 0: return ref mem[mem[addr]];\r\n    case 1: return ref mem[addr];\r\n    default: throw new Exception();\r\n  }\r\n}\r\n```\r\n\r\n**Expected Behavior**:\r\nEither doesn't offer to refactor, or refactors to something that is equivalent and compiles.\r\n\r\n**Actual Behavior**:\r\nRefactors as below which triggers compile errors CS1073, CS1525, and CS8150.\r\n```csharp\r\nstatic ref int GetRef(int[] mem, int addr, int mode)\r\n{\r\n  return mode switch\r\n  {\r\n    0 => ref mem[mem[addr]],\r\n    1 => ref mem[addr],\r\n    _ => throw new Exception(),\r\n  };\r\n}\r\n```","Url":"https://github.com/dotnet/roslyn/issues/40198","RelatedDescription":"Open issue \"IDE0066 suggests to refactor ref returns\" (#40198)"},{"Id":"533741620","IsPullRequest":false,"CreatedAt":"2019-12-06T04:38:47","Actor":"AlekseyTs","Number":"40197","RawContent":null,"Title":"Fragile logic in classification of Stackalloc conversion","State":"open","Body":"```\r\n        public override Conversion GetStackAllocConversion(BoundStackAllocArrayCreation sourceExpression, TypeSymbol destination, ref HashSet<DiagnosticInfo> useSiteDiagnostics)\r\n        {\r\n            if (sourceExpression.Syntax.IsLocalVariableDeclarationInitializationForPointerStackalloc())\r\n            {\r\n```\r\n\r\nWe should not be checking syntax here, all required information should be available from bound nodes.\r\n","Url":"https://github.com/dotnet/roslyn/issues/40197","RelatedDescription":"Open issue \"Fragile logic in classification of Stackalloc conversion\" (#40197)"},{"Id":"533684036","IsPullRequest":true,"CreatedAt":"2019-12-06T00:59:42","Actor":"333fred","Number":"40195","RawContent":null,"Title":"Disallow pointer types to be used as top-level constraints on generic parameters","State":"open","Body":"Fixes #40182\r\n\r\nTagging @dotnet/roslyn-compiler @jaredpar for review.","Url":"https://github.com/dotnet/roslyn/pull/40195","RelatedDescription":"Open PR \"Disallow pointer types to be used as top-level constraints on generic parameters\" (#40195)"},{"Id":"533682120","IsPullRequest":false,"CreatedAt":"2019-12-06T00:52:24","Actor":"dennis-yemelyanov","Number":"40194","RawContent":null,"Title":"High CPU in ComputeAnalyzerDiagnosticsAsync","State":"open","Body":"When building code using an external build system devenv.exe (Visual Studio 2019 16.3.4) CPU becomes abnormally high (while the VS window itself is minimized and should be idle). Looks like most of the time is spent in some code analysis-related methods starting with `ComputeAnalyzerDiagnosticsAsync`.\r\n\r\nI'm not sure what's triggering this analysis, is it possible that some file changes or other disk acticity cause Visual Studio to run it?\r\n\r\nIt's not clear which public method invokes `ComputeAnalyzerDiagnosticsAsync`, but it looks like some of the public methods that do are obsolete with the following message: \"This API was found to have performance issues and hence has been deprecated. Instead, invoke the API 'GetAnalysisResultAsync' and access the property 'CompilationDiagnostics' on the returned 'AnalysisResult' to fetch the compilation diagnostics.\"\r\n\r\nIs it possible that Visual Studio is still calling one of the obsolete methods?\r\n\r\nAnd, finally, is there some config to disable all code analysis for all projects at once?\r\n\r\n![image](https://user-images.githubusercontent.com/10681271/70286237-4db1ba00-177f-11ea-9f1e-97d381cf6032.png)\r\n","Url":"https://github.com/dotnet/roslyn/issues/40194","RelatedDescription":"Open issue \"High CPU in ComputeAnalyzerDiagnosticsAsync\" (#40194)"},{"Id":"533679206","IsPullRequest":true,"CreatedAt":"2019-12-06T00:41:27","Actor":"mavasani","Number":"40193","RawContent":null,"Title":"Fix a false positive in IDE0059 in presence of try/finally","State":"open","Body":"We were aggressively trimming down tracked locals when encountering a branch that leaves a try/finally region. The fix makes us more conservative for such cases.\r\n\r\nFixes #39344\r\nFixes #39755\r\n\r\nVerified that both the added unit tests fail before the product fix.","Url":"https://github.com/dotnet/roslyn/pull/40193","RelatedDescription":"Open PR \"Fix a false positive in IDE0059 in presence of try/finally\" (#40193)"}],"ResultType":"GitHubIssue"},"CoreRT-Issues":{"Issues":[{"Id":"534342316","IsPullRequest":true,"CreatedAt":"2019-12-07T02:38:20","Actor":"davidwrighton","Number":"7906","RawContent":null,"Title":"Fix LockFreeReaderHashtable","State":"open","Body":"- Communication of the presence of an expanding hashtable was very close to not safe\r\n  - Changed to aggressively use Interlocked operations instead\r\n- If there were 3 threads, 1 which was expanding (thread A), 1 which failed an insert and was waiting on an expand(thread B), and a third which did a lookup for the item in process of insert on thread B, the table would find the item in process of insertion\r\n  - Fixed by moving to a scheme where insertion didn't actually write in the value until it was confirmed that that spot was the right place to insert, and the value would be preserved into an expansion\r\n  - In order to acquire a sentinel for scenarios without requiring the explicit definition of one, the first item inserted is used as the sentinel. It simply exists outside of the hashtable in a side variable","Url":"https://github.com/dotnet/corert/pull/7906","RelatedDescription":"Open PR \"Fix LockFreeReaderHashtable\" (#7906)"},{"Id":"534281516","IsPullRequest":true,"CreatedAt":"2019-12-07T00:41:43","Actor":"LTruijens","Number":"7905","RawContent":null,"Title":"Option added to ignore specific errors","State":"closed","Body":"- Option added to ignore specific errors\r\n\r\nThis option can be useful when verifying large sets of dlls which contain lots of the same errors (like InitOnly https://github.com/dotnet/roslyn/issues/22485).\r\n\r\n- App returns error code when verification errors exist\r\n\r\nUseful in automation scenarios\r\n\r\n- Print error code\r\n\r\nUseful to know the error code if you want to ignore it.\r\n\r\n- Continue verification when printing method fails\r\n\r\nOtherwise it will stop any further output of the app\r\n","Url":"https://github.com/dotnet/corert/pull/7905","RelatedDescription":"Closed or merged PR \"Option added to ignore specific errors\" (#7905)"},{"Id":"533755092","IsPullRequest":true,"CreatedAt":"2019-12-06T20:14:57","Actor":"jkotas","Number":"7903","RawContent":null,"Title":"Delete some unused code, add TODO","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7903","RelatedDescription":"Closed or merged PR \"Delete some unused code, add TODO\" (#7903)"},{"Id":"534163948","IsPullRequest":false,"CreatedAt":"2019-12-06T17:28:59","Actor":"SasukeK93","Number":"7904","RawContent":null,"Title":"Not Working for WPF","State":"open","Body":"CoreRT Native Build for C# WPF Aplication .NetCore 3.0 isn't propertly working:\r\n\r\ndotnet new wpf\r\ndotnet new nuget\r\n// Add the nuget References to nuget.config\r\ndotnet add package Microsoft.DotNet.ILCompiler -v 1.0.0-alpha-* \r\ndotnet publish -r win-x64 -c release\r\n\r\nBuild Output:\r\n\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 5.89 min for C:\\Users\\SasukeK93\\wpf\\wpf.csproj.\r\n  wpf -> C:\\Users\\SasukeK93\\wpf\\bin\\release\\netcoreapp3.0\\win-x64\\wpf.dll\r\n  Generating compatible native code. To optimize for size or speed, visit https://aka.ms/OptimizeCoreRT\r\nEXEC : error : [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Windows.Threading.DispatcherObject, WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 [C:\\Users\\SasukeK93\\wpf\\wpf.csproj]\r\n  Internal.TypeSystem.TypeSystemException+TypeLoadException: [TEMPORARY EXCEPTION MESSAGE] ClassLoadGeneral: System.Windows.Threading.DispatcherObject, WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35\r\n     at Internal.TypeSystem.ThrowHelper.ThrowTypeLoadException(ExceptionStringID id, String typeName, String assemblyName)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(String nameSpace, String name, Boolean throwIfNotFound)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.ResolveTypeReference(TypeReferenceHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.EcmaObjectLookupHashtable.CreateValueFromKey(EntityHandle handle)\r\n     at Internal.TypeSystem.LockFreeReaderHashtable`2.CreateValueAndEnsureValueIsInTable(TKey key)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetObject(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaModule.GetType(EntityHandle handle)\r\n     at Internal.TypeSystem.Ecma.EcmaType.InitializeBaseType()\r\n     at Internal.TypeSystem.TypeDesc.get_IsDelegate()\r\n     at ILCompiler.CompilerTypeSystemContext.GetAllMethods(TypeDesc type)\r\n     at Internal.TypeSystem.MetadataVirtualMethodAlgorithm.FindMatchingVirtualMethodOnTypeByNameAndSig(MethodDesc targetMethod, DefType currentType, Boolean reverseMethodSearch, Func`3 nameSigMatchMethodIsValidCandidate)\r\n     at Internal.TypeSystem.MetadataVirtualMethodAlgorithm.FindBaseUnificationGroup(MetadataType currentType, UnificationGroup unificationGroup)\r\n     at Internal.TypeSystem.MetadataVirtualMethodAlgorithm.FindBaseUnificationGroup(MetadataType currentType, UnificationGroup unificationGroup)\r\n     at Internal.TypeSystem.MetadataVirtualMethodAlgorithm.FindVirtualFunctionTargetMethodOnObjectType(MethodDesc targetMethod, MetadataType objectType)\r\n     at Internal.TypeSystem.Ecma.EcmaType.GetFinalizer()\r\n     at Internal.TypeSystem.Ecma.EcmaType.ComputeTypeFlags(TypeFlags mask)\r\n     at Internal.TypeSystem.TypeDesc.InitializeTypeFlags(TypeFlags mask)\r\n     at Internal.TypeSystem.TypeDesc.get_HasFinalizer()\r\n     at Internal.TypeSystem.MethodDesc.get_IsFinalizer()\r\n     at ILCompiler.MetadataManager.IsMethodSupportedInReflectionInvoke(MethodDesc method)\r\n     at ILCompiler.MetadataManager.GetDependenciesDueToReflectability(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.CodeBasedDependencyAlgorithm.AddDependenciesDueToMethodCodePresence(DependencyList& dependencies, NodeFactory factory, MethodDesc method)\r\n     at ILCompiler.DependencyAnalysis.ScannedMethodNode.InitializeDependencies(NodeFactory factory, IEnumerable`1 dependencies)\r\n     at ILCompiler.ILScanner.CompileSingleMethod(ScannedMethodNode methodCodeNodeNeedingCode)\r\n     at ILCompiler.ILScanner.CompileSingleThreaded(List`1 methodsToCompile)\r\n     at ILCompiler.ILScanner.ComputeDependencyNodeDependencies(List`1 obj)\r\n     at ILCompiler.DependencyAnalysisFramework.DependencyAnalyzer`2.ComputeMarkedNodes()\r\n     at ILCompiler.ILScanner.ILCompiler.IILScanner.Scan()\r\n     at ILCompiler.Program.Run(String[] args)\r\n     at ILCompiler.Program.Main(String[] args)\r\nC:\\Users\\SasukeK93\\.nuget\\packages\\microsoft.dotnet.ilcompiler\\1.0.0-alpha-28406-02\\build\\Microsoft.NETCore.Native.targets(226,5): error MSB3073: The command \"\"C:\\Users\\SasukeK93\\.nuget\\packages\\runtime.win-x64.microsoft.dotnet.ilcompiler\\1.0.0-alpha-28406-02\\tools\\ilc\" @\"obj\\release\\netcoreapp3.0\\win-x64\\native\\wpf.ilc.rsp\"\" exited with code 1. [C:\\Users\\SasukeK93\\wpf\\wpf.csproj]","Url":"https://github.com/dotnet/corert/issues/7904","RelatedDescription":"Open issue \"Not Working for WPF\" (#7904)"},{"Id":"531504052","IsPullRequest":true,"CreatedAt":"2019-12-03T16:35:41","Actor":"am11","Number":"7899","RawContent":null,"Title":"Fix x86 Native build on Unix","State":"closed","Body":"x86 Native build (initially enabled in #4637 and #4598) is broken with the inclusion of (LLVM) libunwind, object writer and `src/Native/Runtime/i386/MiscStubs.S`.\r\n\r\nThis patch attempts to fill the gaps to make the Native components compile (including object writer):  `./build.sh objwriter skiptests x86` (tested on Debian Stretch i386, cmake 3.13.2)\r\n\r\nManaged components are still failing due to the lack of .NET SDK on Linux x86.\r\n\r\n```\r\nInstalling dotnet cli...\r\ntar: This does not look like a tar archive\r\ntar: Exiting with failure status due to previous errors\r\nERROR: Could not download dotnet cli.\r\nPlease check the detailed log that follows.\r\nRunning: /home/admin/projects/corert/init-tools.sh\r\nInstalling 'https://dotnetcli.azureedge.net/dotnet/Sdk/2.1.504/dotnet-sdk-2.1.504-linux-x86.tar.gz' to '/home/admin/projects/corert/Tools/dotnetcli/dotnet.tar'\r\nUsing CLI tools version:\r\nls: cannot access '/home/admin/projects/corert/buildscripts/../Tools/dotnetcli/sdk': No such file or directory\r\n./buildscripts/build-managed.sh: line 33: /home/admin/projects/corert/buildscripts/../Tools/dotnetcli/dotnet: No such file or directory\r\n```\r\n\r\nContributes to: #4589","Url":"https://github.com/dotnet/corert/pull/7899","RelatedDescription":"Closed or merged PR \"Fix x86 Native build on Unix\" (#7899)"},{"Id":"531921880","IsPullRequest":true,"CreatedAt":"2019-12-03T16:24:51","Actor":"MichalStrehovsky","Number":"7902","RawContent":null,"Title":"Add one more CoreRT debugging trick","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7902","RelatedDescription":"Closed or merged PR \"Add one more CoreRT debugging trick\" (#7902)"},{"Id":"531695482","IsPullRequest":true,"CreatedAt":"2019-12-03T04:51:05","Actor":"jkotas","Number":"7901","RawContent":null,"Title":"Fix marshaling for structs with pointers","State":"closed","Body":"Fixes #7900","Url":"https://github.com/dotnet/corert/pull/7901","RelatedDescription":"Closed or merged PR \"Fix marshaling for structs with pointers\" (#7901)"},{"Id":"531675548","IsPullRequest":false,"CreatedAt":"2019-12-03T04:51:05","Actor":"Spongman","Number":"7900","RawContent":null,"Title":"regression: System.Net.Dns.GetHostAddresses crashes","State":"closed","Body":"1.0.0-alpha-28402-01\r\n\r\nI'm seeing a failure where `HttpClient` is crashing trying to make a connection, i have narrowed it down to DNS resolution.\r\n\r\nhere's a zip containing a repro project:\r\n[wslbug.zip](https://github.com/dotnet/corert/files/3914244/wslbug.zip)\r\n\r\n````c#\r\nclass Foo\r\n{\r\n\tstatic void Main(string[] args)\r\n\t{\r\n\t\tSystem.Net.Dns.GetHostAddresses(\"microsoft.com\");\r\n\t}\r\n}\r\n````\r\n\r\non windows:\r\n````\r\nc:\\play\\wslbug\\>dotnet publish -r win-x64 -c Debug && bin\\Debug\\netcoreapp3.0\\win-x64\\publish\\wslbug.exe\r\nMicrosoft (R) Build Engine version 16.3.0+0f4c62fea for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 26.93 ms for C:\\play\\wslbug\\wslbug.csproj.\r\n  wslbug -> C:\\play\\wslbug\\bin\\Debug\\netcoreapp3.0\\win-x64\\wslbug.dll\r\n  Generating native code\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [C:\\play\\wslbug\\wslbug.csproj]\r\n  wslbug -> C:\\play\\wslbug\\bin\\Debug\\netcoreapp3.0\\win-x64\\publish\\\r\nUnhandled Exception: System.Exception: Method '[System.Net.NameResolution]Interop+Winsock.GetAddrInfoW(string,string,AddressInfo*,AddressInfo**)' requires marshalling that is not yet supported by this compiler.\r\n   at Interop.Winsock.GetAddrInfoW(String, String, Interop.Winsock.AddressInfo*, Interop.Winsock.AddressInfo**) + 0x49\r\n   at System.Net.NameResolutionPal.TryGetAddrInfo(String, Boolean, String&, String[]&, IPAddress[]&, Int32&) + 0xd4\r\n   at System.Net.Dns.GetHostEntryOrAddressesCore(String, Boolean) + 0x61\r\n   at System.Net.Dns.GetHostAddressesCore(String) + 0x22\r\n   at System.Net.Dns.GetHostAddresses(String) + 0x23f\r\n   at Foo.Main(String[]) + 0x21\r\n   at wslbug!<BaseAddress>+0x364d47\r\n   at wslbug!<BaseAddress>+0x364dcd\r\n````\r\n\r\non Ubuntu 18.04:\r\n````\r\n/mnt/c/play/wslbug$ dotnet publish -r linux-x64 -c Debug && bin/Debug/netcoreapp3.0/linux-x64/publish/wslbug\r\nMicrosoft (R) Build Engine version 16.3.2+e481bbf88 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\n  Restore completed in 157.92 ms for /mnt/c/play/wslbug/wslbug.csproj.\r\n  wslbug -> /mnt/c/play/wslbug/bin/Debug/netcoreapp3.0/linux-x64/wslbug.dll\r\n  /usr/lib/llvm-7/bin/clang\r\n  Generating native code\r\nEXEC : warning : RD.XML processing will change before release (https://github.com/dotnet/corert/issues/5001) [/mnt/c/play/wslbug/wslbug.csproj]\r\n  wslbug -> /mnt/c/play/wslbug/bin/Debug/netcoreapp3.0/linux-x64/publish/\r\nUnhandled Exception: System.Exception: Method '[System.Net.NameResolution]Interop+Sys.GetHostEntryForName(string,HostEntry*)' requires marshalling that is not yet supported by this compiler.\r\n   at Interop.Sys.GetHostEntryForName(String, Interop.Sys.HostEntry*) + 0x41\r\n   at System.Net.NameResolutionPal.TryGetAddrInfo(String, Boolean, String&, String[]&, IPAddress[]&, Int32&) + 0x87\r\n   at System.Net.Dns.GetHostEntryOrAddressesCore(String, Boolean) + 0x58\r\n   at System.Net.Dns.GetHostAddressesCore(String) + 0x22\r\n   at System.Net.Dns.GetHostAddresses(String) + 0x23e\r\n   at Foo.Main(String[]) + 0x21\r\n   at wslbug!<BaseAddress>+0x33c8d7\r\n   at wslbug!<BaseAddress>+0x33c95d\r\nAborted (core dumped)\r\n````\r\n\r\nof course, if i run `.exe.`/`.dll` version with the core runtime, it work fine.","Url":"https://github.com/dotnet/corert/issues/7900","RelatedDescription":"Closed issue \"regression: System.Net.Dns.GetHostAddresses crashes\" (#7900)"},{"Id":"530757774","IsPullRequest":true,"CreatedAt":"2019-12-01T16:33:46","Actor":"ryuukk","Number":"7898","RawContent":null,"Title":"Update how-to-build-and-run-ilcompiler-in-visual-studio.md","State":"open","Body":"Add mention to use the x64 Native Tools Command Prompt for VS 2019","Url":"https://github.com/dotnet/corert/pull/7898","RelatedDescription":"Open PR \"Update how-to-build-and-run-ilcompiler-in-visual-studio.md\" (#7898)"},{"Id":"530658843","IsPullRequest":true,"CreatedAt":"2019-12-01T02:30:48","Actor":"yowl","Number":"7897","RawContent":null,"Title":"WIP: Wasm enable shared generics and generic virtual methods","State":"open","Body":"Mostly taken from the cpp backend, this enables shared generics and generic virtual methods for the Wasm backend.  Have tried to keep the logic as clean as I could, but maybe there's some obvious enhancements/reductions in code that I missed.  \r\n\r\nSize of HelloWasm LLVM bc before, and after, .  <- To be completed.  HelloWasm before this change didn't have much in the way of generics so this mostly reflects the framework and runtime generics.\r\n\r\nEnables the Simple/Generics tests for wasm which have the almost same coverage as cpp (Wasm includes an additional test) in terms of what is #if'ed out.\r\n\r\nWIP as depends on #7893  and #7891 \r\n\r\nFixes https://github.com/dotnet/corert/issues/7248","Url":"https://github.com/dotnet/corert/pull/7897","RelatedDescription":"Open PR \"WIP: Wasm enable shared generics and generic virtual methods\" (#7897)"},{"Id":"530647761","IsPullRequest":true,"CreatedAt":"2019-12-01T01:29:32","Actor":"jkotas","Number":"7896","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7896","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7896)"},{"Id":"530250427","IsPullRequest":false,"CreatedAt":"2019-11-29T09:46:57","Actor":"DardoTheMaster","Number":"7895","RawContent":null,"Title":"RavenDB : rd.xml editing","State":"open","Body":"Hello, i'm trying to build a basic application which is basically a custom client for handling requests to RavenDB.\r\n\r\nUnfortunately while trying to run the compiled application, i get the following errors:\r\n\r\n> Unhandled Exception: System.AggregateException: Failed to retrieve database topology from all known nodes.\r\nhttp://127.0.0.1:8080 -> Could not build json parser for Raven.Client.Http.ServerNode -> MakeGenericMethod() cannot create this generic method instantiation because the instantiation was not metadata-enabled: 'Sparrow.Json.BlittableJsonReaderObject.TryGet<Raven.Client.Http.ServerNode.Role>(System.String,out Raven.Client.Http.ServerNode.Role&)' For more information, please visit http://go.microsoft.com/fwlink/?LinkID=616868 (Could not build json parser for Raven.Client.Http.ServerNode)\r\n ---> System.InvalidOperationException: Could not build json parser for Raven.Client.Http.ServerNode\r\n ---> EETypeRva:0x01BDCA98(System.Reflection.MissingRuntimeArtifactException): MakeGenericMethod() cannot create this generic method instantiation because the instantiation was not metadata-enabled: 'Sparrow.Json.BlittableJsonReaderObject.TryGet<Raven.Client.Http.ServerNode.Role>(System.String,out Raven.Client.Http.ServerNode.Role&)' For more information, please visit http://go.microsoft.com/fwlink/?LinkID=616868\r\n   at Internal.Reflection.Core.Execution.ExecutionEnvironment.GetMethodInvoker(RuntimeTypeInfo, QMethodDefinition, RuntimeTypeInfo[], MemberInfo) + 0x273\r\n   at System.Reflection.Runtime.MethodInfos.NativeFormat.NativeFormatMethodCommon.GetUncachedMethodInvoker(RuntimeTypeInfo[], MemberInfo) + 0xb6\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeNamedMethodInfo`1.GetUncachedMethodInvoker(RuntimeTypeInfo[], MemberInfo) + 0x37\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeConstructedGenericMethodInfo.get_UncachedMethodInvoker() + 0x3b\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeMethodInfo.get_MethodInvoker() + 0x19c\r\n   at System.Reflection.Runtime.MethodInfos.RuntimeNamedMethodInfo`1.MakeGenericMethod(Type[]) + 0x3ec\r\n   at System.Linq.Expressions.Expression.ApplyTypeArgs(MethodInfo, Type[]) + 0xc7\r\n   at System.Linq.Expressions.Expression.FindMethod(Type, String, Type[], Expression[], BindingFlags) + 0xe0\r\n   at System.Linq.Expressions.Expression.Call(Expression, String, Type[], Expression[]) + 0xb4\r\n   at Sparrow.Json.JsonDeserializationBase.GetValue(String, Type, ParameterExpression, Dictionary`2) + 0x757\r\n   at Sparrow.Json.JsonDeserializationBase.GenerateJsonDeserializationRoutine[T]() + 0x7d7\r\n\r\n\r\n\r\nI tried to mess with rd.xml, but really couldn't understand how to properly configure them. \r\nBut i'm always getting errors on compiling or runtime\r\n\r\nThank you.","Url":"https://github.com/dotnet/corert/issues/7895","RelatedDescription":"Open issue \"RavenDB : rd.xml editing\" (#7895)"},{"Id":"529587467","IsPullRequest":false,"CreatedAt":"2019-11-28T17:23:49","Actor":"yowl","Number":"7893","RawContent":null,"Title":"Wasm: question: boxing to Single","State":"closed","Body":"Hi, in the Wasm backend it loads float32s into float64s and adds the extends/truncs as necessary.  This has worked ok up till now, but there is a problem I think with `FieldInfo.SetValue`.  This takes an object so boxes the float32.  Currently this fails as the address passed to `SetValue` is an address to a float64 and RhBox does not expect that and the value is corrupted (a 64bit float is interpreted as a 32 bit float I think).  In other words the following test fails\r\n```\r\n    internal static void TestBoxSingle()\r\n    {\r\n        StartTest(\"Test box single\");\r\n        var fi = typeof(ClassWithFloat).GetField(\"F\");\r\n        fi.SetValue(null, 1.1f);\r\n\r\n        PrintLine(ClassWithFloat.F.ToString());\r\n        EndTest(1.1f == ClassWithFloat.F);\r\n    }\r\n}\r\n\r\npublic class ClassWithFloat\r\n{\r\n    public static float F;\r\n}\r\n``` \r\nAnd it prints -1.0842022E-19.   In the Wasm backend the evaluation stack can have a `StackEntry` type of `FloatConstantEntry`, but this I'm not sure is sufficient to solve this problem as the enum for StackValueKind is \r\n```\r\n    internal enum StackValueKind\r\n    {\r\n        /// <summary>An unknow type.</summary>\r\n        Unknown,\r\n        /// <summary>Any signed or unsigned integer values that can be represented as a 32-bit entity.</summary>\r\n        Int32,\r\n        /// <summary>Any signed or unsigned integer values that can be represented as a 64-bit entity.</summary>\r\n        Int64,\r\n        /// <summary>Underlying platform pointer type represented as an integer of the appropriate size.</summary>\r\n        NativeInt,\r\n        /// <summary>Any float value.</summary>\r\n        Float,\r\n        /// <summary>A managed pointer.</summary>\r\n        ByRef,\r\n        /// <summary>An object reference.</summary>\r\n        ObjRef,\r\n        /// <summary>A value type which is not any of the primitive one.</summary>\r\n        ValueType\r\n    }\r\n```\r\nIt does not distinguish between 32 and 64 bit floats, so its impossible, I think, to load the constant correctly from\r\n```\r\n  IL_0023:  ldc.r4     1.1\r\n  IL_0028:  box        [System.Runtime]System.Single\r\n```\r\nThe 1.1 is loaded with the `FloatConstantEntry` and it can't be passed correctly to the box/RhBox as its unknown whether to trunc the float or not.  \r\n\r\nMy question is, is my thinking correct and I need to add a new `StackEntry` type so that its known if the value was 32 or 64 bits?  This would not be a bad thing presumably from a performance point of view anyway,\r\n","Url":"https://github.com/dotnet/corert/issues/7893","RelatedDescription":"Closed issue \"Wasm: question: boxing to Single\" (#7893)"},{"Id":"529624715","IsPullRequest":true,"CreatedAt":"2019-11-28T00:04:32","Actor":"yowl","Number":"7894","RawContent":null,"Title":"WIP: Wasm: fix for boxing a float32 into Single","State":"open","Body":"Add a test and the fix for :\r\n```\r\n  IL_0023:  ldc.r4     1.1\r\n  IL_0028:  box        [System.Runtime]System.Single\r\n```\r\nWhich was failing due to using a float64 and not trunking the float64 into a float32 before calling RhBox.  Also added code to ensure that type used in the reflection has its type symbol add to the dependencies to prevent missing metadata exception.  WIP as contains changes from #7891 so will wait for that before releasing.","Url":"https://github.com/dotnet/corert/pull/7894","RelatedDescription":"Open PR \"WIP: Wasm: fix for boxing a float32 into Single\" (#7894)"},{"Id":"529491585","IsPullRequest":true,"CreatedAt":"2019-11-27T19:36:17","Actor":"MichalStrehovsky","Number":"7892","RawContent":null,"Title":"Fix `out string` arguments in reverse p/invoke","State":"closed","Body":"`EmitMarshalArgumentNativeToManaged` bypasses `AllocAndTransformManagedToNative` and calls `Alloc/TransformManagedToNative` directly. Those are no-ops for the string marshallers, leading to bad marshalling code.\r\n\r\nI think doing allocation+transform in the \"transform\" part is what CoreCLR does as well (`EmitConvertContentsCLRToNative` is where allocation+transform happens for string marshallers in CoreCLR, as opposed to `EmitConvertSpaceAndContentsCLRToNative` which would be the right place based on its name).","Url":"https://github.com/dotnet/corert/pull/7892","RelatedDescription":"Closed or merged PR \"Fix `out string` arguments in reverse p/invoke\" (#7892)"},{"Id":"528780780","IsPullRequest":true,"CreatedAt":"2019-11-27T17:30:09","Actor":"MichalStrehovsky","Number":"7890","RawContent":null,"Title":"Port p/invoke marshalling changes from CoreCLR","State":"closed","Body":"* First commit takes shared files from CoreCLR verbatim.\r\n* Second commit adjusts non-shared files.\r\n* Third commit fixes what appears to be a CppCodegen bug.\r\n","Url":"https://github.com/dotnet/corert/pull/7890","RelatedDescription":"Closed or merged PR \"Port p/invoke marshalling changes from CoreCLR\" (#7890)"},{"Id":"529428997","IsPullRequest":true,"CreatedAt":"2019-11-27T15:46:15","Actor":"yowl","Number":"7891","RawContent":null,"Title":"Wasm: fix unsigned extend to uint64 and add test","State":"open","Body":"This widening cast was failing, particular causing a problem in https://github.com/dotnet/corert/blob/8d81b96c2561fe00a0ac95a40e2dd19642971a5a/src/System.Private.CoreLib/shared/System/Number.DiyFp.cs#L77-L103.  \r\n\r\nAdded a test that failed previously and zext instead of sext for unsigned widening.  There is a parameter that I thought to use, but it is passed false here: https://github.com/dotnet/corert/blob/master/src/Common/src/TypeSystem/IL/ILImporter.cs#L574-L578.  Maybe that is wrong?\r\n\r\nAlso I updated emscripten, this wasn't necessary to fix this, but I got sidetracked with a build error and upgraded.  Its not a bad idea anyway as they changed the build tooling to allow for either the fastcomp or llvm backend and we will need to upgrade at some point.  If you just `git pull` emscripten you will hit a problem with the current scripts due to these changes.  Changed a bit of documentation to fit today's reality.","Url":"https://github.com/dotnet/corert/pull/7891","RelatedDescription":"Open PR \"Wasm: fix unsigned extend to uint64 and add test\" (#7891)"},{"Id":"528779520","IsPullRequest":true,"CreatedAt":"2019-11-26T18:12:44","Actor":"MichalStrehovsky","Number":"7889","RawContent":null,"Title":"Get System.Text.Json to work","State":"closed","Body":"The System.Text.Json that ships with the .NET Core 3.0+ uses Reflection.Emit - we should grab the NetStandard 2.0 version instead.","Url":"https://github.com/dotnet/corert/pull/7889","RelatedDescription":"Closed or merged PR \"Get System.Text.Json to work\" (#7889)"},{"Id":"528703148","IsPullRequest":false,"CreatedAt":"2019-11-26T12:48:11","Actor":"s-m-k","Number":"7888","RawContent":null,"Title":"[macOS] System.Globalization.Native not linking properly when building with InvariantCulture","State":"open","Body":"**Software version:**\r\n.NET Core SDK 2.1.300\r\nILCompiler 1.0.0-alpha-28229-02\r\nmacOS 10.14.4, Darwin Kernel Version 18.5.0\r\n\r\n**Repro steps:**\r\n1. create a MonoGame project (the framework is likely unrelated to the issue, but my project uses it and I haven't isolated the case yet)\r\n2. set `IlcInvariantGlobalization` to `true` in the project file\r\n3. make sure `System.Globalization` is included in the build (e.g. try additionally setting up `CultureInfo.InvariantCulture` at startup in the code)\r\n4. build on macOS\r\n\r\n**Results:**\r\nBuild fails during the linking stage yielding the following errors:\r\n```\r\nld : warning : can't parse dwarf compilation unit info in obj/Release/netcoreapp2.1/osx-x64/native/Carrion.o [/Users/phobia/Carrion/Carrion/Carrion.csproj]\r\n  Undefined symbols for architecture x86_64:\r\n    \"_u_charsToUChars_ptr\", referenced from:\r\n        _u_charsToUChars_safe in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_u_strlen_ptr\", referenced from:\r\n        _GetNumericPattern in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_u_strncpy_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_u_toupper_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOfOrdinalIgnoreCase in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_CompareStringOrdinalIgnoreCase in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucal_close_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_ucal_getAttribute_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_ucal_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_ucol_closeElements_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_close_ptr\", referenced from:\r\n        _GlobalizationNative_CloseSortHandle in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GetCollatorFromSortHandle in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_CompareString in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        ...\r\n    \"_ucol_getRules_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_getSortKey_ptr\", referenced from:\r\n        _GlobalizationNative_GetSortKey in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_getStrength_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_getVersion_ptr\", referenced from:\r\n        _GlobalizationNative_GetSortVersion in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_next_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_openElements_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_openRules_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetSortHandle in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_previous_ptr\", referenced from:\r\n        _SimpleAffix in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_safeClone_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_setAttribute_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_setMaxVariable_ptr\", referenced from:\r\n        _CloneCollatorWithOptions in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucol_strcoll_ptr\", referenced from:\r\n        _GlobalizationNative_CompareString in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_ucurr_forLocale_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_ucurr_getName_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_close_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n        _GlobalizationNative_GetLocaleTimeFormat in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_getSymbols_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n        _GlobalizationNative_GetLocaleTimeFormat in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_udat_toPattern_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleTimeFormat in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_canonicalize_ptr\", referenced from:\r\n        _GetLocale in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_countAvailable_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocales in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getAvailable_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocales in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getBaseName_ptr\", referenced from:\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getCharacterOrientation_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_uloc_getCountry_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getDefault_ptr\", referenced from:\r\n        _DetectDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getDisplayCountry_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getDisplayLanguage_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getDisplayName_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getISO3Country_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getISO3Language_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_uloc_getKeywordValue_ptr\", referenced from:\r\n        _GlobalizationNative_GetDefaultLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getLCID_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_uloc_getLanguage_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n        _GetLocale in System.Globalization.Native.a(pal_locale.c.o)\r\n        _GlobalizationNative_GetLocaleName in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getName_ptr\", referenced from:\r\n        _GetLocale in System.Globalization.Native.a(pal_locale.c.o)\r\n    \"_uloc_getParent_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_ulocdata_getMeasurementSystem_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_unum_close_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoGroupingSizes in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_unum_getAttribute_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoGroupingSizes in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_unum_getSymbol_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_unum_open_ptr\", referenced from:\r\n        _GlobalizationNative_GetLocaleInfoInt in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoGroupingSizes in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n        _GlobalizationNative_GetLocaleInfoString in System.Globalization.Native.a(pal_localeStringData.c.o)\r\n    \"_unum_toPattern_ptr\", referenced from:\r\n        _GetNumericPattern in System.Globalization.Native.a(pal_localeNumberData.c.o)\r\n    \"_usearch_close_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_first_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_getMatchedLength_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_last_ptr\", referenced from:\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n    \"_usearch_openFromCollator_ptr\", referenced from:\r\n        _GlobalizationNative_IndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_LastIndexOf in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexStartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_StartsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _ComplexEndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n        _GlobalizationNative_EndsWith in System.Globalization.Native.a(pal_collation.c.o)\r\n  ld: symbol(s) not found for architecture x86_64\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/Users/phobia/Carrion/Carrion/Carrion.csproj]\r\n/Users/phobia/.nuget/packages/microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/build/Microsoft.NETCore.Native.targets(295,5): error MSB3073: The command \"clang \"obj/Release/netcoreapp2.1/osx-x64/native/Carrion.o\" -o \"bin/Release/netcoreapp2.1/osx-x64/native/Carrion\" /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libbootstrapper.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libRuntime.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libSystem.Private.CoreLib.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/sdk/libSystem.Private.TypeLoader.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Globalization.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.IO.Compression.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Net.Security.Native.a /Users/phobia/.nuget/packages/runtime.osx-x64.microsoft.dotnet.ilcompiler/1.0.0-alpha-28229-02/framework/System.Security.Cryptography.Native.Apple.a -g -Wl,-rpath,'$ORIGIN' -lstdc++ -ldl -lm -lz -licucore -framework CoreFoundation -framework Security -framework GSS\" exited with code 1. [/Users/phobia/Carrion/Carrion/Carrion.csproj]\r\n```\r\n**Expected behavior:**\r\nBuild succeeds, the binary is created.\r\n\r\n**Workaround:**\r\nWhen you build on macOS, don't set `IlcInvariantGlobalization` to `true`.","Url":"https://github.com/dotnet/corert/issues/7888","RelatedDescription":"Open issue \"[macOS] System.Globalization.Native not linking properly when building with InvariantCulture\" (#7888)"},{"Id":"526893131","IsPullRequest":true,"CreatedAt":"2019-11-25T14:33:40","Actor":"yowl","Number":"7885","RawContent":null,"Title":"Wasm: Adds a test and a box for callvirt on value types where TryResolveCon…","State":"closed","Body":"…straintMethodApprox does not return a method.\r\n\r\nConstrained calls on value types to methods like ToString were not boxing the struct and hence failing.","Url":"https://github.com/dotnet/corert/pull/7885","RelatedDescription":"Closed or merged PR \"Wasm: Adds a test and a box for callvirt on value types where TryResolveCon…\" (#7885)"},{"Id":"527558607","IsPullRequest":false,"CreatedAt":"2019-11-23T13:39:33","Actor":"gimpest","Number":"7887","RawContent":null,"Title":"[SharedLibrary] SIGSEGV on unload","State":"open","Body":"on exit process\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n\r\n```\r\nProgram received signal SIGSEGV, Segmentation fault.\r\n0x00007ffff6770d58 in CloseHandle (handle=0x60d0c0) at /root/corert_3253263/src/Native/Runtime/unix/PalRedhawkUnix.cpp:583\r\n583     /root/corert_3253263/src/Native/Runtime/unix/PalRedhawkUnix.cpp: No such file or directory.\r\n(gdb) bt\r\n#0  0x00007ffff6770d58 in CloseHandle (handle=0x60d0c0) at /root/corert_3253263/src/Native/Runtime/unix/PalRedhawkUnix.cpp:583\r\n#1  0x00007ffff672fd25 in PalCloseHandle (arg1=0x60d0c0) at /root/corert_3253263/src/Native/Runtime/Full/../PalRedhawkFunctions.h:14\r\n#2  Thread::Destroy (this=0x6046d0) at /root/corert_3253263/src/Native/Runtime/thread.cpp:375\r\n#3  0x00007ffff6730e23 in ThreadStore::DetachCurrentThread () at /root/corert_3253263/src/Native/Runtime/threadstore.cpp:181\r\n#4  0x00007ffff677196e in TlsDestructionMonitor::~TlsDestructionMonitor (this=<optimized out>) at /root/corert_3253263/src/Native/Runtime/unix/PalRedhawkUnix.cpp:468\r\n#5  0x00007ffff792cb19 in (anonymous namespace)::run (p=<optimized out>) at ../../../../libstdc++-v3/libsupc++/atexit_thread.cc:64\r\n#6  0x00007ffff7024b69 in __run_exit_handlers (status=0, listp=0x7ffff73b16c8 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true) at exit.c:77\r\n#7  0x00007ffff7024bb7 in __GI_exit (status=<optimized out>) at exit.c:99\r\n#8  0x00007ffff700d3dc in __libc_start_main (main=0x400abd <main>, argc=1, argv=0x7fffffffe528, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, \r\n    stack_end=0x7fffffffe518) at ../csu/libc-start.c:300\r\n#9  0x00000000004009f9 in _start ()\r\n```\r\n\r\nshared library\r\n-------------------------------------------\r\n```\r\nusing System;\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace SharedLibrary\r\n{\r\n        public class Class1\r\n        {\r\n                [NativeCallable(EntryPoint = \"add\", CallingConvention = CallingConvention.StdCall)]\r\n                public static int Add(int a, int b)\r\n                {\r\n                        return a + b;\r\n                }\r\n        }\r\n}\r\n```\r\n\r\nsample(c++) code\r\n-------------------------------------------\r\n```\r\n#include <stdio.h>\r\n#include <dlfcn.h>\r\n\r\ntypedef int(*f_add)(int, int);\r\n\r\nint main(int argc, char* argv[]) {\r\n\tvoid* handle = dlopen (\"SharedLibrary.so\", RTLD_LAZY);\r\n        f_add add = (f_add)dlsym(handle, \"add\");\r\n        printf(\"%d\\r\\n\", add(5, 10));\r\n\tdlclose(handle);\r\n        return 0;\r\n}\r\n```","Url":"https://github.com/dotnet/corert/issues/7887","RelatedDescription":"Open issue \"[SharedLibrary] SIGSEGV on unload\" (#7887)"},{"Id":"526898250","IsPullRequest":true,"CreatedAt":"2019-11-22T04:31:51","Actor":"cshung","Number":"7886","RawContent":null,"Title":"Revert \"Support custom modifier for method signature\"","State":"closed","Body":"This reverts commit 5575cc060201ad462809f48db25a56c35e4eaca0.","Url":"https://github.com/dotnet/corert/pull/7886","RelatedDescription":"Closed or merged PR \"Revert \"Support custom modifier for method signature\"\" (#7886)"},{"Id":"526275945","IsPullRequest":true,"CreatedAt":"2019-11-21T23:19:25","Actor":"cshung","Number":"7884","RawContent":null,"Title":"[WIP] Porting changes from CoreCLR","State":"closed","Body":"WIP - this port minimal changes from CoreCLR to allow `EcmaSignatureParser.cs` to have identical content with the CoreCLR (now dotnet/runtime) copy.","Url":"https://github.com/dotnet/corert/pull/7884","RelatedDescription":"Closed or merged PR \"[WIP] Porting changes from CoreCLR\" (#7884)"},{"Id":"523136354","IsPullRequest":true,"CreatedAt":"2019-11-15T00:35:44","Actor":"Dotnet-GitSync-Bot","Number":"7883","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @elinor-fung @john-h-k @manandre @tannergooding @carlossanlop","Url":"https://github.com/dotnet/corert/pull/7883","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7883)"},{"Id":"522914006","IsPullRequest":false,"CreatedAt":"2019-11-14T15:00:12","Actor":"AArnott","Number":"7882","RawContent":null,"Title":"UWP .NET Native compilation fails when nutc_driver.exe returns exit code -2147483645","State":"open","Body":"**Repro steps**\r\n\r\n1. Create a new UWP Test project in VS 2019\r\n1. Switch to the Release|x86 solution configuration\r\n1. Build (which succeeds, but with many warnings about a missing assembly)\r\n1. Install the `System.Xml.XPath.XmlDocument` package. Build again. No warnings this time. ❓ Why is this package necessary in the default proejct yet somehow not included in the default project?\r\n1. Set the `AllowUnsafeBlocks=true` msbuild property.\r\n1. Add this method to the UWP test project (or any dependency project/package):\r\n\r\n    ```cs\r\n        private static IntPtr GetAddress(object value)\r\n        {\r\n            unsafe\r\n            {\r\n                TypedReference tr = __makeref(value);\r\n                return **(IntPtr**)(&tr);\r\n            }\r\n        }\r\n    ```\r\n\r\n1. Build again.\r\n\r\n**Expected**\r\n\r\nBuild succeeds.\r\n\r\n**Actual**\r\n\r\nBuild fails with:\r\n\r\n> C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x86.microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\x86\\ilc\\Tools\\nutc_driver.exe @\"D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\obj\\x86\\Release\\ilc\\intermediate\\MDIL\\UWPUnitTestProject2.rsp\"' returned exit code -2147483645\r\n\r\n\r\nFull log follows\r\n\r\n```\r\n1>------ Build started: Project: UWPUnitTestProject2, Configuration: Release x86 ------\r\n1>  UWPUnitTestProject2 -> D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\bin\\x86\\Release\\UWPUnitTestProject2.exe\r\n1>  Processing application code\r\n1>  Computing application closure and generating interop code\r\n1>    Loading 139 modules...\r\n1>    Generating code...\r\n1>    Interop code generated.\r\n1>  Generating serialization code\r\n1>  Compiling interop code\r\n1>  Generating System.Reflection.DispatchProxy proxy code.\r\n1>  Cleaning up unreferenced code\r\n1>  Generating native code\r\n1>C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\Microsoft.NetNative.targets(801,5): error : ILT0005: 'C:\\Program Files (x86)\\Microsoft SDKs\\UWPNuGetPackages\\runtime.win10-x86.microsoft.net.native.compiler\\2.2.7-rel-27913-00\\tools\\x86\\ilc\\Tools\\nutc_driver.exe @\"D:\\Users\\andarno\\source\\repos\\UWPUnitTestProject2\\UWPUnitTestProject2\\obj\\x86\\Release\\ilc\\intermediate\\MDIL\\UWPUnitTestProject2.rsp\"' returned exit code -2147483645\r\n========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========\r\n```","Url":"https://github.com/dotnet/corert/issues/7882","RelatedDescription":"Open issue \"UWP .NET Native compilation fails when nutc_driver.exe returns exit code -2147483645\" (#7882)"},{"Id":"522521151","IsPullRequest":true,"CreatedAt":"2019-11-14T02:41:52","Actor":"jkotas","Number":"7881","RawContent":null,"Title":"Delete dead files","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7881","RelatedDescription":"Closed or merged PR \"Delete dead files\" (#7881)"},{"Id":"522441624","IsPullRequest":false,"CreatedAt":"2019-11-13T20:02:05","Actor":"Shadow4walker","Number":"7880","RawContent":null,"Title":"HttpWebRequest/HttpWebResponse Not Working!","State":"open","Body":"HttpWebRequest request= with Headers ....etc\r\nvar httpWebResponse = (HttpWebResponse) await request.GetResponseAsync()\r\nnever passed this code >fail fast!! idk what to put in the rd.xml or if event i should put anything there!","Url":"https://github.com/dotnet/corert/issues/7880","RelatedDescription":"Open issue \"HttpWebRequest/HttpWebResponse Not Working!\" (#7880)"},{"Id":"521355526","IsPullRequest":true,"CreatedAt":"2019-11-12T08:01:33","Actor":"Dotnet-GitSync-Bot","Number":"7879","RawContent":null,"Title":"Mirror changes from dotnet/coreclr,corefx","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr,corefx\n\n\n**Please REBASE this PR when merging**\n\n cc @stephentoub @ts2do @elinor-fung","Url":"https://github.com/dotnet/corert/pull/7879","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr,corefx\" (#7879)"},{"Id":"521113889","IsPullRequest":true,"CreatedAt":"2019-11-12T06:24:24","Actor":"Dotnet-GitSync-Bot","Number":"7878","RawContent":null,"Title":"Mirror changes from dotnet/coreclr","State":"closed","Body":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**\n\n cc @jkotas @stephentoub","Url":"https://github.com/dotnet/corert/pull/7878","RelatedDescription":"Closed or merged PR \"Mirror changes from dotnet/coreclr\" (#7878)"},{"Id":"520572011","IsPullRequest":true,"CreatedAt":"2019-11-10T14:20:44","Actor":"jkotas","Number":"7877","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"","Url":"https://github.com/dotnet/corert/pull/7877","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#7877)"}],"ResultType":"GitHubIssue"},"SDK-Issues":{"Issues":[{"Id":"534322485","IsPullRequest":true,"CreatedAt":"2019-12-07T00:38:37","Actor":"wli3","Number":"4019","RawContent":null,"Title":"disable useapphost on mac by default","State":"open","Body":"","Url":"https://github.com/dotnet/sdk/pull/4019","RelatedDescription":"Open PR \"disable useapphost on mac by default\" (#4019)"},{"Id":"533677769","IsPullRequest":true,"CreatedAt":"2019-12-06T20:12:16","Actor":"dotnet-maestro-bot","Number":"4013","RawContent":null,"Title":"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'","State":"closed","Body":"I detected changes in the release/3.1.1xx branch which have not been merged yet to release/3.1.2xx. I'm a robot and am configured to help you automatically keep release/3.1.2xx up to date, so I've opened this PR.\r\n\r\nThis PR merges commits made on release/3.1.1xx by the following committers:\n\n* mmitche\n* dotnet-maestro[bot]\r\n\r\n## Instructions for merging from UI\r\n\r\nThis PR will not be auto-merged. When pull request checks pass, complete this PR by creating a merge commit, *not* a squash or rebase commit.\r\n\r\n<img alt=\"merge button instructions\" src=\"https://i.imgur.com/GepcNJV.png\" width=\"300\" />\r\n\r\nIf this repo does not allow creating merge commits from the GitHub UI, use command line instructions.\r\n\r\n## Instructions for merging via command line\r\n\r\nRun these commands to merge this pull request from the command line.\r\n\r\n``` sh\r\ngit fetch\r\ngit checkout release/3.1.1xx\r\ngit pull --ff-only\r\ngit checkout release/3.1.2xx\r\ngit pull --ff-only\r\ngit merge --no-ff release/3.1.1xx\r\n\r\n# If there are merge conflicts, resolve them and then run git merge --continue to complete the merge\r\n# Pushing the changes to the PR branch will re-trigger PR validation.\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n<summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\n\r\nAfter PR checks are complete push the branch\r\n```\r\ngit push\r\n```\r\n\r\n## Instructions for resolving conflicts\r\n\r\n:warning: If there are merge conflicts, you will need to resolve them manually before merging. You can do this [using GitHub][resolve-github] or using the [command line][resolve-cli].\r\n\r\n[resolve-github]: https://help.github.com/articles/resolving-a-merge-conflict-on-github/\r\n[resolve-cli]: https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\r\n\r\n## Instructions for updating this pull request\r\n\r\nContributors to this repo have permission update this pull request by pushing to the branch 'merge/release/3.1.1xx-to-release/3.1.2xx'. This can be done to resolve conflicts or make other changes to this pull request before it is merged.\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull https://github.com/dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push https://github.com/dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n<details>\r\n    <summary>or if you are using SSH</summary>\r\n\r\n```\r\ngit checkout -b merge/release/3.1.1xx-to-release/3.1.2xx release/3.1.2xx\r\ngit pull git@github.com:dotnet-maestro-bot/sdk merge/release/3.1.1xx-to-release/3.1.2xx\r\n(make changes)\r\ngit commit -m \"Updated PR with my changes\"\r\ngit push git@github.com:dotnet-maestro-bot/sdk HEAD:merge/release/3.1.1xx-to-release/3.1.2xx\r\n```\r\n\r\n</details>\r\n\r\nContact .NET Core Engineering if you have questions or issues.\r\nAlso, if this PR was generated incorrectly, help us fix it. See https://github.com/dotnet/arcade/blob/master/scripts/GitHubMergeBranches.ps1.\r\n","Url":"https://github.com/dotnet/sdk/pull/4013","RelatedDescription":"Closed or merged PR \"[automated] Merge branch 'release/3.1.1xx' => 'release/3.1.2xx'\" (#4013)"},{"Id":"533539566","IsPullRequest":true,"CreatedAt":"2019-12-06T18:05:58","Actor":"wli3","Number":"4005","RawContent":null,"Title":"Update branding to \"preview\"","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/4005","RelatedDescription":"Closed or merged PR \"Update branding to \"preview\"\" (#4005)"},{"Id":"532317684","IsPullRequest":true,"CreatedAt":"2019-12-06T17:51:05","Actor":"fadimounir","Number":"3994","RawContent":null,"Title":"Enable R2R publishing for library projects","State":"closed","Body":"Ported from https://github.com/dotnet/sdk/pull/3874\r\n\r\n**Description**\r\nThis fix is a porting of https://github.com/dotnet/sdk/pull/3874 into the release branch, to enable ReadyToRun compilation when publishing non-exe project types. \r\nPublishing ReadyToRun for non-exe projects was disabled in the 3.0 release, but this restriction is unnecessary.\r\n\r\n**Customer Impact**\r\nThis will enable customer scenarios like Azure functions to use ReadyToRun images and get the improved startup performance (Azure function projects are DLL projects).\r\n\r\n**Regression?**\r\nNo, just a relaxation of an unnecessary limitation\r\n\r\n**Risk**\r\nLow\r\n","Url":"https://github.com/dotnet/sdk/pull/3994","RelatedDescription":"Closed or merged PR \"Enable R2R publishing for library projects\" (#3994)"},{"Id":"534145328","IsPullRequest":false,"CreatedAt":"2019-12-06T17:02:11","Actor":"JerryJoyce","Number":"4018","RawContent":null,"Title":"dotnet clean fails if NuGet package references have never been restored","State":"open","Body":"**Environment**\r\nUbuntu 18.04\r\n\r\n**Dotnet --info**\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.101\r\n Commit:    bc5f8df0f5\r\n\r\nRuntime Environment:\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.0.101/\r\n\r\nHost (useful for support):\r\n  Version: 3.0.1\r\n  Commit:  19942e7199\r\n\r\n.NET Core SDKs installed:\r\n  3.0.101 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.0.1 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n**Details**\r\nI'm using an Ubuntu 18.04 container to build.  In a clean container, I get the following error when trying to clean my projects (if they have not been built before):\r\n\r\n```/usr/share/dotnet/sdk/3.0.101/Sdks/Microsoft.NET.Sdk/targets/Microsoft.PackageDependencyResolution.targets(234,5): error NETSDK1064: Package Google.Protobuf, version 3.9.1 was not found. It might have been deleted since NuGet restore. Otherwise, NuGet restore might have only partially completed, which might have been due to maximum path length restrictions.```\r\n\r\nThe error itself seems benign, but the problem is that this project is being built as part of a larger mixed language project that uses bash scripts to build.  The scripts exit on error which fails the build.  I can work around this by wrapping the \"dotnet clean\" calls with +e/-e but this still results with errors in the logs.\r\n\r\nIs there perhaps some additional step I can do prior to cleaning to prevent this?  I don't want to \"dotnet restore\" prior to every clean, and trying to find some pre-condition to check before doing the clean seems fragile.","Url":"https://github.com/dotnet/sdk/issues/4018","RelatedDescription":"Open issue \"dotnet clean fails if NuGet package references have never been restored\" (#4018)"},{"Id":"534066932","IsPullRequest":false,"CreatedAt":"2019-12-06T15:18:10","Actor":"dmorrison42","Number":"4017","RawContent":null,"Title":"Cannot make trimmed single executable with debugging symbols","State":"open","Body":"Unfortunately, I am unsure if this is a feature request, bug report, or my failure to properly read the documentation, but I am unable to make a trimmed single executable with debugging symbols. I have a simple code example here : https://github.com/dmorrison42/CrashTestDummy\r\n\r\nThe following line will create a single executable that will print a line number of an exception, but is fairly large (~67M).\r\n\r\n~~~bash\r\ndotnet publish -c release -r win7-x64 -p:PublishSingleFile=true -p:IncludeSymbolsInSingleFile=true -o .\r\n~~~\r\n\r\nThe following line with create a single executable that will print no line number, but is *relatively* small (~25M).\r\n\r\n~~~bash\r\ndotnet publish -c release -r win7-x64 -p:PublishSingleFile=true -p:IncludeSymbolsInSingleFile=true -p:PublishTrimmed=true -o .\r\n~~~\r\n\r\nI would like something that will give me the best of both worlds, but I haven't found it yet.\r\n\r\nI am using dotnet core 3.1.100.","Url":"https://github.com/dotnet/sdk/issues/4017","RelatedDescription":"Open issue \"Cannot make trimmed single executable with debugging symbols\" (#4017)"},{"Id":"533961299","IsPullRequest":true,"CreatedAt":"2019-12-06T14:31:49","Actor":"dotnet-maestro[bot]","Number":"4016","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191205.6\r\n- **Date Produced**: 12/5/2019 9:49 PM\r\n- **Commit**: 45bfe0972a7354356daf799aae88533dcd0f071a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19605.6\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19605.6\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4016","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4016)"},{"Id":"533839841","IsPullRequest":false,"CreatedAt":"2019-12-06T09:18:20","Actor":"eriawan","Number":"4015","RawContent":null,"Title":"Updating VS 2019 from 16.3.x to 16.14.0 uninstall existing .NET Core SDK 3.0.100","State":"open","Body":"I have 2 different machines that has VS 2019 16.3.10 and VS 2019 16.3.7 on Windows 10 1909. \r\nBoth of them have .NET Core SDK v3.0.100 installed.\r\n\r\nAfter I update to VS 2019 16.4.0, the .NET Core SDK v3.0.100 got uninstalled and .NET Core 3.1.100 is installed. I don't mind having .NET Core 3.1.100 SDK installed. \r\n\r\nMy problem is why .NET Core 3.0.100 is uninstalled on every time I update VS 2019 from v16.3.x to v16.4.0?\r\n","Url":"https://github.com/dotnet/sdk/issues/4015","RelatedDescription":"Open issue \"Updating VS 2019 from 16.3.x to 16.14.0 uninstall existing .NET Core SDK 3.0.100\" (#4015)"},{"Id":"533804186","IsPullRequest":false,"CreatedAt":"2019-12-06T07:53:19","Actor":"Eznoka","Number":"4014","RawContent":null,"Title":"[dotnet 3.1] dotnet new: error on Fedora 31","State":"open","Body":"Hi,\r\n\r\nSteps to reproduce:\r\n\r\n1. On Fedora 31, up to date ('dnf distrosync --refresh'), with dotnet repo enabled.\r\n2. Remove dotnet-sdk (3.0) and its dependencies\r\n3. Install dotnet-sdk-3.1 (dnf)\r\n4. Run dotnet new ...\r\nI got the following error message, same with different 'dotnet' new options.\r\n\r\n```\r\n`[eznoka@fedora-fpe-home ~]$ dotnet new\r\nGetting ready...\r\nObject reference not set to an instance of an object.\r\n   at Microsoft.TemplateEngine.Edge.Settings.SettingsLoader.Save(TemplateCache cacheToSave)\r\n   at Microsoft.TemplateEngine.Edge.Settings.SettingsLoader.Save()\r\n   at Microsoft.TemplateEngine.Cli.Installer.InstallPackages(IEnumerable`1 installationRequests, IList`1 nuGetSources, Boolean debugAllowDevInstall)\r\n   at Microsoft.TemplateEngine.Cli.Installer.InstallPackages(IEnumerable`1 installationRequests)\r\n   at Microsoft.DotNet.Tools.New.NewCommandShim.FirstRun(IEngineEnvironmentSettings environmentSettings, IInstaller installer)\r\n   at Microsoft.TemplateEngine.Cli.New3Command.ConfigureEnvironment()\r\n   at Microsoft.TemplateEngine.Cli.New3Command.Initialize()\r\n   at Microsoft.TemplateEngine.Cli.New3Command.ExecuteAsync()\r\n   at Microsoft.TemplateEngine.Cli.CommandParsing.NewCommandInputCli.<>c__DisplayClass19_0.<<OnExecute>b__0>d.MoveNext()\r\n`\r\n```\r\n\r\nResult of dotnet --info:\r\n```\r\n[eznoka@fedora-fpe-home ~]$ dotnet --info\r\nSDK .NET Core (reflétant tous les global.json) :\r\n Version:   3.1.100\r\n Commit:    cd82f021f4\r\n\r\nEnvironnement d'exécution :\r\n OS Name:     fedora\r\n OS Version:  31\r\n OS Platform: Linux\r\n RID:         fedora.31-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.1.100/\r\n\r\nHost (useful for support):\r\n  Version: 3.1.0\r\n  Commit:  157910edee\r\n\r\n.NET Core SDKs installed:\r\n  3.1.100 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.0 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.0 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n`\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/4014","RelatedDescription":"Open issue \"[dotnet 3.1] dotnet new: error on Fedora 31\" (#4014)"},{"Id":"533566600","IsPullRequest":false,"CreatedAt":"2019-12-06T05:11:37","Actor":"dehghani-mehdi","Number":"4008","RawContent":null,"Title":"Some tests failed, but ERRORLEVEL is 0","State":"closed","Body":"Hi,\r\n\r\nI'm using `xUnit`, after running `dotnet test MyApp.Tests.csproj`, I got:\r\n\r\n```\r\nTest Run Failed.\r\nTotal tests: 8\r\n     Passed: 5\r\n     Failed: 3\r\n Total time: 1.3661 Seconds\r\n```\r\n\r\nBut the value of `%ERRORLEVEL%` is 0.\r\n\r\n`dotnet --version` -> `3.0.100`\r\n\r\n","Url":"https://github.com/dotnet/sdk/issues/4008","RelatedDescription":"Closed issue \"Some tests failed, but ERRORLEVEL is 0\" (#4008)"},{"Id":"533616557","IsPullRequest":true,"CreatedAt":"2019-12-06T00:32:15","Actor":"mmitche","Number":"4011","RawContent":null,"Title":"[release/3.1.2xx] Update to 3.1.100 rtm SDK","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/4011","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update to 3.1.100 rtm SDK\" (#4011)"},{"Id":"533616221","IsPullRequest":true,"CreatedAt":"2019-12-06T00:32:07","Actor":"mmitche","Number":"4010","RawContent":null,"Title":"[release/3.1.1xx] Update to 3.1.100 rtm SDK","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/4010","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update to 3.1.100 rtm SDK\" (#4010)"},{"Id":"533622558","IsPullRequest":false,"CreatedAt":"2019-12-05T21:58:28","Actor":"wli3","Number":"4012","RawContent":null,"Title":"Change default UseApphost=false when macOS","State":"open","Body":"Workaround for osx 10.13 notarization issue for 3.x","Url":"https://github.com/dotnet/sdk/issues/4012","RelatedDescription":"Open issue \"Change default UseApphost=false when macOS\" (#4012)"},{"Id":"533009302","IsPullRequest":true,"CreatedAt":"2019-12-05T21:23:57","Actor":"dotnet-maestro[bot]","Number":"4000","RawContent":null,"Title":"[release/3.0.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:df8a2755-bec9-40dc-b710-08d7368af630)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191203.16\r\n- **Date Produced**: 12/3/2019 9:25 PM\r\n- **Commit**: 8e47254f93b276c974968aff83222f89ec3931ed\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19603.16\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19603.16\r\n\r\n[marker]: <> (End:df8a2755-bec9-40dc-b710-08d7368af630)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4000","RelatedDescription":"Closed or merged PR \"[release/3.0.1xx] Update dependencies from dotnet/arcade\" (#4000)"},{"Id":"533009124","IsPullRequest":true,"CreatedAt":"2019-12-05T21:08:24","Actor":"dotnet-maestro[bot]","Number":"3999","RawContent":null,"Title":"[release/3.1.2xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fdee9669-2308-4505-9018-08d76d41c6c3)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191203.16\r\n- **Date Produced**: 12/3/2019 9:25 PM\r\n- **Commit**: 8e47254f93b276c974968aff83222f89ec3931ed\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19603.16\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19603.16\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19603.16\r\n\r\n[marker]: <> (End:fdee9669-2308-4505-9018-08d76d41c6c3)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3999","RelatedDescription":"Closed or merged PR \"[release/3.1.2xx] Update dependencies from dotnet/arcade\" (#3999)"},{"Id":"533594317","IsPullRequest":false,"CreatedAt":"2019-12-05T20:56:11","Actor":"dsplaisted","Number":"4009","RawContent":null,"Title":"Automatically reference .NET Framework reference assembly packages if needed","State":"open","Body":"We've recently released [Microsoft.NETFramework.ReferenceAssemblies packages](https://www.nuget.org/packages/Microsoft.NETFramework.ReferenceAssemblies/) which support building projects targeting .NET Framework on systems without the corresponding reference assembly packages installed globally (for example on a non-Windows machine).\r\n\r\nNow that the packages are available, we should update the SDK to automatically include the reference when needed.\r\n\r\nRelated: #335, dotnet/designs#33","Url":"https://github.com/dotnet/sdk/issues/4009","RelatedDescription":"Open issue \"Automatically reference .NET Framework reference assembly packages if needed\" (#4009)"},{"Id":"533009937","IsPullRequest":true,"CreatedAt":"2019-12-05T20:49:57","Actor":"dotnet-maestro[bot]","Number":"4001","RawContent":null,"Title":"[release/3.1.1xx] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191203.16\r\n- **Date Produced**: 12/3/2019 9:25 PM\r\n- **Commit**: 8e47254f93b276c974968aff83222f89ec3931ed\r\n- **Branch**: refs/heads/release/3.x\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 1.0.0-beta.19603.16\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 2.0.0-beta.19603.16\r\n  - **Microsoft.DotNet.SignTool** -> 1.0.0-beta.19603.16\r\n\r\n[marker]: <> (End:e76888f5-e4f1-4c3d-d4c4-08d7315d8bc7)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4001","RelatedDescription":"Closed or merged PR \"[release/3.1.1xx] Update dependencies from dotnet/arcade\" (#4001)"},{"Id":"533337261","IsPullRequest":true,"CreatedAt":"2019-12-05T20:13:56","Actor":"dotnet-maestro[bot]","Number":"4004","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191204.4\r\n- **Date Produced**: 12/5/2019 1:13 AM\r\n- **Commit**: f2999360b70f05d7738cbfa2b61d1fdaff4ee77d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19604.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19604.4\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19604.4\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/4004","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4004)"},{"Id":"533563607","IsPullRequest":false,"CreatedAt":"2019-12-05T19:53:26","Actor":"anurse","Number":"4007","RawContent":null,"Title":"UserSecretsId attribute not generated when M.E.C.UserSecrets reference transitively","State":"open","Body":"## Overview\r\n\r\nThe logic that injects the `UserSecretsIdAttribute` appears to only work if the `Microsoft.Extensions.Configuration.UserSecrets` package is reference directly (or through the ASP.NET Core runtime). The worker template references it transitively through `Microsoft.Extensions.Hosting` and the attribute is never generated and user secrets are not loaded.\r\n\r\nThis was originally reported by customers: https://github.com/aspnet/Extensions/issues/2743 https://github.com/aspnet/AspNetCore.Docs/issues/14315\r\n\r\n## Repro Steps\r\n\r\nRepro repo (just clone and skip to step 3): https://github.com/anurse/UserSecretsInWorkerRepro\r\n\r\n1. `dotnet new worker`\r\n2. Edit `ExecuteAsync` in `Worker.cs` to the following\r\n\r\n```csharp\r\nprotected override async Task ExecuteAsync(CancellationToken stoppingToken)\r\n{\r\n    while (!stoppingToken.IsCancellationRequested)\r\n    {\r\n        _logger.LogInformation(\"Worker running at: {time}\", DateTimeOffset.Now);\r\n        _logger.LogInformation(\"The secret is: {Secret}\", _config[\"SecretName\"]);\r\n        await Task.Delay(1000, stoppingToken);\r\n    }\r\n}\r\n```\r\n\r\n3. Set a user secret value: `dotnet user-secrets set \"SecretName\" \"SecretValue\"`\r\n4. Run with `dotnet run`\r\n\r\n## Expected Results\r\n\r\nThe secret value is written in a log message like:\r\n\r\n```\r\ninfo: UserSecretsInWorkerRepro.Worker[0]\r\n      Worker running at: 12/05/2019 11:51:07 -08:00\r\ninfo: UserSecretsInWorkerRepro.Worker[0]\r\n      The secret is: SecretValue\r\n```\r\n\r\n## Actual Results\r\n\r\nThe secret value is not present\r\n\r\n```\r\ninfo: UserSecretsInWorkerRepro.Worker[0]\r\n      Worker running at: 12/05/2019 11:51:07 -08:00\r\ninfo: UserSecretsInWorkerRepro.Worker[0]\r\n      The secret is: (null)\r\n```","Url":"https://github.com/dotnet/sdk/issues/4007","RelatedDescription":"Open issue \"UserSecretsId attribute not generated when M.E.C.UserSecrets reference transitively\" (#4007)"},{"Id":"533559315","IsPullRequest":false,"CreatedAt":"2019-12-05T19:46:52","Actor":"dehghani-mehdi","Number":"4006","RawContent":null,"Title":"Why `dotnet clean` prints `Build succeeded.` instead of `Clean succeeded.`","State":"open","Body":"Hi,\r\n\r\nI think the _success_ message should be `Clean succeeded.` after running `dotnet clean`. ","Url":"https://github.com/dotnet/sdk/issues/4006","RelatedDescription":"Open issue \"Why `dotnet clean` prints `Build succeeded.` instead of `Clean succeeded.`\" (#4006)"},{"Id":"533318221","IsPullRequest":false,"CreatedAt":"2019-12-05T12:22:12","Actor":"ceka","Number":"4003","RawContent":null,"Title":"ubuntu16.04 NuGetFallbackFolder not empty when uninstalling dotnet-sdk-3.1","State":"open","Body":"dpkg: warning: while removing dotnet-sdk-3.1, directory '/usr/share/dotnet/sdk' not empty so not removed\r\n\r\n```bash\r\nroot@poznan:~# du -hs /usr/share/dotnet/sdk/NuGetFallbackFolder/\r\n1.6G    /usr/share/dotnet/sdk/NuGetFallbackFolder/\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/4003","RelatedDescription":"Open issue \"ubuntu16.04 NuGetFallbackFolder not empty when uninstalling dotnet-sdk-3.1\" (#4003)"},{"Id":"533213072","IsPullRequest":false,"CreatedAt":"2019-12-05T09:01:40","Actor":"devrgbSJ7096","Number":"4002","RawContent":null,"Title":".Net Core cannot find ProjectName.dll","State":"open","Body":"I faced this weird issue when I tried to run my api in CentOS 7 with .net Core 3.0.1\r\nThe mentioned DLL which could not load is actually the dll that I ran.\r\n\r\n![image](https://user-images.githubusercontent.com/55703327/70219018-1216f000-177f-11ea-8355-ea822d83d85b.png)\r\n\r\nHowever, when I try to run the exact package in windows OS, it is totally runnable. \r\n\r\nBelow is the .net info in CentOS 7\r\n![image](https://user-images.githubusercontent.com/55703327/70219480-d9c3e180-177f-11ea-8c87-d421a2da2028.png)\r\n\r\nAnd this is .net info in windows OS\r\n![image](https://user-images.githubusercontent.com/55703327/70219573-04ae3580-1780-11ea-9396-321326add315.png)\r\n\r\nthe project.csproj\r\n![image](https://user-images.githubusercontent.com/55703327/70219627-1c85b980-1780-11ea-87a5-ee415e7e59a7.png)\r\n\r\nHow to solve this issue ? \r\nPS: all the references project and api are running in .net core 3.0\r\n","Url":"https://github.com/dotnet/sdk/issues/4002","RelatedDescription":"Open issue \".Net Core cannot find ProjectName.dll\" (#4002)"},{"Id":"532669275","IsPullRequest":true,"CreatedAt":"2019-12-04T14:21:55","Actor":"dotnet-maestro[bot]","Number":"3998","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191203.17\r\n- **Date Produced**: 12/3/2019 9:35 PM\r\n- **Commit**: b902fd6b6948e689a5128fa6d94dc7de13e6af84\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19603.17\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19603.17\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19603.17\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3998","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3998)"},{"Id":"532643667","IsPullRequest":false,"CreatedAt":"2019-12-04T12:08:24","Actor":"khusroohayat","Number":"3997","RawContent":null,"Title":"New file in watch","State":"open","Body":"while running dotnet watch run command in console. when i add file in one of the dependencies project, the run command didn't compiles the code, i have to stop this and run the same command again","Url":"https://github.com/dotnet/sdk/issues/3997","RelatedDescription":"Open issue \"New file in watch\" (#3997)"},{"Id":"532486644","IsPullRequest":false,"CreatedAt":"2019-12-04T06:52:23","Actor":"mike-jewell","Number":"3996","RawContent":null,"Title":"dotnet dev-certs https and kestrel using old expired cert for a solution","State":"open","Body":"I have a really strange issue and I am concerned I might need to rebuild my machine.  I had an expired certificate from dotnet dev-certs several months ago.  I ran:\r\n\r\n`dotnet dev-certs --clean`\r\n\r\nand then:\r\n\r\n`dotnet dev-certs --trust`\r\n\r\nIn the certmgr for my user I see the new certificate, and the old one has gone.  However there is a corruption somewhere on my machine (Windows 10, latest updates on the dev insider build) that is making only one solution to use the old certificate to be referenced in all browsers on my machine.\r\n\r\nI can see the cert in the browser, and it is the old one.  I have searched everywhere I can in both the user and computer certificate managers, but cannot find the old certificate.  The browsers stated there was an issue but allowed me to carry on, but I have just upgraded to dotnet core 3.1 and now I am getting an error ERR_HTTP2_INADEQUATE_TRANSPORT_SECURITY in the browser.\r\n\r\nThis isn't the issue though, the cert the browser picks up from kestral on this one machine is expired and doesn't exist.  This solution runs fine on a fresh clone on another computer, it is just this one machine that has the issue.\r\n\r\nMy questions are:\r\n\r\nDoes 'dotnet dev-certs --trust' put the certs somewhere else that I cannot see? \r\n\r\nCan I remove this cert somehow using the serial number or thumbprint I have?\r\n\r\nI know this is a vague wishy washy issue to have raised, but I am in the weeds with OS dependencies, kestrel, dotnet cli and tools, and browsers (IE11, Firefox, Chrome, Edge).  I don't know how to provide the OS logs or proof without reems of screenshots, but if requested I can.  I'd really like to not have to rebuild this machine.","Url":"https://github.com/dotnet/sdk/issues/3996","RelatedDescription":"Open issue \"dotnet dev-certs https and kestrel using old expired cert for a solution\" (#3996)"},{"Id":"532354040","IsPullRequest":true,"CreatedAt":"2019-12-04T01:37:07","Actor":"wli3","Number":"3995","RawContent":null,"Title":"Merge release/2.1.6xx  to release/2.1.8xx mac apphost port","State":"closed","Body":"","Url":"https://github.com/dotnet/sdk/pull/3995","RelatedDescription":"Closed or merged PR \"Merge release/2.1.6xx  to release/2.1.8xx mac apphost port\" (#3995)"},{"Id":"532295873","IsPullRequest":false,"CreatedAt":"2019-12-03T22:02:05","Actor":"0xd4d","Number":"3993","RawContent":null,"Title":"3.1.100 + Publish + NoPIA adds COM lib to deps json file resulting in crash at runtime","State":"open","Body":"If you use .NET Core 3.1.100 SDK to publish a simple app with a COMReference and try to run it, it crashes at runtime because the deps json file has a reference to the COM DLL file.\r\n\r\nPossibly related to this PR https://github.com/dotnet/sdk/pull/3539\r\n\r\n```pwsh\r\n# build it with .NET Core 3.1 SDK\r\nmsbuild -v:m -m -restore -t:Publish -p:Configuration=Release -p:TargetFramework=netcoreapp3.1 -p:RuntimeIdentifier=win-x64 -p:SelfContained=True\r\n# works\r\n.\\bin\\Release\\netcoreapp3.1\\win-x64\\ConsoleApp19.exe\r\n# crashes, see below\r\n.\\bin\\Release\\netcoreapp3.1\\win-x64\\publish\\ConsoleApp19.exe\r\n```\r\n\r\n```\r\nError:\r\n  An assembly specified in the application dependencies manifest (ConsoleApp19.deps.json) was not found:\r\n    package: 'Interop.IWshRuntimeLibrary', version: '1.0.0.0'\r\n    path: 'Interop.IWshRuntimeLibrary.dll'\r\n```\r\n\r\nThis DLL file shouldn't even be in the deps json file and wasn't included by .NET Core SDK 3.0.\r\n\r\n```csproj\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFrameworks>netcoreapp3.1;netcoreapp3.0</TargetFrameworks>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <COMReference Include=\"IWshRuntimeLibrary\">\r\n      <Guid>{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B}</Guid>\r\n      <VersionMajor>1</VersionMajor>\r\n      <VersionMinor>0</VersionMinor>\r\n      <Lcid>0</Lcid>\r\n      <WrapperTool>tlbimp</WrapperTool>\r\n      <Isolated>False</Isolated>\r\n      <EmbedInteropTypes>True</EmbedInteropTypes>\r\n    </COMReference>\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n\r\n```C#\r\nusing System;\r\n\r\nnamespace ConsoleApp19\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n        }\r\n    }\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/sdk/issues/3993","RelatedDescription":"Open issue \"3.1.100 + Publish + NoPIA adds COM lib to deps json file resulting in crash at runtime\" (#3993)"},{"Id":"532273034","IsPullRequest":false,"CreatedAt":"2019-12-03T21:19:13","Actor":"wli3","Number":"3992","RawContent":null,"Title":"PrintAddPathInstructionIfPathDoesNotExist should be more visible","State":"open","Body":"The current \"add to path instruction\" is not visible from normal successful output.","Url":"https://github.com/dotnet/sdk/issues/3992","RelatedDescription":"Open issue \"PrintAddPathInstructionIfPathDoesNotExist should be more visible\" (#3992)"},{"Id":"531968400","IsPullRequest":true,"CreatedAt":"2019-12-03T14:16:47","Actor":"dotnet-maestro[bot]","Number":"3991","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Build**: 20191202.4\r\n- **Date Produced**: 12/2/2019 10:25 PM\r\n- **Commit**: 9d34fd008e754e1ada35c8b6bc3694e7a90b4ed7\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk** -> 5.0.0-beta.19602.4\r\n  - **Microsoft.DotNet.Helix.Sdk** -> 5.0.0-beta.19602.4\r\n  - **Microsoft.DotNet.SignTool** -> 5.0.0-beta.19602.4\r\n\r\n[marker]: <> (End:daa187e0-7e60-4c7a-c1ac-08d6354da8a8)\r\n\r\n","Url":"https://github.com/dotnet/sdk/pull/3991","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3991)"},{"Id":"531745709","IsPullRequest":false,"CreatedAt":"2019-12-03T06:05:30","Actor":"NicolasDorier","Number":"3990","RawContent":null,"Title":"OutputType does not set Nt headers correctly on Linux","State":"open","Body":"Publishing my app on `mcr.microsoft.com/dotnet/core/sdk:3.0.101-buster` for win-x64, it seems that the `OutputType` is completely ignored from the resulting executable. (not using `PublishSingleFile`)\r\n\r\nThe NT Headers value for subsystem is console instead of Windows GUI.\r\nWorkaround: Binary modification of the executable.","Url":"https://github.com/dotnet/sdk/issues/3990","RelatedDescription":"Open issue \"OutputType does not set Nt headers correctly on Linux\" (#3990)"}],"ResultType":"GitHubIssue"},"Announcements-Issues":{"Issues":[{"Id":"532249858","IsPullRequest":false,"CreatedAt":"2019-12-03T20:36:29","Actor":"MichaelSimons","Number":"143","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.1","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.1\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.1](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/).\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1511)\r\n\r\n## Details\r\n\r\n* [dotnet-docker#1509](https://github.com/dotnet/dotnet-docker/pull/1509)\r\n\r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.1. This version of .NET Core is also a [long-term supported (LTS) release](https://dotnet.microsoft.com/platform/support/policy/dotnet-core).\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n\r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.1`.","Url":"https://github.com/dotnet/announcements/issues/143","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.1\" (#143)"},{"Id":"532163408","IsPullRequest":false,"CreatedAt":"2019-12-03T18:00:27","Actor":"leecow","Number":"142","RawContent":null,"Title":".NET Core 3.1.0","State":"open","Body":".NET Core 3.1.0 is available and https://github.com/dotnet/core/issues/3950 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.0/3.1.0.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 , either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/142","RelatedDescription":"Open issue \".NET Core 3.1.0\" (#142)"},{"Id":"523579400","IsPullRequest":false,"CreatedAt":"2019-11-15T16:51:27","Actor":"MichaelSimons","Number":"141","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Framework","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Framework\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Framework container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Framework Docker images](https://hub.docker.com/_/microsoft-dotnet-framework)\r\n* [.NET Framework Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-framework)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-framework-docker #451](https://github.com/microsoft/dotnet-framework-docker/issues/451)\r\n\r\n## Details\r\n\r\nDocker tags that contain `windowsservercore-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Windows Server and .NET Framework.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `4.8`. These are tags that are supported on multiple operating systems and versions, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Windows Server, version 1803 images (even though they are no longer supported), you will need to use tags that include the Windows Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/framework/runtime:4.8-windowsservercore-1803` or `mcr.microsoft.com/dotnet/framework/sdk:4.8-windowsservercore-1803`.","Url":"https://github.com/dotnet/announcements/issues/141","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Framework\" (#141)"},{"Id":"523578215","IsPullRequest":false,"CreatedAt":"2019-11-15T16:49:04","Actor":"MichaelSimons","Number":"140","RawContent":null,"Title":"Windows Server, version 1803 no longer supported by .NET Core","State":"open","Body":"# Windows Server, version 1803 no longer supported by .NET Core\r\n\r\nWindows Server, version 1803 is no longer supported. As a result, this version of Windows is no longer supported by the .NET Team and we will no longer produce .NET Core container images for this Windows version.\r\n\r\nSupport statements:\r\n\r\n* [Currently supported .NET Core Docker images](https://hub.docker.com/_/microsoft-dotnet-core)\r\n* [.NET Core Support Policy](https://dotnet.microsoft.com/platform/support/policy/dotnet-core)\r\n* [Products Reaching End of Support for 2019](https://support.microsoft.com/en-us/help/4316957/products-reaching-end-of-support-for-2019)\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n* [dotnet-docker #1469](https://github.com/dotnet/dotnet-docker/issues/1469)\r\n\r\n## Details\r\n\r\nDocker tags that contain `nanoserver-1803` are no longer being produced. We will not delete existing images or those tags. However, they contain unsupported builds of Nano Server and .NET Core.\r\n\r\n## Pulling manifest tags\r\n\r\nThese changes also affect manifest tags (AKA “multi-arch tags“), such as `3.0`, `3.0.0`. These are tags that are supported on multiple operating systems, and do not contain the operating system in them. As a result of no longer producing new images for Windows Server, version 1803, manifest tags no longer include entries for Windows 10, version 1803, and Windows Server, version 1803. That means that .NET Core manifest tags are no longer usable on those Windows versions.\r\n\r\nIf you pull a manifest tag on one of the Windows versions described, you may get one of the following error messages:\r\n\r\n* `a Windows version 10.0.18362-based image is incompatible with a 10.0.17134 host`\r\n* `no matching manifest for windows/amd64 in the manifest list entries`\r\n* `no matching manifest for unknown in the manifest list entries`\r\n\r\nIf you need to still use Nano Server, version 1803 images (even though it is no longer supported), you will need to use tags that include the Nano Server version (these are non-manifest tags), for example `mcr.microsoft.com/dotnet/core/runtime:3.0-nanoserver-1803`.","Url":"https://github.com/dotnet/announcements/issues/140","RelatedDescription":"Open issue \"Windows Server, version 1803 no longer supported by .NET Core\" (#140)"},{"Id":"522994983","IsPullRequest":false,"CreatedAt":"2019-11-14T17:15:08","Actor":"leecow","Number":"139","RawContent":null,"Title":".NET Core 3.1.0 Preview 3","State":"open","Body":".NET Core 3.1.0 Preview 3 is available and https://github.com/dotnet/core/issues/3809 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview3.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-3/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-3/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 3, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/139","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 3\" (#139)"},{"Id":"522864668","IsPullRequest":false,"CreatedAt":"2019-11-14T13:37:28","Actor":"TaraOverfield","Number":"138","RawContent":null,"Title":"November 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on November 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework November 13, 2019, Update for .NET Framework 4.8](https://devblogs.microsoft.com/dotnet/net-framework-november-13-2019-update-for-net-framework-4-8/)\r\n* [.NET Framework November 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-november-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.14 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.14/2.1.14.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.8/2.2.8.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\n* .NET Core 3.0.1 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.1/3.0.1.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/3.0) )\r\n\r\nA discussion issue is available at [core/3848](https://github.com/dotnet/core/issues/3848)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/138","RelatedDescription":"Open issue \"November 2019 .NET Updates\" (#138)"},{"Id":"522488807","IsPullRequest":false,"CreatedAt":"2019-11-13T21:41:06","Actor":"MichaelSimons","Number":"137","RawContent":null,"Title":".NET Framework Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Framework Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Framework Docker images have been published for Server Core, version 1909.  \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-framework-docker#448](https://github.com/microsoft/dotnet-framework-docker/issues/448)\r\n\r\n## Details \r\n\r\n* [dotnet-framework-docker#447](https://github.com/microsoft/dotnet-framework-docker/pull/447) \r\n\r\n.NET Framework tags containing the substring `windowsservercore-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-framework). \r\n\r\n.NET Framework multi-arch tags, such as `4.8`, have been updated to use `windowsservercore-1909` images if your host is Windows Server 1909 or higher. \r\n\r\n### Impacted Repos \r\n\r\n* [dotnet/framework/sdk](https://hub.docker.com/_/microsoft-dotnet-framework-sdk/): .NET Framework SDK \r\n* [dotnet/framework/aspnet](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): ASP.NET Runtime  \r\n* [dotnet/framework/wcf](https://hub.docker.com/_/microsoft-dotnet-framework-aspnet/): Windows Communication Foundation \r\n* [dotnet/framework/runtime](https://hub.docker.com/_/microsoft-dotnet-framework-runtime/): .NET Framework Runtime\r\n* [dotnet/framework/samples](https://hub.docker.com/_/microsoft-dotnet-framework-samples/): .NET Framework Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/137","RelatedDescription":"Open issue \".NET Framework Docker images support for Windows Server, version 1909\" (#137)"},{"Id":"521830642","IsPullRequest":false,"CreatedAt":"2019-11-12T22:05:51","Actor":"MichaelSimons","Number":"136","RawContent":null,"Title":".NET Core Docker images support for Windows Server, version 1909","State":"open","Body":"# .NET Core Docker images support for Windows Server, version 1909\r\n\r\nWith the release of Windows Server, version 1909 on November 11, 2019, .NET Core Docker images have been published for Nano Server, version 1909. \r\n\r\n## Discussion\r\n\r\nYou can share your thoughts on this change or see what others are saying at:\r\n* [dotnet-docker#1460](https://github.com/dotnet/dotnet-docker/issues/1460)\r\n## Details\r\n\r\n* [dotnet-docker#1457](https://github.com/dotnet/dotnet-docker/pull/1457)\r\n\r\n.NET Core tags containing the substring `nanoserver-1909` are now available. You can find the full set of tags on [Docker Hub](https://hub.docker.com/_/microsoft-dotnet-core).\r\n\r\n.NET Core multi-arch tags, such as `3.0`, have been updated to use `nanoserver-1909` images if your host is Windows Server 1909 or higher.\r\n\r\n### Impacted Repos\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk/): .NET Core SDK\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet/): ASP.NET Core Runtime\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime/): .NET Core Runtime\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples/): .NET Core Samples\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/136","RelatedDescription":"Open issue \".NET Core Docker images support for Windows Server, version 1909\" (#136)"},{"Id":"520243813","IsPullRequest":false,"CreatedAt":"2019-11-08T21:33:12","Actor":"CESARDELATORRE","Number":"135","RawContent":null,"Title":"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)","State":"open","Body":"This week (coinciding with Microsoft Ignite 2019) we announced the release of **ML.NET 1.4 GA**. \r\nThere are many new features such as:\r\n\r\n- **New Deep Learning Image Classifier (GA):** GPU support for training and inference Image Classifier ML models.\r\n\r\n- **Database Loader  (GA):** You can train your model with data directly from any relational database supported by System.Data.\r\n\r\n- **Enhanced for .NET Core 3.0  (GA):** Performance improvements thanks to hardware intrinsics feature in .NET Core 3.0.\r\n\r\n- **PredictionEnginePool for scalable deployments (GA):** Recommended approach for multi-threaded scalable apps such as ASP.NET Core apps/services and Azure Functions\r\n\r\n- **ML.NET and .NET support in Jupyter notebooks:**  You can now run any .NET code (C# / F#) in Jupyter notebooks and therefore run ML.NET code in it as well. Great for exploring and documenting model training experiments, data distribution exploration, data cleaning, plotting data charts, learning scenarios such as ML.NET courses, hands-on-labs and quizzes, etc.\r\n\r\nSee details in the following **Blog Posts**:\r\n\r\n- [Announcing ML.NET 1.4 general availability (Machine Learning for .NET)](https://devblogs.microsoft.com/dotnet/announcing-ml-net-1-4-global-availability-machine-learning-for-net/)\r\n\r\n- [Using ML.NET in Jupyter notebooks](https://devblogs.microsoft.com/cesardelatorre/using-ml-net-in-jupyter-notebooks/)\r\n\r\n- [.NET Core with Jupyter Notebooks](https://devblogs.microsoft.com/dotnet/net-core-with-juypter-notebooks-is-here-preview-1/)\r\n","Url":"https://github.com/dotnet/announcements/issues/135","RelatedDescription":"Open issue \"Announcing ML.NET 1.4 general availability (Machine Learning for .NET)\" (#135)"},{"Id":"517169249","IsPullRequest":false,"CreatedAt":"2019-11-04T13:57:09","Actor":"leecow","Number":"134","RawContent":null,"Title":".NET Core 3.1.0 Preview 2","State":"open","Body":".NET Core 3.1.0 Preview 2 is available and https://github.com/dotnet/core/issues/3744 has been opened for discussion.\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview2.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-2/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-2/)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 2, either responding to https://github.com/dotnet/core/issues/3744, creating a new issue or creating a new issue in one of the following repos:\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/134","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 2\" (#134)"},{"Id":"514753283","IsPullRequest":false,"CreatedAt":"2019-10-30T15:14:43","Actor":"jaredpar","Number":"133","RawContent":null,"Title":"Repository Consolidation Timeline","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27549.*\r\n\r\nAs we [announced](https://github.com/dotnet/announcements/issues/119) [earlier](https://github.com/dotnet/announcements/issues/127) we are planning on consolidating some of the repositories in the dotnet org. Our planning has reached a point where we have a schedule for the coreclr, corefx and core-setupmoves into dotnet/runtime that we want to share out with the community.\r\n\r\n### November 13th\r\nWe’ll move all changes from the original repositories into dotnet/runtime up to 5PM PST on November 13th. We’ll try to help as many pull requests as possible get merged by then. At that point, if there’s any pull requests still open we’ll have to close them. If you’d still like to continue those pull requests, we’d encourage you to bring them to dotnet/runtime in a new pull request.\r\n\r\nThe repositories themselves will be effectively archived at this point. The state of the “master” branch will be recorded with a tag, named “master-archive”, but the branch itself will be deleted. The default branch for the repositories will be named “archive” and it will be a single commit with a README.md and CONTRIBUTING.md file pointing to our dotnet/runtime repository.\r\n\r\nThe repositories will remain active for servicing changes to .NET Core 3.1 and earlier hence we will not be using the GitHub archive capability. \r\n\r\n### November 22nd\r\nThe dotnet/runtime repository will be made public and available for community contribution. Even though the repository will be created on November 13th it will take several days to get it back into a working order: fixing up our build scripts, recreating our Azure Dev Ops build definitions, etc … Until those tasks are completed it will not be possible to accept pull request and hence the repository will remain private. Once we are in a state that pull requests can be merged again the repository will be made public.\r\n\r\nOur expectation is that will occur on November 22nd. If it is ready sooner it will be made public sooner. If the work takes longer than we planned then we will add an update to this announcement with a new expected date.\r\n\r\n### December 1st-2nd\r\nAll issues, open and closed, will be migrated from corefx, coreclr and core-setup into dotnet/runtime. This will be using GitHub’s existing issue transfer feature in a bulk migration. This means all of the existing issue links will continue to function via redirects.\r\n\r\nThis does mean though that labels will not transfer with the issues. Labels will be re-applied as a post processing step by our engineering team once the issue migration completes.\r\n\r\nEven though our issues won’t be fully migrated until this time we’d like the community to begin filing issues on dotnet/runtime as soon as it’s public rather than continuing to file issues on the original repositories.\r\n\r\n### Migrating Commits\r\nThe dotnet/runtime repository will be a new commit history from the original repositories. We are using this consolidation as an opportunity to clean up our history with the goal of having a cleaner, smaller history as a starting point. This means commits will be rewritten in the following ways as they are migrated to dotnet/runtime:\r\n\r\n1. Author information, contributor information, changed file list and time stamps from the original commit will be preserved.\r\n1. Links to issues, pull requests or commits in the repository using GitHub short links will be rewritten so they continue to point the original repository. \r\n1. Every commit will be appended with a link to the original commit it was mapped from.\r\n\r\nThe actual contents of the commit though will be updated to match the new directory layout of the dotnet/runtime repository.","Url":"https://github.com/dotnet/announcements/issues/133","RelatedDescription":"Open issue \"Repository Consolidation Timeline\" (#133)"},{"Id":"513963125","IsPullRequest":false,"CreatedAt":"2019-10-29T14:32:55","Actor":"mthalman","Number":"132","RawContent":null,"Title":"Release of Alpine 3.10 Docker images","State":"open","Body":"# .NET Core Alpine Docker images updated to Alpine 3.10\r\n\r\nDocker images for .NET Core have been released that support Alpine 3.10.  Included with this release, the floating tags for Alpine-based images have been moved from Alpine 3.9 to 3.10.  \r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\n[dotnet/dotnet-docker#1418](https://github.com/dotnet/dotnet-docker/issues/1418)\r\n\r\n## Details\r\n* [dotnet/dotnet-docker#1415](https://github.com/dotnet/dotnet-docker/pull/1415)\r\n\r\nIf you made use of a floating tag for Alpine, such as `3.0-alpine`, `2.2-alpine`, and `2.1-alpine`, these have been changed to now reference Alpine 3.10 instead of Alpine 3.9.  Be sure to pull this tag on your Docker machine to get the latest image.\r\n\r\nThe following Docker repos have been updated:\r\n\r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)","Url":"https://github.com/dotnet/announcements/issues/132","RelatedDescription":"Open issue \"Release of Alpine 3.10 Docker images\" (#132)"},{"Id":"508132491","IsPullRequest":false,"CreatedAt":"2019-10-16T22:28:29","Actor":"leecow","Number":"131","RawContent":null,"Title":".NET Core 3.1.0 Preview 1","State":"open","Body":".NET Core 3.1.0 Preview 1 is available and https://github.com/dotnet/core/issues/3634 has been opened for discussion.\r\n\r\n**Blog round up**\r\n* [.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-1-preview-1/)\r\n* [ASP.NET Core and Blazor](https://devblogs.microsoft.com/aspnet/asp-net-core-updates-in-net-core-3-1-preview-1/)\r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/preview/3.1.0-preview1.md)\r\n[Download](https://dotnet.microsoft.com/download/dotnet-core/3.1)\r\n\r\nPlease report any issues you find with .NET Core 3.1 Preview 1, either responding to https://github.com/dotnet/core/issues/3634, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/Home](https://github.com/aspnet/Home) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues\r\n","Url":"https://github.com/dotnet/announcements/issues/131","RelatedDescription":"Open issue \".NET Core 3.1.0 Preview 1\" (#131)"},{"Id":"506832844","IsPullRequest":false,"CreatedAt":"2019-10-14T19:26:10","Actor":"terrajobst","Number":"130","RawContent":null,"Title":".NET Core 3.0 concludes the .NET Framework API porting project","State":"open","Body":"We started in .NET Core 1.0 with a very minimal API set that only included \\~18K of the .NET Framework APIs. With [.NET Standard 2.0](https://devblogs.microsoft.com/dotnet/announcing-net-standard-2-0/), we tried to make it much more viable to share code between .NET Framework, .NET Core, and Xamarin which resulted in approximately 38K .NET Frameworks APIs being available in .NET Core 2.0. We also built the [Windows Compatibility Pack](https://devblogs.microsoft.com/dotnet/announcing-the-windows-compatibility-pack-for-net-core/) which made another 21K .NET Framework APIs available to .NET Core, resulting in almost 60K additional APIs. And in .NET Core 3.0 we added WPF and WinForms, which increased the number of .NET Framework APIs ported to .NET Core to over 120k, which is more than half of all .NET Framework APIs.\r\n\r\nIt’s also worth pointing out that we added about 62K APIs to .NET Core that don’t exist in .NET Framework. If we compare their total number of APIs, .NET Core has about 80% of the API surface of .NET Framework.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://user-images.githubusercontent.com/5169960/66777114-f8db7c80-ee7c-11e9-9161-acfe1c491586.png\" width=\"600\" align=\"center\">\r\n</p>\r\n\r\nWe announced that the [future of .NET](https://devblogs.microsoft.com/dotnet/net-core-is-the-future-of-net/) will be based on .NET Core. And at Build 2019, [Scott Hunter stated](https://www.youtube.com/watch?v=ZlO1utbB2GQ&t=54m20s) that AppDomains, remoting, Web Forms, WCF server, and Windows Workflow won’t be ported to .NET Core.\r\n\r\nWith .NET Core 3.0, we’re at the point where we’ve ported all technologies that are required for modern workloads, be that desktop apps, mobile apps, console apps, web sites, or cloud services. That’s not to say that we don’t have any gaps or opportunities for new technologies, but we generally believe we won’t be finding them in the .NET Framework code base anymore. Moving forward, we’re focusing our resources on incorporating new technologies.\r\n\r\nSimultaneously, we’re looking into releasing more of the [.NET Framework code base under the MIT license](https://github.com/microsoft/referencesource) on GitHub to allow the community to create OSS projects for technologies we’re not intending to bring to .NET Core. For example, there already are community projects for [CoreWF](https://github.com/UiPath/corewf) and [CoreWCF](https://github.com/CoreWCF/CoreWCF).\r\n\r\nWe’d like to thank everyone who filed issues with requests for APIs being ported. Those issues allowed us to prioritize and close the gaps that prevented people from porting to .NET Core.\r\n\r\nBut since we generally no longer plan to bring existing technologies from .NET Framework to .NET Core we’ll be closing all issues that are [labeled with port-to-core](https://github.com/dotnet/corefx/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+label%3Aport-to-core).\r\n\r\n### Discussion\r\n\r\nTo discuss this issue, please comment on the corresponding issue at https://github.com/dotnet/corefx/issues/41769.","Url":"https://github.com/dotnet/announcements/issues/130","RelatedDescription":"Open issue \".NET Core 3.0 concludes the .NET Framework API porting project\" (#130)"},{"Id":"505445666","IsPullRequest":false,"CreatedAt":"2019-10-10T18:45:56","Actor":"TaraOverfield","Number":"129","RawContent":null,"Title":"October 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on October 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework October 2019 Cumulative Update for Windows 10 version 1903 and version 1909](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-cumulative-updates-windows-10-version-1903-and-windows-10-version-1909/)\r\n* [.NET Framework October 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-preview-of-quality-rollup/)\r\n* [.NET Framework October 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-october-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/129","RelatedDescription":"Open issue \"October 2019 .NET Updates\" (#129)"},{"Id":"505328689","IsPullRequest":false,"CreatedAt":"2019-10-10T15:19:53","Actor":"carloreggiani","Number":"128","RawContent":null,"Title":"Docker Stop return status Exited \"(3221225786)\"","State":"closed","Body":"Hi\r\nI'm investigating a issue regarding official MCR images on a Win2019 server with Docker EE engine 19.03.2.\r\n\r\nThe images that I'm unsing are:\r\nmcr.microsoft.com/windows/servercore:1809\r\nmcr.microsoft.com/dotnet/framework/aspnet:4.8\r\n\r\nStopping containers based on these images (\"docker stop\" command) I'm getting: \r\n\"Exited (3221225786)\"\r\n\r\nOn linux a stop command normally return: \"Exited (137)\"\r\n\r\nIs it a normal behaviour? What's means 3221225786?\r\n\r\nThanks for any support\r\n\r\nCarlo","Url":"https://github.com/dotnet/announcements/issues/128","RelatedDescription":"Closed issue \"Docker Stop return status Exited \"(3221225786)\"\" (#128)"},{"Id":"504325600","IsPullRequest":false,"CreatedAt":"2019-10-08T23:14:11","Actor":"terrajobst","Number":"127","RawContent":null,"Title":"Consolidated repo names","State":"open","Body":"[ann]: https://github.com/dotnet/announcements/issues/119\r\n\r\nAs we announced earlier, we're [planning on consolidating][ann] some of the repositories in the dotnet org. While this is still work in progress, we'd like to give you an update on where we are.\r\n\r\nSo far, we've identified the following repos:\r\n\r\n* dotnet/**runtime**\r\n\t- Will contain [coreclr](https://github.com/dotnet/coreclr), [corefx](https://github.com/dotnet/corefx), [core-setup](https://github.com/dotnet/core-setup), [aspnet/Extensions](https://github.com/aspnet/Extensions), and some of [mono/mono](https://github.com/mono/mono)\r\n* [dotnet/**sdk**](https://github.com/dotnet/sdk)\r\n\t- Will contain [toolset](https://github.com/dotnet/toolset), [sdk](https://github.com/dotnet/sdk), [cli](https://github.com/dotnet/cli)\r\n* dotnet/**installer**\r\n\t- Renamed from [core-sdk](https://github.com/dotnet/core-sdk)\r\n* dotnet/**aspnetcore**\r\n\t- Moved from [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) and will also contain [aspnet/AspNetCore-Tooling](https://github.com/aspnet/AspNetCore-Tooling)\r\n* dotnet/**efcore**\r\n\t- Moved from [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore)\r\n* [dotnet/**winforms**](https://github.com/dotnet/winforms)\r\n\t- Unchanged, but listed for clarity \r\n* [dotnet/**wpf**](https://github.com/dotnet/wpf)\r\n\t- Unchanged, but listed for clarity\r\n\r\n### Name changes\r\n\r\nYou might notice that we changed our mind on naming from our [earlier announcement][ann]. Based on your feedback, we decided to go with **dotnet/runtime** instead of **dotnet/platform** and **dotnet/sdk** instead of **dotnet/cli**.\r\n\r\nSeveral people pointed out that the previous names weren't relatable to how we talk about the product, for example on download pages. So, we decided to match the product distributions as the primary design point for the new names. We generally refer to the bits you need to run your app as *the runtime* and the bits you need to build apps as *the SDK*. This also matches the naming chosen by other platforms.\r\n\r\n### New repos can't be used for .NET Core 3.x or earlier\r\n\r\nThe consolidated repositories are going to be about .NET 5 and going forward. It will not be possible to build .NET Core 3.1 or earlier from these repositories. As such, only the master branch from each of the repositories will be brought forward. There will be no porting of the individual release branches in the source repositories.\r\n\r\n### Personal names and email addresses\r\n\r\nSince we're planning on rebasing the history in the merged repositories, we can map your name and email address to new values as well. We primarily do this to support our friends in the LGBTQ+ community who have changed their names to reflect their identities. However, anybody is welcome to use this to change their email and name.\r\n\r\nWhatever your reason might be: we value your contributions and we hope this small gesture makes your life a little bit better. So if you changed your name/email – or simply prefer us to use different values – please [submit a request](mailto:dotnet@microsoft.com&subject=.NET%20repo%20consolidation%3A%20request%20for%20name%20change&body=Hey%2C%20%0A%0AI%E2%80%99d%20like%20to%20change%20my%20email%2Fdisplay%20name%20in%20the%20consolidated%20repo%20from%20%0A%0A%20%20%20%20%20%20%20%20My%20Old%20Name%20%3Cold.me%40example.org%3E%20%0A%0Ato%20%0A%0A%20%20%20%20%20%20%20%20My%20New%20Name%20%3Cnew.me%40example.org%3E%20%0A%0AThanks%21%20%0A).\r\n\r\n### More is coming\r\n\r\nWe'll share more updates in the upcoming months. Please let us know of any concerns that we haven't addressed yet!\r\n\r\n### Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/27096.","Url":"https://github.com/dotnet/announcements/issues/127","RelatedDescription":"Open issue \"Consolidated repo names\" (#127)"},{"Id":"504304108","IsPullRequest":false,"CreatedAt":"2019-10-08T22:06:07","Actor":"MichaelSimons","Number":"126","RawContent":null,"Title":"4.7.x .NET Framework SDK Docker images no longer published","State":"open","Body":"# 4.7.x .NET Framework SDK Docker images no longer published\r\n\r\nThe [4.7.x .NET Framework SDK Docker images](https://hub.docker.com/_/microsoft-dotnet-framework-sdk) will no longer be published after Oct. 8, 2019.  The 4.8 image tags should be used as a replacement.\r\n\r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [microsoft/dotnet-framework-docker#428](https://github.com/microsoft/dotnet-framework-docker/issues/428)\r\n\r\n## Details\r\n\r\nAny references to the following SDK tags should be updated to reference `4.8` instead:\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.1-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2016`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-1803`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-windowsservercore-ltsc2019`\r\n* `mcr.microsoft.com/dotnet/framework/sdk:4.7.2-<yyyymmdd>-windowsservercore-ltsc2019`\r\n\r\nIf you haven't migrated to using images from [MCR](https://github.com/dotnet/announcements/issues/101) and are still using the .NET Framework repos on Docker Hub, you will need to update your tag references to MCR.  This is because the 4.8 images only exist on MCR.  These are the following Docker Hub tags that are affected and should be updated to reference the [4.8 tags at the MCR location](https://hub.docker.com/_/microsoft-dotnet-framework-sdk):\r\n* `microsoft/dotnet-framework:4.7.1-sdk`\r\n* `microsoft/dotnet-framework:4.7.1-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2016`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-1803`\r\n* `microsoft/dotnet-framework:4.7.2-sdk-windowsservercore-ltsc2019`","Url":"https://github.com/dotnet/announcements/issues/126","RelatedDescription":"Open issue \"4.7.x .NET Framework SDK Docker images no longer published\" (#126)"},{"Id":"502102886","IsPullRequest":false,"CreatedAt":"2019-10-03T14:30:16","Actor":"MichaelSimons","Number":"125","RawContent":null,"Title":"Alpine Docker images no longer include the tzdata package in 3.0","State":"open","Body":"# Alpine Docker images no longer include the tzdata package in 3.0\r\nBeginning with the 3.0 release, the `tzdata` package has been removed from all Alpine Docker images.\r\n\r\n## Discussion\r\nYou can share your thoughts on this change or see what others are saying at:\r\n\r\ndotnet/dotnet-docker#1366\r\n\r\n## Details\r\n* https://github.com/dotnet/dotnet-docker/pull/1312\r\n\r\n\r\nThis package was removed because it wasn't required for the main set of scenarios and to have consistency between the runtime-deps images across all Linux distros.  This package is still installed in the 2.x images for Alpine so this will be something to be aware of when migrating from 2.x to 3.0.\r\n\r\n\r\nYou may be impacted by this if you use any of the Alpine images and your code has a dependency on the `tzdata` package, such as using the `System.TimeZoneInfo` API.  In that case, you'll need to update your Dockerfile to explicitly install the package:\r\n```\r\nRUN apk add --no-cache tzdata\r\n```\r\n","Url":"https://github.com/dotnet/announcements/issues/125","RelatedDescription":"Open issue \"Alpine Docker images no longer include the tzdata package in 3.0\" (#125)"},{"Id":"497868605","IsPullRequest":false,"CreatedAt":"2019-09-24T19:01:32","Actor":"MichaelSimons","Number":"124","RawContent":null,"Title":".NET Core `latest` Docker tags updated to 3.0","State":"open","Body":"# .NET Core `latest` Docker tags updated to 3.0\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos have been updated to reference [.NET Core 3.0](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0/).\r\n \r\n## Discussion\r\n \r\nYou can share your thoughts on this change or see what others are saying at:\r\n \r\n* [dotnet/dotnet-docker#1337](https://github.com/dotnet/dotnet-docker/issues/1337)\r\n \r\n## Details\r\n \r\n* [dotnet-docker#1334](https://github.com/dotnet/dotnet-docker/pull/1334)\r\n \r\nThe `latest` tags for the [dotnet/core](https://hub.docker.com/_/microsoft-dotnet-core) repos are always intended to reference the latest supported version of .NET Core. At this time, the latest supported version is .NET Core 3.0.\r\n \r\nThe following Docker repos have been updated:\r\n \r\n* [dotnet/core/sdk](https://hub.docker.com/_/microsoft-dotnet-core-sdk)\r\n* [dotnet/core/aspnet](https://hub.docker.com/_/microsoft-dotnet-core-aspnet)\r\n* [dotnet/core/runtime](https://hub.docker.com/_/microsoft-dotnet-core-runtime)\r\n* [dotnet/core/runtime-deps](https://hub.docker.com/_/microsoft-dotnet-core-runtime-deps)\r\n* [dotnet/core/samples](https://hub.docker.com/_/microsoft-dotnet-core-samples)\r\n \r\nIt is recommended to use a more-specific tag than `latest` for anything other than casual development. Once you have an application that you believe will eventually go to production, you are recommended to use a tag like `3.0`. The [.NET Core Docker Samples](https://github.com/dotnet/dotnet-docker/tree/master/samples) contain examples of more specific usage such as the [.NET Core console sample](https://github.com/dotnet/dotnet-docker/blob/master/samples/dotnetapp/Dockerfile).\r\n","Url":"https://github.com/dotnet/announcements/issues/124","RelatedDescription":"Open issue \".NET Core `latest` Docker tags updated to 3.0\" (#124)"},{"Id":"494223006","IsPullRequest":false,"CreatedAt":"2019-09-16T19:03:54","Actor":"leecow","Number":"123","RawContent":null,"Title":".NET Core 3.0 RC 1","State":"open","Body":".NET Core RC 1 released today. https://github.com/dotnet/core/issues/3380 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-rc1-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-release-candidate-1/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-release-candidate-1/)\r\n\r\nPlease report any issues you find with 3.0.0 RC 1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/123","RelatedDescription":"Open issue \".NET Core 3.0 RC 1\" (#123)"},{"Id":"491801748","IsPullRequest":false,"CreatedAt":"2019-09-10T17:23:20","Actor":"leecow","Number":"122","RawContent":null,"Title":"September 2019 .NET Updates","State":"open","Body":"The following .NET updates were released on September 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Framework\r\n\r\n* [.NET Framework September 2019 Security and Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-security-and-quality-rollup/)\r\n* [.NET Framework September 2019 Preview of Quality Rollup](https://devblogs.microsoft.com/dotnet/net-framework-september-2019-preview-of-quality-rollup/)\r\n\r\n## .NET Core\r\n\r\n* .NET Core 2.1.13 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.13/2.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.7 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.7/2.2.7.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/3345](https://github.com/dotnet/core/issues/3345)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/122","RelatedDescription":"Open issue \"September 2019 .NET Updates\" (#122)"},{"Id":"491794046","IsPullRequest":false,"CreatedAt":"2019-09-10T17:04:46","Actor":"blowdart","Number":"121","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core","State":"open","Body":"# Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nMicrosoft is aware of a denial of service vulnerability when .NET Core improperly handles web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core web application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nThe update addresses the vulnerability by correcting how the .NET Core web application handles web requests.\r\n\r\n## Announcement\r\n\r\nThe original announcement for this issue can be found at https://github.com/dotnet/announcements/issues/121\r\n\r\n## <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nNone\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application running on .NET Core 2.1.0-2.1.12, or .NET Core 2.2.0-2.2.6\r\n\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nYou can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf you have a version of .NET Core less than 2.1.13 or less than 2.2.7, you're vulnerable.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\n* For machines running .NET Core 2.1, you should download Runtime 2.1.13 or SDK 2.1.509 for Visual Studio 2017 or SDK 2.1.606 for Visual Studio 2019 (v16.0) or SDK 2.1.802 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.1.\r\n* For machines running .NET Core 2.2, you should download Runtime 2.2.7 or SDK 2.2.109 for Visual Studio 2017 or SDK 2.2.206 for Visual Studio 2019 (v16.0) or SDK 2.2.402 for Visual Studio 2019 (v16.2) from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nIf you have both 2.1 and 2.2, you need to install updates for both versions.\r\n\r\nOnce you have installed the updated runtime or SDK, restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/dotnet/core/versions/selection) to a specific version of the runtime, you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n# Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/, respectively. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\nPaul Ryman of VMware Sydney Engineering Team\r\n\r\n### External Links\r\n\r\n[CVE-2019-1301](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-1301)\r\n\r\n### Revisions\r\n\r\nV1.0 (September 10, 2019): Advisory published.\r\nV1.1 (September 10, 2019): Fix version numbers\r\n\r\n_Version 1.1_\r\n\r\n_Last Updated 2019-09-10_\r\n","Url":"https://github.com/dotnet/announcements/issues/121","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-1301: Denial of Service Vulnerability in .NET Core\" (#121)"},{"Id":"489344106","IsPullRequest":false,"CreatedAt":"2019-09-04T19:14:05","Actor":"leecow","Number":"120","RawContent":null,"Title":".NET Core 3.0 Preview 9","State":"open","Body":".NET Core Preview 9 released today. https://github.com/dotnet/core/issues/3304 has been opened for discussion. \r\n\r\n[Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9.md)\r\n[Download](https://github.com/dotnet/core/blob/master/release-notes/3.0/preview/3.0.0-preview9-download.md)\r\n\r\n**Blog posts**\r\n\r\n[.NET Core](https://devblogs.microsoft.com/dotnet/announcing-net-core-3-0-preview-9/)\r\n[ASP.NET Core](https://devblogs.microsoft.com/aspnet/asp-net-core-and-blazor-updates-in-net-core-3-0-preview-9/)\r\n\r\nPlease report any issues you find with 3.0.0 Preview 9, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:\r\n\r\n* [aspnet/AspNetCore](https://github.com/aspnet/AspNetCore) - for ASP.NET Core questions\r\n* [aspnet/EntityFrameworkCore](https://github.com/aspnet/EntityFrameworkCore) - for Entity Framework Core questions\r\n* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions\r\n* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions\r\n* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues\r\n* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues\r\n* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winforms issues\r\n* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues\r\n* [nuget/home](https://github.com/nuget/home/issues) - for NuGet questions and issues","Url":"https://github.com/dotnet/announcements/issues/120","RelatedDescription":"Open issue \".NET Core 3.0 Preview 9\" (#120)"},{"Id":"480859726","IsPullRequest":false,"CreatedAt":"2019-08-14T19:54:26","Actor":"stephentoub","Number":"119","RawContent":null,"Title":"Consolidating .NET GitHub repos","State":"open","Body":"*To discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.*\r\n\r\nOver the next few months, we plan to consolidate several of the foundational repositories of .NET Core, including dotnet/coreclr and dotnet/corefx.\r\n\r\n.NET’s repository structure on GitHub was initially created in a fairly fine-grained manner, with the aim of enabling runtime agility and increased developer productivity.  However, this separation has led to a variety of complications for contributors and maintainers alike.  For example:\r\n- **Confusion about where issues should be opened.**  It’s not always clear in which repo an issue should be reported, complicated by the fact that some implementations actually span repositories (e.g. a type might be exposed through a reference assembly and have its tests in corefx but actually be implemented in System.Private.CoreLib in coreclr).\r\n- **Difficulty sharing source.**  System.Private.CoreLib is intricately connected to the rest of the runtime, and thus has lived with the runtime code.  That, however, means that although corefx has been intended as the place to share as much core library code as possible across any underlying runtime, we’ve needed to keep a significant body of code in System.Private.CoreLib, which then has meant it’s needed to be “mirrored” to each runtime repo (coreclr, corert, mono) that needs to consume it as source; similarly, corefx has similarly required access to much of that source, for example to use the same interop DllImports that are employed elsewhere in the runtimes.  The automatic mirror that shares this source needs to be maintained, and even when it has been, it’s often led to lag.  It’s also complicated developer processes, where to validate a change in one repo generally requires manually mirroring the code to other local repos in order to validate the change and ensure merging into one repo won’t break the others.\r\n- **PRs spanning multiple repos.**  Because the runtime, CoreLib, and the core libraries are all intricately linked, changing runtime behaviors, adding new APIs, or changing various build processes (e.g. improving static analysis) often requires multiple PRs carefully staged across time and multiple repos.  For example, to add a new method to a type like Dictionary<>, a developer must first make the source changes in her local coreclr repo and the test and reference assembly changes in her local corefx repo.  When satisfied with the fix, the developer must submit a PR to coreclr as well as a PR to corefx, the latter of which will fail.  Eventually the coreclr PR will be merged, and the changes will mirror to the other runtimes that also require the update.  Eventually those mirror PRs will be merged, and builds will be created containing the fix for each runtime.  At some point later those builds will be consumed into the corefx repo, after which point the original corefx PR can be re-validated and eventually merged.  That’s the best case; things get more complicated in situations where there are bidirectional dependencies.\r\n- **Building an installable runtime.** Self-hosting a custom built .NET requires intricate knowledge of how all the repos work and interact.  A developer can’t just clone a single repo, make a desired change, and easily produce an installer.\r\n- **Consistency.**  One goal we had for more fine-grained repos was to enable isolation and independence for teams working within each repo’s confines, but this has led to non-trivial duplication of effort on things like build systems and CI, and then the resulting lack of consistency as each system ends up diverging from the others.\r\n\r\nThe issues go beyond the runtime.  For example, the ASP.NET maintainers and community did a great job in the past year or so consolidating from ~55 repos down to ~5 repos, but that’s still more repos than is desirable, leading to similar issues as cited above for the runtime.  On top of that, these ASP.NET repositories are in the aspnet GitHub org, which adds an additional set of issues, for example:\r\n- **Complications moving issues between repos.**  If a developer opens an issue in aspnet/aspnetcore and it’s determined that the cause of the issue is actually in dotnet/corefx, there is no GitHub mechanism to enable easily moving that issue across the aspnet to dotnet organizational boundary.\r\n- **Permissions.** Each organization’s permissions end up needing to be managed and maintained separately.\r\n\r\nThe issues extend into tooling as well.  For example, we currently have multiple repositories that all logically make up the dotnet CLI, but actually creating a working installer spans multiple repos.\r\n\r\n### Plan\r\n\r\nTo address these issues, we’re planning to make some changes to our repository structure:\r\n- **dotnet/platform.**  We plan to combine dotnet/coreclr, dotnet/corefx, dotnet/corert, dotnet/core-setup, and the relevant portions of mono/mono into a new dotnet/platform repo.  Everything needed to build and produce the Microsoft.NETCore.App shared framework will be in this repo.  We will no longer suffer from the complications of source mirroring.  Features like changing runtime behavior or adding an API will no longer require a complicated dance across multiple repos.  Etc.\r\n- **dotnet/aspnetcore.**  We plan to move the existing aspnet/aspnetcore repository into the dotnet organization.  Along with that, we aim to combine a variety of the other aspnet repositories into aspnetcore, such as aspnet/blazor.  Whether repos like entityframeworkcore remain separate or combined remains an open question.  A goal is that, just as dotnet/platform will be responsible for the creation of Microsoft.NETCore.App, dotnet/aspnetcore will be responsible for the creation of Microsoft.AspNETCore.App.\r\n- **dotnet/cli.**  We plan to combine dotnet/toolset and dotnet/sdk into the dotnet/cli repo.\r\n\r\n### FAQ\r\n\r\n#### Why are we merging repos?\r\n\r\nWe believe we can significantly improve several aspects of .NET on GitHub by combining repos, benefiting both maintainers and contributors.  These improvements will manifest in a variety of ways, such as in better issue management, much easier models of contribution, and easier and faster ways to build and install the resulting bits.\r\n\r\n####  What will happen to the aspnet org?\r\n\r\nThe aspnet org as a separate entity is legacy and artificial.  In time we hope to absorb it into the dotnet org and sunset the aspnet org.\r\n\r\n#### Will the coreclr and corefx repos go away?\r\n\r\nWith the help of GitHub, we plan to migrate all issues from these repos to the new dotnet/platform repo, and then lock down creation of additional issues, such that the repos will no longer be used for issue management.  We will also inhibit the creation of PRs to the master branch, which will effectively become an archive for read-only review of history.  In this sense, these repos will be archived, and no active development will happen with them.  However, we plan to continue servicing previous .NET Core releases out of these repos, so the various release branches (e.g. release/2.1, release/3.0, etc.) will continue to see (limited) activity.\r\n\r\n#### Will the mono repo go away?\r\n\r\nNo. mono/mono contains the source for the full mono stack and will continue to live on happily.  We will simply be moving the managed source associated with System.Private.CoreLib and copying the relatively small amount of source that makes up the native mono runtime to dotnet/platform.  We may choose to then use some mirroring technology to keep the runtime copy in sync (this will, however, not suffer from the same mirroring issues we currently experience, as we would not be mirroring between two components required to build the same binaries), or we may choose to let them diverge and manually sync only those changes deemed relevant to both implementations.\r\n\r\n#### Will the corert repo go away?\r\n\r\nYes.  We plan to retire/archive the corert repo.  Some of the technology in the corert repo will be migrated to the master branch of dotnet/platform, where it will be productized as part of .NET.  Other portions of the corert repo will be migrated to feature branches of dotnet/platform, where the experimentation can continue.  In this way, we will use feature branches to continue experimenting with the corert technology, while making it easier to share portions with its shipping counterpart and also graduate functionality into master if/when it’s ready.\r\n\r\n#### Does this mean there will be a single repo for all of .NET?\r\n\r\nNo.  We will be reducing the number of repos that contribute to .NET, but currently we do not believe that going all the way down to one is the right answer.\r\n\r\n#### Doesn’t this mean that issue and PR tracking will now be overwhelming?\r\n\r\nIt is already the case that the vast majority of issues in a given repo are not relevant to any individual developer, and with several thousand open issues in each repo and on the order of a hundred open PRs in each, we already need systems (e.g. labels) to successfully manage issues and PRs.  As such, we don’t believe the merging will have a significant impact on this aspect of developer productivity.  If it turns out to have an unexpectedly large negative impact, we will work with the community to find ways to mitigate the problem.  However, there are already a multitude of successful open source projects on GitHub with at least an order of magnitude more issues.\r\n\r\n#### What will happen to existing issues?\r\n\r\nWith the help of GitHub functionality, we plan to migrate all issues from old repos (e.g. dotnet/coreclr, dotnet/corefx) to the new repos (e.g. dotnet/platform).  We may also use this as a forcing function to revisit stale issues and either close those that are no longer relevant or reinvigorate those that are demanding of more immediate attention.\r\n\r\n#### What about git history?\r\n\r\nIn general, we plan to keep history, such that history from each constituent repo will be a part of the new repo.  However, we have made some mistakes in the past (e.g. large binaries, multitudes of automated PRs for flowing bits and source between repos, etc.), and we plan to rewrite history to correct those mistakes wherever possible and impactful.  Some rough calculations suggest this could end up significantly reducing the size of the repos as well as the time it takes to clone, which should not only help developers approaching the project but also CI.  This will end up meaning that SHAs may be different in the new repo than they were in the old repo; as previously mentioned, however, any references to the old SHAs in the old repos will continue to work, as those repos will remain accessible.\r\n\r\n#### Will I still show up in the contributor list due to previous contributions?\r\n\r\nYes.  We plan to merge all such history.\r\n\r\n#### Will this break debugging with SourceLink?\r\n\r\nNo.  The existing repos will continue to be accessible, and commit SHAs there will remain unchanged.\r\n\r\n#### Might plans change?\r\n\r\nSure.  Part of the goal of posting this announcement is to hear from you, hear about additional benefits you're excited about, and hear about additional concerns we may not have considered.  We will include such ideas in our planning and course correct as necessary.\r\n\r\n## Discussion\r\n\r\nTo discuss these plans, please comment on the corresponding issue at https://github.com/dotnet/coreclr/issues/26175.\r\n","Url":"https://github.com/dotnet/announcements/issues/119","RelatedDescription":"Open issue \"Consolidating .NET GitHub repos\" (#119)"},{"Id":"470434872","IsPullRequest":false,"CreatedAt":"2019-07-19T16:54:02","Actor":"richlander","Number":"118","RawContent":null,"Title":".NET Core master branches have switched to \"5.0\"","State":"open","Body":"# .NET Core master branches have switched to \"5.0\"\r\n\r\nVarious .NET Core repos have switched their `master` branches to \"5.0\", and will use 3.x branches for 3.0 and 3.1 projects. This is very similar to how we approached 2.x and 3.0 projects. As context, `master` branches produced 3.0 builds for the entire period of the 2.2 project.\r\n\r\nAt present, this change is only relevant if you contribute to .NET Core repositories. Otherwise, we recommend that you wait for the 5.0 Preview releases before installing this new version.\r\n\r\n## Discussion\r\nPlease share your thoughts on this change and see what others are saying at:\r\n\r\n[dotnet/core #3059](https://github.com/dotnet/core/issues/3059)\r\n\r\n## Details\r\n\r\nThe following repos have moved their master branches to \"5.0\":\r\n\r\n- [dotnet/coreclr](https://github.com/dotnet/coreclr)\r\n- [dotnet/corefx](https://github.com/dotnet/corefx)\r\n- [dotnet/core-setup](https://github.com/dotnet/core-setup)\r\n\r\nYou can see that [5.0 .NET Core Runtime builds](https://github.com/dotnet/core-setup#daily-builds) are now being built and published at dotnet/core-setup.\r\n\r\nIn large part, we switched `master` to 5.0 to enable to the community to contribute changes. As the .NET Core 3.0 released has progressed, we've had to increase scrutiny on the changes we will accept. Now that we've permanently branched for 3.0, we can accept a much broader set of changes. Please consider that to be an open invitation!\r\n\r\nNotably, [dotnet/core-sdk](https://github.com/dotnet/core-sdk) is not yet producing 5.0 builds. We expect that the dotnet/core-sdk master branch will continue as a 3.0 branch for 2-3 months while we finish up the .NET Core 3.0 project.\r\n\r\nAt present, there is no developer experience for 5.0. We are waiting on the dotnet/core-sdk repo to switch to 5.0. Switching your project file to target `netcoreapp5.0` won't do anything useful. We'll update this issue when a 5.0 SDK comes available.","Url":"https://github.com/dotnet/announcements/issues/118","RelatedDescription":"Open issue \".NET Core master branches have switched to \"5.0\"\" (#118)"},{"Id":"465501070","IsPullRequest":false,"CreatedAt":"2019-07-08T23:25:31","Actor":"terrajobst","Number":"117","RawContent":null,"Title":"System.Text.Json usability study results","State":"open","Body":"We've performed a usability study on the new `System.Text.Json` APIs which will replace JSON.NET as the default JSON experience in .NET Core 3.0:\r\n\r\n* We focused on the primary \"getting started\" scenarios to validate that we picked the right type- and method names.\r\n* We simulated what we believe to be common error cases to validate that our exception messages are understandable and actionable.\r\n* Since we were short on time, we couldn't use the recruiting provided by the UX lab but instead brought in our own developers, which we recruited from the .NET engineering team\r\n\r\nThis has worked out well for us as we were able to get short term feedback which resulted in significant improvements to the overall API shape and usability. In the future, we should do more API focused UX studies 😊\r\n\r\n## Tasks\r\n\r\n| # | Description                            | Code\r\n|:--|:---------------------------------------|:-----\r\n| 1 | Serialize and pretty print             | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario1/Program.cs#L19-L31)\r\n| 2 | Deserialize with trailing comma        | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario2/Program.cs#L19-L25)\r\n| 3 | Deserialize with custom property names | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario3/Program.cs#L30-L45)\r\n| 4 | Read with DOM                          | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario4/Program.cs#L20-L35)\r\n| 5 | Pretty print an existing JSON file     | [Link](https://github.com/ahsonkhan/JsonUxStudy/blob/master/UxScenarios/Scenario5/Program.cs#L26-L34)\r\n\r\n## Hypotheses\r\n\r\nWe expect developers to...\r\n\r\n| # | Description                                            | Result\r\n|:--|:-------------------------------------------------------|:---------------\r\n| 1 | ...assume the APIs are similar/identical to JSON.NET   |  Validated\r\n| 2 | ...complete tasks 1-4 successfully                     |  Validated\r\n| 3 | ...struggle/unable to complete the task 5, because it requires working with two different components which is very different from JSON.NET |  Invalidated\r\n| 4 | ...not look at documentation for most of their coding as IntelliSense is good enough |  Invalidated\r\n| 5 | ...be happy with the experience of using the API                                     |  Validated\r\n| 6 | ...plan on using `System.Text.Json` for their next JSON task                         |  Partially Validated\r\n\r\n##  Key Observations\r\n\r\n* Everyone completed scenarios #1-#3, 2 didn't complete #4, 6 didn't complete #5\r\n    - The reason was always \"out of time\". Every person who started a scenario successfully finished it.\r\n    - We feel this validates that we picked the right scope for a 60 minute study of people from various backgrounds\r\n* Overall people liked the new API\r\n    - Key value prop for most people was the fact that \"it's now built in\"\r\n    - Very few mentioned perf and the ones that did thought that it probably wouldn't make a difference in their scenarios.\r\n    - Most people said they would prefer `System.Text.Json` for new APIs, but would stick to JSON.NET in code that already uses it.\r\n    - **[Action]** None, this is in line with what we expected.\r\n* Virtually everyone tried to google for sample code in the documentation\r\n    - Everyone found our blog post and online documentation\r\n    - People new to .NET were confused that JSON.NET and `System.Text.Json` weren't the same thing\r\n    - Everyone complained that the current docs are lacking, especially sample code.\r\n    - **[Action]** Docs are work in progress. We plan on shipping with a fully documented API surface and sample code.\r\n* Virtually everyone found the key type relatively quickly\r\n    - Some people were confused when types were static, rather than something that one can new up\r\n    - **[Action]** None. This is by-design as we try to reduce the number of allocations.\r\n* Virtually everyone had trouble selecting the correct method on\r\n  `JsonSerializer`\r\n    - We chose a very complicated naming convention\r\n    - **[Action]** We simplified it by using names that people in the study told us were looking for.\r\n* Most of our error messages were well received because they told people what\r\n  the problem is & how they can fix them.\r\n    - One error message was unclear because we reported an unexpected character when we could have reported that we didn't expect a comment.\r\n    - **[Action]** We've reworded the error message.\r\n    - We had one error message that was generated by a lower layer and provided an action item that doesn't make sense when people receive it when using the higher layer component.\r\n    - **[Action]** We've reworded the error message to be more generic so it makes sense for both kind of consumers.\r\n* Virtually everyone used the new Roslyn completion feature which will also show\r\n  types from namespaces not imported yet.\r\n    - However, virtually nobody realized that they were doing it.\r\n    - This caused confusion when people found other APIs that happen to include Json in them, specifically the old data contract serialization.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if this something more people will run into. This could prove to be especially problematic for technologies that share type names (e.g. `UserControl` in WinForms and WPF) and both are referenced by the project.\r\n* Optional parameters and `async`/`await` are usability cliffs\r\n    - Many were confused by optional parameters and tried to pass them in, even though they didn't have to.\r\n    - **[Action]** Talk to the Roslyn IDE team to see if we can visualize them better in VS.\r\n    - **[Action]** Try to avoid heavy use of optional parameters for mainline APIs.\r\n    - Async is a very steep cliff. People have no idea what to do in their code to make async work. While IntelliSense shows the usage by prefixing it with await, people didn't notice that.\r\n    - **[Action]** Unclear; this is a broader issue.\r\n* Virtually nobody used F1 to get help for APIs\r\n    - *Surprise*. I expected more people to use <kbd>F1</kbd>.\r\n* Virtually everyone used F12 to explore the API (\"metadata view\")\r\n    - *Surprise*. I expected most people to explore the type via the\r\n      IntelliSense completion\r\n* Nobody used Object Browser to explorer the APIs\r\n    - *Surprise*. I expected at least some people to.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to https://github.com/dotnet/corefx/issues/39304.","Url":"https://github.com/dotnet/announcements/issues/117","RelatedDescription":"Open issue \"System.Text.Json usability study results\" (#117)"},{"Id":"465034831","IsPullRequest":false,"CreatedAt":"2019-07-08T03:13:38","Actor":"leecow","Number":"116","RawContent":null,"Title":"Updates to releases.json (.NET Core release metadata)","State":"open","Body":"**The changes described in this issue will be live with the .NET Core July update on 7/9/2019.**\r\n\r\nThe releases.json files (e.g. [2.2 releases.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/2.2/releases.json)) are comprehensive metadata files which capture details of each .NET Core release. These files, along with the top level [releases-index.json](https://raw.githubusercontent.com/dotnet/core/master/release-notes/releases-index.json), are becoming increasingly important .NET Core release assets. These files, one for each major.minor channel, are relied upon by many to detect when updates for .NET Core are available, discover security update details and other uses.\r\n\r\nChanges are sometimes necessary, and the growing dependencies require that we treat compatibility of the schema with the utmost care. This announcement describes an addition to the releases.json schema.\r\n\r\n## SDK Versions and Visual Studio\r\n\r\nBecause of current .NET Core SDK product construction dependencies, there is a hard link between the Runtime, SDK, toolset (compilers, MSBuild, NuGet, and other components), and Visual Studio. Simplistically, this means that when anything updates, everything updates. The unfortunate result of this linking is that multiple versions of the SDK are released with each monthly update for each supported versions of Visual Studio. For example, the May Update for .NET Core 2.2 included the 2.2.5 runtime, 2.2.107 SDK for Visual Studio 2017 and 2.2.204 for Visual Studio 2019 and yet another pair of SDK versions for .NET Core 2.1. An example of this is the [2.2.5 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md). \r\n\r\nThis is a confusing situation and we are working to mitigate the need to release multiple SDKs with .NET Core 3.0. The need for multiple SDK versions will persist for 2.1 LTS.\r\n\r\n## Adding the SDKS array\r\n\r\nTo appropriately model multiple SDKs per release, we are adding an SDKs array to releases.json, which will contain SDK objects. The top-level SDK object will represent the highest versioned SDK for a given update. Using the previous 2.2.5 update example, SDK 2.2.204 is in the top SDK object as well as duplicated in the SDKS array. All other applicable 2.2* SDK objects are included in the SDKS array. The SDK objects within the array will carry specific Visual Studio compatibility and version inclusion information to provide appropriate context.\r\n\r\nHere is an example of the new array based on the upcoming July update.\r\nAgain, this will be additive and the previous SDK object will include the highest SDK version for the release.\r\n\r\n```json\r\n{\r\n    \"sdk\": {\r\n        \"version\": \"2.2.301\",\r\n        \"version-display\": \"2.2.301\",\r\n        \"runtime-version\": \"2.2.6\",\r\n        \"vs-version\": \"16.1.3\",\r\n        \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n        \"csharp-version\": \"7.3\",\r\n        \"fsharp-version\": \"4.5\",\r\n        \"vb-version\": null,\r\n        \"files\": []\r\n    },\r\n    \"sdks\": [\r\n        {\r\n            \"version\": \"2.2.301\",\r\n            \"version-display\": \"2.2.301\",\r\n            \"runtime-version\": \"2.2.6\",\r\n            \"vs-version\": \"16.1.3\",\r\n            \"vs-support\": \"Visual Studio 2019 (v16.1)\",\r\n            \"csharp-version\": \"7.3\",\r\n            \"fsharp-version\": \"4.5\",\r\n            \"vb-version\": null,\r\n            \"files\": []\r\n        },\r\n        {\r\n          \"version\": \"2.2.205\",\r\n          \"version-display\": \"2.2.205\",\r\n          \"runtime-version\": \"2.2.6\",\r\n          \"vs-version\": \"16.0.5\",\r\n          \"vs-support\": \"Visual Studio 2019 (v16.0)\",\r\n          \"csharp-version\": \"7.3\",\r\n          \"fsharp-version\": \"4.5\",\r\n          \"vb-version\": null,\r\n          \"files\": []\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\n## vs-version and the Runtime\r\n\r\nThe same version of the runtime is included in multiple versions of Visual Studio. To account for this, the vs-version field is being updated to a comma-delimited string. The string will represent all versions of Visual Studio which first include the particular .NET Core update. Again, an example from the upcoming July Update.\r\n\r\n```json\r\n\"runtime\": {\r\n        \"version\": \"2.2.6\",\r\n        \"version-display\": \"2.2.6\",\r\n        \"vs-version\": \"15.9.13, 16.1.3, 16.2.0\",\r\n```\r\n\r\nThe same `vs-versions` changes will be seen in the `aspnetcore-runtime` object.\r\n\r\n## Future Enhancements\r\n\r\nThere are other improvements to the schema which have been suggested by the community which we are evaluating. Generally, theses enhancements are additive and should not represent compatibility compromises for existing parsers and similar announcements will be published ahead of any changes.\r\n\r\n","Url":"https://github.com/dotnet/announcements/issues/116","RelatedDescription":"Open issue \"Updates to releases.json (.NET Core release metadata)\" (#116)"},{"Id":"444065225","IsPullRequest":false,"CreatedAt":"2019-05-14T18:38:23","Actor":"TaraOverfield","Number":"114","RawContent":null,"Title":"May 2019 .NET Updates","State":"open","Body":"# May 2019 .NET Updates\r\n\r\nThe following .NET updates were released in May 2019. This issue will be updated if there are any additional releases during the month.\r\n\r\n## .NET Core\r\n\r\n* .NET Core 1.0.16 and .NET Core SDK 1.1.13( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.0/1.0.16/1.0.16.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.0) )\r\n\r\n* .NET Core 1.1.12 and .NET Core SDK 1.1.13 ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/1.1/1.1.13/1.1.13.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/1.1) )\r\n\r\n* .NET Core 2.1.11 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.11/2.1.11.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.1) )\r\n\r\n* .NET Core 2.2.5 and .NET Core SDK ( [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.2/2.2.5/2.2.5.md) | [Download](https://dotnet.microsoft.com/download/dotnet-core/2.2) )\r\n\r\nA discussion issue is available at [core/2727](https://github.com/dotnet/core/issues/2727)\r\n\r\n## .NET Framework\r\n* [.NET Framework May 2019 Security and Quality Rollup - May 14, 2019](https://devblogs.microsoft.com/dotnet/net-framework-may-2019-security-and-quality-rollup/)\r\n\r\n## .NET Support Policies\r\n\r\nMicrosoft support policies are defined in the following documents:\r\n\r\n* [Microsoft .NET Support Policy](https://www.microsoft.com/net/support/policy)\r\n* [.NET Core OS Lifecycle Policy](https://github.com/dotnet/core/blob/master/os-lifecycle-policy.md)","Url":"https://github.com/dotnet/announcements/issues/114","RelatedDescription":"Open issue \"May 2019 .NET Updates\" (#114)"},{"Id":"444027703","IsPullRequest":false,"CreatedAt":"2019-05-14T17:06:24","Actor":"blowdart","Number":"113","RawContent":null,"Title":"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability","State":"open","Body":"# Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\r\n\r\n## <a name=\"executive-summary\"></a>Executive summary\r\n\r\nMicrosoft is releasing this security advisory to provide information about a vulnerability in .NET Core and ASP.NET Core 1.0, 1.1, 2.1 and 2.2. This advisory also provides guidance on what developers can do to update their applications to remove this vulnerability.\r\n\r\nA denial of service vulnerability exists when .NET Core and ASP.NET Core improperly handle web requests. An attacker who successfully exploited this vulnerability could cause a denial of service against a .NET Core and ASP.NET Core application. The vulnerability can be exploited remotely, without authentication.\r\n\r\nA remote unauthenticated attacker could exploit this vulnerability by issuing specially crafted requests to a .NET Core application.\r\n\r\nThe update addresses the vulnerability by correcting how .NET Core and ASP.NET Core web applications handle web requests.\r\n\r\n## Discussion\r\n\r\nDiscussion for this issue can be found at https://github.com/dotnet/corefx/issues/37651\r\n\r\n### <a name=\"mitigation-factors\"></a>Mitigation factors\r\n\r\nThere are no mitigating factors for this vulnerability.\r\n\r\n## <a name=\"affected-software\"></a>Affected software\r\n\r\nAny .NET Core based application that uses the System.Private.Uri package with a vulnerable version listed below.\r\n\r\nPackage name | Vulnerable versions | Secure versions\r\n------------ | ------------------- | -------------------------\r\nSystem.Private.Uri | 4.3.0, 4.3.1 | 4.3.2\r\n\r\n## <a name=\"advisory-faq\"></a>Advisory FAQ\r\n\r\n### <a name=\"how-affected\"></a>How do I know if I am affected?\r\n\r\nThe affected assemblies are part of .NET Core. If you are running a vulnerable version of .NET Core you may be affected.\r\n\r\n### <a name=\"how-fix\"></a>How do I fix the issue?\r\n\r\nTo fix the issue please install the latest version of .NET Core. If you have multiple versions of .NET Core installed you will need to install multiple runtimes, or SDKs depending on what you have installed.\r\n\r\nIf you have .NET Core 2.0 or greater installed you can list the versions you have installed by running the `dotnet --info` command. You will see output like the following;\r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.0.100-preview3-010431\r\n Commit:    d72abce213\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.0.100-preview3-010431\\\r\n\r\nHost (useful for support):\r\n  Version: 3.0.0-preview3-27503-5\r\n  Commit:  3844df9537\r\n\r\n.NET Core SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview3-010431 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\\\r\n  Microsoft.AspNetCore.All 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview3-19153-02 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview3-27503-5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview3-27504-2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nIf your version of .NET Core does not support the `dotnet --info` command then you have either .NET Core 1.0 or .NET Core 1.1 installed.\r\n\r\n* For machines running .NET Core 1.0 you should download Runtime 1.0.16 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.0.\r\n* For machines running .NET Core 1.1 you should download Runtime 1.1.13 or SDK 1.1.14 from https://dotnet.microsoft.com/download/dotnet-core/1.1.\r\n* For machines running .NET 2.1 you should download Runtime 2.1.11 or SDK 2.1.507 for Visual Studio 2017 or SDK 2.1.604 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.1\r\n* For machines running .NET 2.2 you should download Runtime 2.2.5 or SDK 2.2.107 for Visual Studio 2017 or SDK 2.2.204 for Visual Studio 2019 from https://dotnet.microsoft.com/download/dotnet-core/2.2.\r\n\r\nOnce you have installed the updated runtime or SDK you should restart your apps for the update to take effect.\r\n\r\nIf you have [pinned your application](https://docs.microsoft.com/en-us/dotnet/core/versions/selection) to a specific version of the runtime you must update your app, recompile and redeploy it for the update to take effect.\r\n\r\n## Other Information\r\n\r\n### Reporting Security Issues\r\n\r\nIf you have found a potential security issue in .NET Core, please email details to secure@microsoft.com. Reports may qualify for the .NET Core Bug Bounty. Details of the .NET Core Bug Bounty including terms and conditions are at [https://aka.ms/corebounty](https://aka.ms/corebounty).\r\n\r\n### Support\r\n\r\nYou can ask questions about this issue on GitHub in the .NET Core or ASP.NET Core organizations. These are located at https://github.com/dotnet/ and https://github.com/aspnet/. The Announcements repo for each product (https://github.com/dotnet/Announcements and https://github.com/aspnet/Announcements) will contain this bulletin as an issue and will include a link to a discussion issue. You can ask questions in the discussion issue.\r\n\r\n### Disclaimer\r\n\r\nThe information provided in this advisory is provided \"as is\" without warranty of any kind. Microsoft disclaims all warranties, either express or implied, including the warranties of merchantability and fitness for a particular purpose. In no event shall Microsoft Corporation or its suppliers be liable for any damages whatsoever including direct, indirect, incidental, consequential, loss of business profits or special damages, even if Microsoft Corporation or its suppliers have been advised of the possibility of such damages. Some states do not allow the exclusion or limitation of liability for consequential or incidental damages so the foregoing limitation may not apply.\r\n\r\n### Acknowledgments\r\n\r\n[Nemanja Mijailovic](https://mijailovic.net/)\r\n\r\n### External Links\r\n\r\n[CVE-2019-0981](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-0981)\r\n\r\n### Revisions\r\n\r\nV1.0 (May 14, 2019): Advisory published.\r\n\r\n_Version 1.0_\r\n\r\n_Last Updated 2019-05-14_","Url":"https://github.com/dotnet/announcements/issues/113","RelatedDescription":"Open issue \"Microsoft Security Advisory CVE-2019-0981: .NET Core Denial of Service Vulnerability\" (#113)"}],"ResultType":"GitHubIssue"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1203060298682437634","CreatedAt":"2019-12-06T21:15:01+00:00","UserScreenname":"dotnet","Text":"This post has a really good summary of all the new goodies we get with the new #ASPNET Core update in #dotNET Core… https://t.co/r9HOw6XwuI","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":58,"FavoriteCount":26,"RawContent":null},{"Id":"1202989101215100935","CreatedAt":"2019-12-06T16:32:06+00:00","UserScreenname":"dotnet","Text":".NET Core 3.1 has just been released and now has a small set of fixes and refinements. But better still, is that it… https://t.co/uc9oL3D9Mo","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":119,"FavoriteCount":54,"RawContent":null},{"Id":"1202854424793640965","CreatedAt":"2019-12-06T07:36:57+00:00","UserScreenname":"dotnet","Text":"Updates to .NET Core Windows Forms designer in Visual Studio 16.5 Preview 1 https://t.co/FjgjvnYVyR","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":31,"FavoriteCount":9,"RawContent":null},{"Id":"1202854328781770752","CreatedAt":"2019-12-06T07:36:34+00:00","UserScreenname":"dotnet","Text":".NET Core 2.2 will reach End of Life on December 23, 2019 https://t.co/OzbuhSEOW1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":130,"FavoriteCount":95,"RawContent":null},{"Id":"1202628706289831937","CreatedAt":"2019-12-05T16:40:01+00:00","UserScreenname":"dotnet","Text":"Close out the year with a new set of @VisualStudioMac skills: https://t.co/J4j33DzKol\n✅ Get started on a new app us… https://t.co/SYPetluzdr","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":15,"FavoriteCount":8,"RawContent":null},{"Id":"1202626182270734336","CreatedAt":"2019-12-05T16:30:00+00:00","UserScreenname":"dotnet","Text":"Check out @jeffhollan on #OnDotNet talking about \n\nBuilding Serverless web applications with Blazor and Azure Funct… https://t.co/8ZbwpmTnHI","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":29,"FavoriteCount":19,"RawContent":null},{"Id":"1202348106504908800","CreatedAt":"2019-12-04T22:05:01+00:00","UserScreenname":"dotnet","Text":"#OnDotNET talks to the Azure SDK team 😎 about the new iteration of Azure SDKs.\n\nThey discuss things like what's dif… https://t.co/CCgmWqxXWc","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":21,"FavoriteCount":11,"RawContent":null},{"Id":"1202276886145052672","CreatedAt":"2019-12-04T17:22:01+00:00","UserScreenname":"dotnet","Text":"Are you coding for globalization? Consider benchmarking your code to see what works best for your project and futur… https://t.co/WvqGWjUviL","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":44,"FavoriteCount":16,"RawContent":null},{"Id":"1202188297805545472","CreatedAt":"2019-12-04T11:30:00+00:00","UserScreenname":"dotnet","Text":"Did you know you can run F# in Webassembly? Check out @_cartermp on On .NET talking about the Bolero project.\n\n🚀Run… https://t.co/ntrZYo7Lvl","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":57,"FavoriteCount":27,"RawContent":null},{"Id":"1202009774348369921","CreatedAt":"2019-12-03T23:40:37+00:00","UserScreenname":"dotnet","Text":"Join us live right now for another @dotnet #CommunityStandup with live demos and QA https://t.co/ptNZnKrqoO","Source":"<a href=\"https://www.elgato.com/gaming\" rel=\"nofollow\">Elgato Stream Deck</a>","RetweetCount":12,"FavoriteCount":3,"RawContent":null},{"Id":"1201972132273676293","CreatedAt":"2019-12-03T21:11:02+00:00","UserScreenname":"dotnet","Text":"Software-as-a-Service is getting more common. But what does it really take to make a great app in that world?… https://t.co/xYerZwXHwk","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Publisher</a>","RetweetCount":30,"FavoriteCount":11,"RawContent":null},{"Id":"1201944985664311296","CreatedAt":"2019-12-03T19:23:10+00:00","UserScreenname":"dotnet","Text":"https://t.co/iOiV9qNspl Core updates in .NET Core 3.1 https://t.co/4L3zECpM9S","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":132,"FavoriteCount":79,"RawContent":null},{"Id":"1201939055639818240","CreatedAt":"2019-12-03T18:59:36+00:00","UserScreenname":"dotnet","Text":"‘Tis the Season for the @VisualStudio 2019 v16.4 Release: https://t.co/79AFVUgKl8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":119,"FavoriteCount":60,"RawContent":null},{"Id":"1201938451261620225","CreatedAt":"2019-12-03T18:57:12+00:00","UserScreenname":"dotnet","Text":"Announcing .NET Core 3.1 LTS release: https://t.co/5SXqdhAzHg","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":584,"FavoriteCount":408,"RawContent":null}]}},"RunOn":"2019-12-07T05:30:38.591145Z","RunDurationInMilliseconds":17054}