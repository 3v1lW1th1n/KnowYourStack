{"Data":{"Blog":{"FeedItems":[{"Title":"Mobile Developer Events in March","PublishedOn":"2018-03-01T19:05:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Around the world, Xamarin and .NET user groups are meeting up to learn and discuss the latest news on exciting releases, tooling, and updates with Xamarin and related technologies. This March, you can...","Href":"https://blog.xamarin.com/mobile-developer-events-march/","RawContent":null},{"Title":"The New, Feature-Packed UrhoSharp 1.8","PublishedOn":"2018-02-28T19:34:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"UrhoSharp is a .NET API for building 3D experiences in your apps. A .NET binding to the Urho3D engine, it allows developers to write cross-platform code targeting Android, iOS, Windows and macOS with...","Href":"https://blog.xamarin.com/announcing-urhosharp-1-8-release/","RawContent":null},{"Title":"New Xamarin University Course: Navigation Patterns in Xamarin.Forms (XAM205)","PublishedOn":"2018-02-26T19:10:23+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms, a popular choice for cross-platform Xamarin apps, has two stacks. It&#8217;s common to implement navigation by pushing and popping Pages on a stack, but the two stacks are intended for...","Href":"https://blog.xamarin.com/xamarin-forms-navigation-patterns-xam205/","RawContent":null},{"Title":"Add Tizen Projects to Your Xamarin.Forms Applications","PublishedOn":"2018-02-23T19:24:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a special guest post from Jay Cho of the Samsung Tizen team. It&#8217;s been a while since the first preview version of Tizen .NET was released. Thanks to the newest release, developing...","Href":"https://blog.xamarin.com/add-tizen-projects-xamarin-forms-apps/","RawContent":null},{"Title":"Create and Host tvOS TVML Apps with Azure and Xamarin","PublishedOn":"2018-02-22T20:30:55+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Creating amazing tvOS TVML apps doesn&#8217;t have to be hard. In this blog post, I&#8217;ll go over the many similarities tvOS has to iOS and show you how to create a sample quiz app using UIKit that...","Href":"https://blog.xamarin.com/create-tvos-tvml-apps-azure-xamarin/","RawContent":null},{"Title":"Use CoreML And Azure To Create Simple Xamarin.iOS Apps","PublishedOn":"2018-02-20T19:36:35+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last year Apple released a device-optimized machine learning framework called Core ML to make it as easy as possible to integrate machine learning and artificial intelligence services into your iOS...","Href":"https://blog.xamarin.com/coreml-azure-create-simple-xamarin-ios-apps/","RawContent":null},{"Title":"Extend Xamarin.Forms Controls Functionality with Behaviors","PublishedOn":"2018-02-16T18:48:28+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Xamarin.Forms provides a way to build 100% native, cross-platform applications with both a shared logic layer and a shared user-interface layer. Built-in Xamarin.Forms controls also provide a ton of...","Href":"https://blog.xamarin.com/extend-xamarin-forms-controls-functionality-with-behaviors/","RawContent":null},{"Title":"Xamarin.iOS and Xcode 9.3 Web Preview","PublishedOn":"2018-02-15T20:36:32+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The next release of Xcode, version 9.3, is currently in beta. Development of Xamarin.iOS to support the new Xcode 9.3 version is in-progress and available now as a web preview. Participating in...","Href":"https://blog.xamarin.com/xcode-9-3-web-preview-high-sierra-required/","RawContent":null},{"Title":"Add a Search Bar to Your Xamarin Apps in iOS 11","PublishedOn":"2018-02-12T20:00:25+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As described in the Go Large with iOS 11 post, view controllers in iOS 11 can use large titles to improve the clarity of an app&#8217;s user interface. To complement a view controller&#8217;s large...","Href":"https://blog.xamarin.com/add-search-bar-xamarin-ios-11/","RawContent":null},{"Title":"Podcast: Rapid UI Prototyping with Ink to Code, Merged Dictionaries in Xamarin.Forms, & Android Emulator Tips","PublishedOn":"2018-02-09T19:33:06+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I talk about a new tool that turns drawings into Android or UWP layouts, merged dictionaries coming to Xamarin.Forms, ways to make your...","Href":"https://blog.xamarin.com/podcast-rapid-ui-prototyping-ink-code-merged-dictionaries-xamarin-forms-android-emulator-tips/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7328076557","Type":"IssuesEvent","CreatedAt":"2018-03-04T17:11:58","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1362","RelatedDescription":"Closed issue \"get paid apps free o n ios\" (#1362) at xamarin/xamarin-android","RelatedBody":"<a href=\"https://www.techavy.com/kickass-proxy-kat-unblocked/\">kickass torrent proxyindex eu</a>\r\nentered an invalid username or password. Please press the back button, enter the correct details and try again. Don't forget that the password is case sensitive. Forgotten your password? Click here!\r\n\r\n<a href=\"https://kodipair.com/thevideo-vidup-tvad-me-pair-fix-kodi/\">thevideo.me account</a>\r\n Premium APK, you will need to enable installation from unknown sources by going to your Android settings. Once you have done this, go to your browser’s download tab and click on the APK file. Now click on install and install the app.\r\nWhen you open Spotify for the first time, it will ask you to select your favourite artists and bands. Select them and click on next. Spotify will now create a welcome playlist for you now base on your favourite artists and bands.\r\nFrom the home section, you can browse your recently played songs, and songs suggested by Spotify\r\n\r\n<a href=\"https://iapkdownload.com/tutuapp-ios-download/\">app store alternative</a>\r\n\r\n\r\n\r\n\r\n"},{"Id":"7327192260","Type":"IssuesEvent","CreatedAt":"2018-03-04T06:45:48","Actor":"chiragpanikar","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1362","RelatedDescription":"Opened issue \"get paid apps free o n ios\" (#1362) at xamarin/xamarin-android","RelatedBody":"<a href=\"https://www.techavy.com/kickass-proxy-kat-unblocked/\">kickass torrent proxyindex eu</a>\r\nentered an invalid username or password. Please press the back button, enter the correct details and try again. Don't forget that the password is case sensitive. Forgotten your password? Click here!\r\n\r\n<a href=\"https://kodipair.com/thevideo-vidup-tvad-me-pair-fix-kodi/\">thevideo.me account</a>\r\n Premium APK, you will need to enable installation from unknown sources by going to your Android settings. Once you have done this, go to your browser’s download tab and click on the APK file. Now click on install and install the app.\r\nWhen you open Spotify for the first time, it will ask you to select your favourite artists and bands. Select them and click on next. Spotify will now create a welcome playlist for you now base on your favourite artists and bands.\r\nFrom the home section, you can browse your recently played songs, and songs suggested by Spotify\r\n\r\n<a href=\"https://iapkdownload.com/tutuapp-ios-download/\">app store alternative</a>\r\n\r\n\r\n\r\n\r\n"},{"Id":"7326100861","Type":"PullRequestEvent","CreatedAt":"2018-03-03T16:50:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1358","RelatedDescription":"Merged pull request \"[docs] Reorganize the docs\" (#1358) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1343\r\n\r\n> Trying to refactor `README.md` so it's more concise...based on the\r\n> user's goal to contribute or provide feedback when visiting the\r\n> repository.\r\n\r\nIf we're to make `README.md` shorter, then the contents of `README.md`\r\nneed to be moved *elsewhere*.\r\n\r\nReorganize the Documentation, taking inspiration from dotnet/coreclr\r\nfor general organization principals:\r\n\r\n  * Documentation/building: How do we build this thing?\r\n  * Documentation/guides: \"Product documentation\" which should live\r\n    \"elsewhere\", but we want here for sanity purposes.\r\n    In particular, the Build Process documentation.\r\n  * Documentation/project-docs: What is Xamarin.Android?\r\n  * Documentation/workflow: How do we develop this thing?"},{"Id":"7326099585","Type":"PullRequestEvent","CreatedAt":"2018-03-03T16:49:34","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1359","RelatedDescription":"Merged pull request \"Bump to mono/2017-12/607cbde4\" (#1359) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/issues/7085\r\nContext: https://github.com/mono/mono/issues/7086\r\nContext: https://github.com/mono/mono/issues/7095\r\nContext: https://github.com/mono/mono/issues/7262\r\n\r\nVarious SDKs fixes."},{"Id":"7326099050","Type":"PullRequestEvent","CreatedAt":"2018-03-03T16:49:15","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1360","RelatedDescription":"Merged pull request \"[build] Use `cp -f` in `make package-oss`\" (#1360) at xamarin/xamarin-android","RelatedBody":"Commit 2bd13c4a [broke the Linux build][0]:\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-linux/817/\r\n\r\n\tcp: will not overwrite just-created 'xamarin.android-oss_v8.3.99.20_Linux-x86_64_HEAD_2bd13c4/ThirdPartyNotices.txt' with 'bin/Release/lib/xamarin.android/ThirdPartyNotices.txt'\r\n\tbuild-tools/scripts/BuildEverything.mk:165: recipe for target 'xamarin.android-oss_v8.3.99.20_Linux-x86_64_HEAD_2bd13c4.tar.bz2' failed\r\n\r\nI don't care if the Debug or Release file is used; they should be\r\nidentical.\r\n\r\nReplace `cp` with `cp -f` so that `make package-oss` doesn't fail."},{"Id":"7325580971","Type":"IssuesEvent","CreatedAt":"2018-03-03T10:51:17","Actor":"ThomasZeman","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1361","RelatedDescription":"Opened issue \"AndroidCreateDebugKey uses weak signature algorithm\" (#1361) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nI did this under Linux but I guess it is the same under Windows:\r\n1. msbuild an Xamarin.Android project with target Debug / SignAndroidPackage \r\n2. msbuild task _CreateAndroidDebugSigningKey calls into [AndroidDebugKey](https://github.com/xamarin/xamarin-android/blob/master/src/Xamarin.Android.Build.Tasks/Tasks/AndroidCreateDebugKey.cs)\r\n3. AndroidDebugKey calls keytool with something like: /usr/bin/keytool -genkeypair -alias androiddebugkey -storepass android -keypass android -keystore \"..debug.keystore\" -dname \"CN=Android Debug,O=Android,C=US\" -keyalg RSA -validity 10950\r\n\r\n### Expected Behavior\r\n\r\nDebug APK is signed with an accepted algorithm. Refer to this page:\r\nhttp://www.oracle.com/technetwork/java/javase/8u131-relnotes-3565278.html\r\n\r\n### Actual Behavior\r\n\r\nThe value \"RSA\" for parameter keyalg leads to a signed APK which is considered not signed right creation. Output of:\r\n\r\njarsigner -verify -verbose -certs ./bin/Android/AnyCPU/Release/some-Signed.apk\r\n\r\nshows:\r\n\r\nSigned by \"CN=Android Debug, O=Android, C=US\"\r\n    Digest algorithm: SHA1\r\n    Signature algorithm: MD5withRSA (weak), 2048-bit key\r\n\r\nWARNING: The jar will be treated as unsigned, because it is signed with a weak algorithm that is now disabled by the security property:\r\n\r\n  jdk.jar.disabledAlgorithms=MD2, MD5, RSA keySize < 1024, DSA keySize < 1024\r\n\r\n\r\n### Version Information\r\n\r\nTried with:\r\n\r\njava version \"1.8.0_161\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_161-b12)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.161-b12, mixed mode)\r\n\r\nxamarin-android build version 8.3.99.19\r\n"},{"Id":"7325041248","Type":"PullRequestEvent","CreatedAt":"2018-03-03T03:29:06","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1360","RelatedDescription":"Opened pull request \"[build] Use `cp -f` in `make package-oss`\" (#1360) at xamarin/xamarin-android","RelatedBody":"Commit 2bd13c4a [broke the Linux build][0]:\r\n\r\n[0]: https://jenkins.mono-project.com/view/Xamarin.Android/job/xamarin-android-linux/817/\r\n\r\n\tcp: will not overwrite just-created 'xamarin.android-oss_v8.3.99.20_Linux-x86_64_HEAD_2bd13c4/ThirdPartyNotices.txt' with 'bin/Release/lib/xamarin.android/ThirdPartyNotices.txt'\r\n\tbuild-tools/scripts/BuildEverything.mk:165: recipe for target 'xamarin.android-oss_v8.3.99.20_Linux-x86_64_HEAD_2bd13c4.tar.bz2' failed\r\n\r\nI don't care if the Debug or Release file is used; they should be\r\nidentical.\r\n\r\nReplace `cp` with `cp -f` so that `make package-oss` doesn't fail."},{"Id":"7325021663","Type":"PullRequestEvent","CreatedAt":"2018-03-03T03:14:29","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1343","RelatedDescription":"Closed pull request \"Revamp README.md to be single-page.\" (#1343) at xamarin/xamarin-android","RelatedBody":"Refactors the `README.md` to be single-page and provide links for ways to directly contribute and provide feedback.\r\n\r\nThese items have been discussed as part of our community engagement efforts. \r\n \r\nhttps://github.com/xamarin/xamarin-macios has already implemented these changes as of last Friday."},{"Id":"7325021160","Type":"PullRequestEvent","CreatedAt":"2018-03-03T03:14:07","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1359","RelatedDescription":"Opened pull request \"Bump to mono/2017-12/607cbde4\" (#1359) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/mono/mono/issues/7085\r\nContext: https://github.com/mono/mono/issues/7086\r\nContext: https://github.com/mono/mono/issues/7095\r\nContext: https://github.com/mono/mono/issues/7262\r\n\r\nVarious SDKs fixes."},{"Id":"7324652077","Type":"PullRequestEvent","CreatedAt":"2018-03-02T23:56:26","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1358","RelatedDescription":"Opened pull request \"[docs] Reorganize the docs\" (#1358) at xamarin/xamarin-android","RelatedBody":"Context: https://github.com/xamarin/xamarin-android/pull/1343\r\n\r\n> Trying to refactor `README.md` so it's more concise...based on the\r\n> user's goal to contribute or provide feedback when visiting the\r\n> repository.\r\n\r\nIf we're to make `README.md` shorter, then the contents of `README.md`\r\nneed to be moved *elsewhere*.\r\n\r\nReorganize the Documentation, taking inspiration from dotnet/coreclr\r\nfor general organization principals:\r\n\r\n  * Documentation/building: How do we build this thing?\r\n  * Documentation/guides: \"Product documentation\" which should live\r\n    \"elsewhere\", but we want here for sanity purposes.\r\n    In particular, the Build Process documentation.\r\n  * Documentation/project-docs: What is Xamarin.Android?\r\n  * Documentation/workflow: How do we develop this thing?"},{"Id":"7324319931","Type":"IssuesEvent","CreatedAt":"2018-03-02T22:10:57","Actor":"guygodin","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1357","RelatedDescription":"Opened issue \"Poor method signatures in Android.Opengl.EGL14\" (#1357) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Look at the Android.Opengl.EGL14 methods. For example:\r\nEglInitialize(EGLDisplay dpy, int[] major, int majorOffset, int[] minor, int minorOffset);\r\n\r\n2. The methods have essentially \"out\" parameters but instead of being exposed as such, they are exposed as arrays with an additional offset argument.\r\n\r\n### Expected Behavior\r\n\r\nSignature should be like this:\r\n\r\nEglInitialize(EGLDisplay dpy, out int major, out int minor);\r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.5.7\r\nVisualStudio.15.Release/15.5.7+27130.2036\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual Basic 2017   00369-60000-00001-AA324\r\nMicrosoft Visual Basic 2017\r\n\r\nVisual C# 2017   00369-60000-00001-AA324\r\nMicrosoft Visual C# 2017\r\n\r\nVisual C++ 2017   00369-60000-00001-AA324\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# 4.1   00369-60000-00001-AA324\r\nMicrosoft Visual F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.10.01106.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.31129.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51007.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.31106.0\r\nAzure App Service Tools v3.0.0\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Azure Tools   2.9\r\nMicrosoft Azure Tools for Microsoft Visual Studio 2017 - v2.9.51120.3\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.5.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nSQL Server Data Tools   15.1.61710.120\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.5.11025.1\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual C++ for Cross Platform Mobile Development (Android)   15.0.27005.02\r\nVisual C++ for Cross Platform Mobile Development (Android)\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for CMake   1.0\r\nVisual Studio Tools for CMake\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27130.2036\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.8.0.760 (fc93f3f5b)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.1.5.0 (HEAD/75f8c6838)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.4 (db807ec)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n"},{"Id":"7323189323","Type":"PullRequestEvent","CreatedAt":"2018-03-02T17:49:23","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1356","RelatedDescription":"Opened pull request \"[WIP\" (#1356) at xamarin/xamarin-android","RelatedBody":""},{"Id":"7322289059","Type":"PullRequestEvent","CreatedAt":"2018-03-02T14:54:36","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/464","RelatedDescription":"Merged pull request \"[build] ThirdPartyNotices.txt support\" (#464) at xamarin/xamarin-android","RelatedBody":"`ThirdPartyNotices.txt` is a Microsoft convention to inform\r\n\"the audience\" that third party software is contained within a given\r\n\"distribution mechanism\", where said \"distribution mechanism\" could be\r\na git repo or installable binary build artifacts.\r\n\r\nWhen applied to a source repository, `ThirdPartyNotices.txt` only\r\ncontains license information for source code contained *within the\r\ncurrent repository*, and does ***not*** include source code that may\r\nbe pulled in via external sources, such as git submodules or NuGet\r\npackages.\r\n\r\nWhen applied to installable binary build artifacts,\r\n`ThirdPartyNotices.txt` should include everything that is part of the\r\nbinary distribution.\r\n\r\nThis results in two separate files of interest:\r\n\r\n 1. `ThirdPartyNotices.txt`: Contains license information for 3rd\r\n    party source code which has been *copied* into this repo.\r\n\r\n 2. `bin/$(Configuration)/lib/xamarin.android/ThirdPartyNotices.txt`:\r\n    License information for a binary redistribution based on the build\r\n    tree. This would include license information for both source code\r\n    that has been copied into this repo, and source code from git\r\n    submodules.\r\n\r\nGeneration of these two separate files is controlled by two separate\r\nMSBuild properties:\r\n\r\n  * `$(TpnIncludeBuildDependencies)`: True when build-time\r\n    dependencies should be included in the resulting file.\r\n\r\n  * `$(TpnIncludeExternalDependencies)`: True when *external*\r\n    dependency information should be included in the resulting file.\r\n\r\nTo satisfy these separate needs:\r\n\r\n 1. Add a bunch of `external/*.tpnitems` and `src/*.tpnnitems` files,\r\n    which declares `@(ThirdPartyNotice)` values for various sources.\r\n    Some of these values are Conditional on MSBuild properties,\r\n    allowing them to be included or excluded based on the build\r\n    configuration.\r\n\r\n 2. Create a new `<CreateThirdPartyNotices/>` task in\r\n    `xa-prep-tasks.dll`. This task processes the `@(ThirdPartyNotice)`\r\n    item group to produce `ThirdPartyNotices.txt`-formatted content.\r\n\r\n 3. Add a new `build-tools/ThirdPartyNotices/ThirdPartyNotices.csproj`\r\n    project. This project includes the `external/*.tpnitems` and\r\n    `src/*.tpnitems` entries and invokes the\r\n    `<CreateThirdPartyNotices/>` task, creating the file\r\n    `$(ThirdPartyNoticeFile)`.\r\n\r\n 4. Update `Makefile` to build `ThirdPartyNotices.csproj` at well\r\n    defined build points. `make prepare` will update the top-level\r\n    `ThirdPartyNotices.txt`, and `$(CONFIGURATION)`-specific\r\n    `bin/$(Configuration)/lib/xamarin.android/ThirdPartyNotices.txt`\r\n    files for inclusion elsewhere."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7327650079","Type":"PullRequestEvent","CreatedAt":"2018-03-04T12:49:44","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/2010","RelatedDescription":"Opened pull request \"[Flex] correctly measure images\" (#2010) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[Flex] correctly measure images\r\n\r\nuse Aspect.Fill to measure images. also make sure we do not crash if the\r\nBounds are smaller than the request. Like any other control, we will\r\ndraw outside of our bounds, and rely on ClipToBounds for a nice shave.\r\n\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense\r\n"},{"Id":"7326160178","Type":"IssuesEvent","CreatedAt":"2018-03-03T17:28:08","Actor":"Magendanz","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2009","RelatedDescription":"Opened issue \"[iOS] Listview scrolled cells blank when using DataTemplateSelector\" (#2009) at xamarin/Xamarin.Forms","RelatedBody":"When using a ListView with a DataTemplateSelector, cells scrolled into view appear either partially or fully blank.  The bound collections are still there, since clicking the blank cells brings up the correct detail page, but it seems the cached views have been disposed.\r\n\r\nBypassing the DataTemplateSelector and setting the ItemTemplate to a single DataTemplate fixes the problem (but you're stuck with the single DataTemplate).  Also, you won't see the issue as long as you're viewing cells that are all resolved to the same DataTemplate.  It's only when you start switching between templates that the cell contents start disappearing when scrolled into view.\r\n\r\nNote: This problem only occurs on iOS platform.  Everything works as expected on Android.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Open any ContentPage with ListView that uses a DataTemplateSelector on iOS device or simulator\r\n2. Scroll Listview to show additional cells\r\n\r\n### Expected Behavior\r\nNew cells should scroll into view\r\n\r\n### Actual Behavior\r\nCells scrolling into view are either completely or partially blank\r\n\r\n### Basic Information\r\n- Version with issue: Xamarin Forms v2.5.0.280555\r\n- Last known good version: Unknown\r\n- IDE:Visual Studio 2017 v15.5.7, Xamarin v4.8.118\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  Xamarin.iOS SDK v11.6.1.4\r\n- Nuget Packages: N/A\r\n- Affected Devices: All\r\n\r\n### Attachments\r\n- Screenshot of two types of objects (HouseholdViewModel & ChildViewModel) that resolve to different DataTemplates, before and after scrolling\r\n- Sample ContentPage XAML and code behind of affected ListView\r\n[iOS ListView DataTemplateSelector Bug.zip](https://github.com/xamarin/Xamarin.Forms/files/1777708/iOS.ListView.DataTemplateSelector.Bug.zip)"},{"Id":"7325152635","Type":"IssuesEvent","CreatedAt":"2018-03-03T04:56:38","Actor":"nesh746","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2008","RelatedDescription":"Opened issue \"Application crashes when executing a parse statement in PCL\" (#2008) at xamarin/Xamarin.Forms","RelatedBody":"Consider the following statement somewhere in PCL project:\r\n\r\ndouble val = double.Parse(\"0.1233\");\r\n\r\nThis statement successfully executes in all Android physical devices (Tried different OS versions). The same statement also gets executed successfully on many of iPhone and iPad physical devices. However this statement is making the app to crash for a particular iOS device for me when it works fine in all other phones and tablets.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a sample xamarin.forms project and add that parse statement mentioned as above in PCL which should get executed when the app is run.\r\n2. Run the application.\r\n3. Observe the application.\r\n\r\n### Expected Behavior\r\n\r\nThe statement should get executed without causing any error.\r\n\r\n### Actual Behavior\r\n\r\nstatement is making the app to crash for a particular iOS device only.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: latest stable xamarin forms nuget package\r\n  - iOS:  SDK version 10.2 is used to compile the code.\r\n\r\n- Affected Devices:\r\n\r\niPhone X with iOS version 11.1.2"},{"Id":"7324140240","Type":"IssuesEvent","CreatedAt":"2018-03-02T21:26:56","Actor":"lacerdaeduardo","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/2007","RelatedDescription":"Opened issue \"[Enhancement] ReferenceExtension exception message\" (#2007) at xamarin/Xamarin.Forms","RelatedBody":"##Summary\r\nProvide an enhancement in ReferenceExtension Exception message.\r\n\r\n##API Changes\r\n\r\nIn order to facilitate troubleshooting when referencing elements in XAML pages, the exception message at ReferenceExtension \"Can't resolve name on Element\" must be improved to the following:\r\n\r\nthrow new Exception($\"Can't resolve name on Element {Name}\");\r\n\r\nThis way, when this exception is throwed at runtime, the developer can find the wrong element name in seconds.\r\n\r\n##Intended Use Case\r\nCreate a new Entry referencing another one that doenst exists at the same XAML page, e.g: \r\n\r\n```\r\n  <Entry x:Name=\"txtConfirmNewPassword\" IsPassword=\"True\" Placeholder=\"{i18n:Translate Text=txt_confirm_password}\"\r\n                       Text=\"{Binding ConfirmNewPassword}\"\r\n                       v:Validation.Validator=\"{v:CompareEntryValidator CompareValue={Binding Source={x:Reference txtNewPassword}, Path=Text}, ErrorLabel={**Reference** PasswordsDontMatch}, ErrorColor=Red}\"/>\r\n\r\n```\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7328549969","Type":"IssuesEvent","CreatedAt":"2018-03-04T21:44:24","Actor":"cwrea","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3655","RelatedDescription":"Opened issue \"Xamarin.iOS linker removes assembly attributes, but large & useful libraries (e.g. EF Core 2.0) rely on such being preserved\" (#3655) at xamarin/xamarin-macios","RelatedBody":"I've been attempting to get Microsoft Entity Framework Core 2.0 working in a Xamarin.iOS application **with full linking enabled**. EF Core is a large library &mdash; *exactly* the kind that could benefit from linking. Discovering all the critical types/methods to preserve in a LinkDescription XML file has been tedious, owing to extensive reflection and use of DI in EF Core 2.0, but I've been making progress, one crash at a time. (There's also hope that [ER Core could one day have linker hints built in](https://github.com/aspnet/EntityFrameworkCore/issues/10963).)\r\n\r\nHowever, I hit a major blocker: When EF Core creates a database from a model, it reads its own `AssemblyInformationalVersion` attribute to preserve in generated metadata. But *the Xamarin.iOS linker strips assembly attributes from an assembly that is not link-skipped*. So, in an app with full linking enabled, EF Core is crashing as it gets nothing back from reading the desired attribute value.\r\n\r\nThis behaviour appears to be an intentional linker feature, perhaps desirable and harmless in many cases &mdash; but for cases where it is a problem, *there exists no fine-grained directive to preserve assembly attributes*, as one could do with plain types/methods in a LinkDescription XML file.\r\n\r\nThe only workaround at present is to go back to link-skipping the large EF Core main assembly, and put up with the resulting bloat. For a small app that doesn't use EF Core's more advanced features, the unnecessary bloat *may* be considerable. (I haven't measured potential avoidable bloat yet, as I'm blocked from getting to the point where I could compare a working iOS app with full linking vs. one that link-skips EF Core.)\r\n\r\n### Steps to Reproduce (without EF Core; just the essential issue)\r\n\r\n1. Create a new Xamarin.iOS project using the Single View app template.\r\n2. In the project's iOS build settings for platform \"iPhone\" (real device), set linker behavior to \"Link All\".\r\n3. In AppDelegate.cs' `FinishedLaunching()` method, add the following line before the return:\r\n  `System.Diagnostics.Debug.WriteLine(\"TODO\");`\r\n4. Change the build to target a real iOS device, then build and run with debugging. Notice \"TODO\" is printed in the debug output. i.e. The basic application works with full linking.\r\n5. In Properties/AssemblyInfo.cs, append the following line:\r\n  `[assembly: AssemblyInformationalVersion(\"1.0.0.0\")]`\r\n6. From [the ProductInfo.cs file from the EF Core 2.0.0 repository](https://github.com/aspnet/EntityFrameworkCore/blob/rel/2.0.0/src/EFCore/Internal/ProductInfo.cs), copy and paste just the ProductInfo class definition into AppDelegate.cs, before the AppDelegate class definition.\r\n7. Change the `Debug.WriteLine()` call added in step 1 to read:\r\n  `System.Diagnostics.Debug.WriteLine(\"Version: \" + ProductInfo.GetVersion());`.\r\n8. Build and run with debugging. Instead of seeing \"Informational version: 1.0.0.0\" in the debugger output, the application crashes with `System.NullReferenceException: Object reference not set to an instance of an object`. If you were to expand the one-liner into multiple statements instead, you would see that the null reference is the attribute object from which the InformationalVersion property would have been accessed.\r\n\r\n### Expected Behavior\r\n\r\nIt *should* be possible to configure the linker to specifically preserve assembly attributes when the need arises &mdash; i.e. without completely opting out of linking an assembly.\r\n\r\nDevelopers of .NET Standard class libraries *should* be able to rely on reading their own assembly's attribute information. Linking should aim to exclude only *unnecessary* types, methods, and other data from an assembly. Beyond types and methods, when the linker *assumes* that a kind of thing can safely be excluded, it *should* provide a fine-grained directive to preserve some or all of the kinds-of-things, for cases where the assumption has been proven unsafe for a specific assembly.\r\n\r\n### Actual Behavior\r\n\r\nCrash. The present workaround requires completely opting out of linking for an assembly that relies on reading its own assembly attributes.\r\n\r\nHowever, linking remains highly desirable for large library dependencies used in mobile applications. The case in point is not only a very large .NET Standard library, but a popular data access framework promoted by Microsoft as cross-platform capable, including for mobile applications with on-device data access needs.\r\n\r\n### Environment\r\n\r\n```\r\nMicrosoft Visual Studio Community 2017 \r\nVersion 15.5.7\r\nVisualStudio.15.Release/15.5.7+27130.2036\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community\r\n\r\nVisual Basic 2017   00369-60000-00001-AA398\r\nMicrosoft Visual Basic 2017\r\n\r\nVisual C# 2017   00369-60000-00001-AA398\r\nMicrosoft Visual C# 2017\r\n\r\nVisual C++ 2017   00369-60000-00001-AA398\r\nMicrosoft Visual C++ 2017\r\n\r\nVisual F# 4.1   00369-60000-00001-AA398\r\nMicrosoft Visual F# 4.1\r\n\r\nAdd New File   3.5\r\nThe fastest and easiest way to add new files to any project - including files that start with a dot\r\n\r\nApplication Insights Tools for Visual Studio Package   8.10.01106.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.31129.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nASP.NET Web Frameworks and Tools 2012   4.0.20601.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nASP.NET Web Frameworks and Tools 2017   5.2.51007.0\r\nFor additional information, visit https://www.asp.net/\r\n\r\nAzure App Service Tools v3.0.0   15.0.31106.0\r\nAzure App Service Tools v3.0.0\r\n\r\nCodeMaid   10.4.53\r\nCodeMaid is an open source Visual Studio extension to cleanup and simplify our C#, C++, F#, VB, PHP, PowerShell, R, JSON, XAML, XML, ASP, HTML, CSS, LESS, SCSS, JavaScript and TypeScript coding.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nGitHub.VisualStudio   2.4.2.1331\r\nA Visual Studio Extension that brings the GitHub Flow into Visual Studio.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nJetBrains ReSharper Ultimate 2017.2.2    Build 109.0.20171006.122324\r\nJetBrains ReSharper Ultimate package for Microsoft Visual Studio. For more information about ReSharper Ultimate, visit http://www.jetbrains.com/resharper. Copyright © 2018 JetBrains, Inc.\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual C++ Wizards   1.0\r\nMicrosoft Visual C++ Wizards\r\n\r\nMicrosoft Visual Studio Tools for Containers   1.1\r\nDevelop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNode.js Tools   1.4.11025.7\r\nAdds support for developing and debugging Node.js apps in Visual Studio\r\n\r\nNuGet Package Manager   4.5.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nOpen Command Line   2.1.179\r\nOpens a command line at the root of the project. Support for all consoles such as CMD, PowerShell, Bash etc. Provides syntax highlighting, Intellisense and execution of .cmd and .bat files.\r\n\r\nSearch in Velocity by Silverlake Software LLC   0.7.1\r\nProvides a command to search in Velocity the offline documentation and docset viewer for Windows\r\n\r\nSQL Server Data Tools   15.1.61710.120\r\nMicrosoft SQL Server Data Tools\r\n\r\nSQLite & SQL Server Compact Toolbox   4.7\r\nSQLite & SQL Server Compact Toolbox adds scripting, import, export, rename, query execution and much more to SQL Server Compact & SQLite Data Connections.\r\n\r\nSyntax Visualizer   1.0\r\nAn extension for visualizing Roslyn SyntaxTrees.\r\n\r\nTypeScript Tools   15.5.11025.1\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27130.2036\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nVSColorOutput   2.5.1\r\nColor output for build and debug windows - http://mike-ward.net/vscoloroutput\r\n\r\nXamarin   4.8.0.760 (fc93f3f5b)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.1.5.0 (HEAD/75f8c6838)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.4 (db807ec)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n```\r\n\r\n### Build Logs\r\n\r\n```\r\n1>------ Rebuild All started: Project: TestXamLinkIssue, Configuration: Debug iPhone ------\r\n1>  Connecting to Mac server cwrea-mini...\r\n1>  TestXamLinkIssue -> D:\\Projects\\TestXamLinkIssueSoln\\TestXamLinkIssue\\bin\\iPhone\\Debug\\TestXamLinkIssue.exe\r\n1>  Detected signing identity:\r\n1>    Code Signing Key: \"iPhone Developer: [...]\" (...)\r\n1>    Provisioning Profile: \"cwrea iOS Dev Prov. Profile\" (...)\r\n1>    Bundle Id: com.companyname.TestXamLinkIssue\r\n1>    App Id: J7ADM89KY9.com.companyname.TestXamLinkIssue\r\n1>  /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/strip: removing global symbols from a final linked no longer supported.  Use -exported_symbols_list at link time when building: /Users/cwrea/Library/Caches/Xamarin/mtbs/builds/TestXamLinkIssue/a101bae86211f0bd1960357a25c90492/bin/iPhone/Debug/TestXamLinkIssue.app/TestXamLinkIssue\r\n1>  bin/iPhone/Debug/TestXamLinkIssue.app: valid on disk\r\n1>  bin/iPhone/Debug/TestXamLinkIssue.app: satisfies its Designated Requirement\r\n1>  bin/iPhone/Debug/TestXamLinkIssue.app: explicit requirement satisfied\r\n========== Rebuild All: 1 succeeded, 0 failed, 0 skipped ==========\r\n\r\nProjects build report:\r\n  Status    | Project [Config|platform]\r\n -----------|---------------------------------------------------------------------------------------------------\r\n  Succeeded | TestXamLinkIssue\\TestXamLinkIssue.csproj [Debug|iPhone]\r\n\r\nTime Elapsed 00:00:22.323\r\n```\r\n"},{"Id":"7324324932","Type":"IssuesEvent","CreatedAt":"2018-03-02T22:12:16","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3654","RelatedDescription":"Opened issue \"XI and XM bindings projects use MCS not CSC\" (#3654) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create New XI or XM Binding Project\r\n2. Look at build log for mcs or csc\r\n3. Notice mcs \r\n\r\n### Environment\r\n\r\nLatest master\r\n\r\n### Build Logs\r\n\r\nhttps://gist.github.com/chamons/23397ab1935469d9ebda6bf89c1532ba\r\n"},{"Id":"7324004041","Type":"IssuesEvent","CreatedAt":"2018-03-02T20:54:15","Actor":"kingces95","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3653","RelatedDescription":"Opened issue \"mono-symbolicate errors (on iOS only): \"Warning: MVID directory does not exist: ...\"\" (#3653) at xamarin/xamarin-macios","RelatedBody":"### Description\r\n\r\n We have several Xamarin.Forms apps that are instrumented with the HockeyApp SDK to send crash reports. The build environment is Visual Studio 2017 on Windows 10 with local builds for android and remote builds to a Mac for iOS builds. We've recently gotten the android versions to build in such a way that they produce the needed .mSym files and have been successful in using mono-symbolicate to view the filenames and line numbers from stack traces sent to HockeyApp for production builds. For iOS, on the build server in the `\"~/Library/Caches/Xamarin/mtbs/builds/<ourApp>/<someGuid>/bin/iPhone/Ad-Hoc/<ourApp>.mSYM\"` directory, there are a bunch of sub-directories. But when we run mono-symbolicate, every sub-directory that it's looking for isn't found. So each line of the input stack trace produces an error `\"Warning: MVID directory does not exist: <someSubDirectory>\"`. Example error line:\r\n\r\n`Warning: MVID directory does not exist: /Users/derek.wheeler/Library/Caches/Xamarin/mtbs/builds/FieldSheet.iOS/b5f6c442719e634bde4b19906949135b/bin/iPhone/Ad-Hoc/FieldSheet.app.mSYM/1861ef8a8a87467c9c37202d50ff68b2\r\n  at FieldSheet.Pages.ConnectionSettingsPage.TestAppCrash () <0x100925550 + 0x0001f> in <1861ef8a8a87467c9c37202d50ff68b2#d25ebbac98c60d1ed35df16528c08be6>:0`\r\n\r\nOf note too, we get a build warning that sounds like a problem producing the mSYM stuff:\r\n\r\n1>C:\\Program Files (x86)\\MSBuild\\Xamarin\\iOS\\Xamarin.iOS.Common.targets(777,3): warning : Aot files could not be copied to the destination directory /Users/derek.wheeler/Library/Caches/Xamarin/mtbs/builds/FieldSheet.iOS/b5f6c442719e634bde4b19906949135b/obj/iPhone/Ad-Hoc/mtouch-cache/64/Build/Msym/Msym/tmp: Could not start process.\r\n\r\nWe've tried a bunch of different build options but couldn't find a definitive source for this so we were basically just guessing. The latest version from the iOS csproj:\r\n\r\n`\r\n<PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Ad-Hoc|iPhone' \">\r\n    <DebugType>pdbonly</DebugType>\r\n    <Optimize>True</Optimize>\r\n    <OutputPath>bin\\iPhone\\Ad-Hoc</OutputPath>\r\n    <ErrorReport>prompt</ErrorReport>\r\n    <WarningLevel>4</WarningLevel>\r\n    <ConsolePause>False</ConsolePause>\r\n    <MtouchArch>ARMv7, ARM64</MtouchArch>\r\n    <BuildIpa>True</BuildIpa>\r\n    <CodesignKey>...redacted...</CodesignKey>\r\n    <CodesignEntitlements>Entitlements.plist</CodesignEntitlements>\r\n    <GenerateSerializationAssemblies>Off</GenerateSerializationAssemblies>\r\n    <DebugSymbols>True</DebugSymbols>\r\n    <MonoSymbolArchive>True</MonoSymbolArchive>\r\n    <MtouchEnableSGenConc>false</MtouchEnableSGenConc>\r\n</PropertyGroup>\r\n`\r\n\r\n### Steps to Reproduce\r\n\r\nsee Description\r\n\r\n### Expected Behavior\r\n\r\nmono-symbolicate should be able to show filenames and line numbers for Ad-Hoc iOS builds\r\n\r\n### Actual Behavior\r\n\r\nmono-symbolicate shows errors\r\n\r\n### Basic Information\r\n\r\n- Version with issue: Xamarin=4.8.0.760\r\n- Last known good version: This is the first time we're trying this. \r\n- IDE: Visual Studio Enterprise 2015, Version 14.0.25425.01 Update 3\r\n- Platform Target Frameworks: \r\n  - iOS:   Xamarin.iOS and Xamarin.Mac SDK = 11.6.1.4 (db807ec)\r\n\r\n### Screenshots\r\n\r\n### Reproduction Link"},{"Id":"7323902139","Type":"IssuesEvent","CreatedAt":"2018-03-02T20:29:57","Actor":"Edward472","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3652","RelatedDescription":"Opened issue \"Interacting With a CustomButtonRenderer That Contains A UIDatePicker Disables All TimePickers\" (#3652) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Have a Custom Button that is rendered using a CustomButtonRenderer which contains a UIDatePicker\r\n2. Place the CustomButton on a view with a TimePicker\r\n3. Click on the TimePicker \r\n4. TimePicker allows changes and selections\r\n5. Click on the Custom Button\r\n6. Go back and click the Timepicker\r\n\r\nWe have also reproduced this behavior with the timepicker and custom button on seperate views. As long as you render the custom button and click on it, all resulting timepickers in any subsequent view will behave this way. Small sample project attached.\r\n\r\n### Expected Behavior\r\nTimePicker should allow for changes\r\n\r\n### Actual Behavior\r\nTimePicker allows for scrolling of hour/minute/seconds but wheels are grey and do not retain any selection. After scrolling the time wheels go back to whatever the initial value of the picker was. The only way to get the time pickers back to normal is to close and reopen the app.\r\n\r\n### Environment\r\nReproduced in IOS Simulator on Mac running Sierra\r\nReproduced on Physical IPad Air \r\n\r\n<!--\r\n1.\r\nVisual Studio: Help > About Microsoft Visual Studio > Copy Info [button]\r\nVisual Studio for Mac: Visual Studio > About Visual Studio > Show Details > Copy Information [button]\r\n\r\n2. Paste into the code block below (between ```)\r\n-->\r\n\r\n```=== Visual Studio Community 2017 for Mac ===\r\n\r\nVersion 7.3.3 (build 23)\r\nInstallation UUID: 1ed947ba-f8fc-4cd4-bb73-34f5183f47e9\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t1.1.2\r\n\t1.0.5\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t1.0.4\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\n'/Applications/Xamarin Profiler.app' not found\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.4 (Visual Studio Community)\r\nHash: db807ec9\r\nBranch: xcode9.2\r\nBuild date: 2018-01-10 16:45:48-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nVersion: 8.1.5.0 (Visual Studio Community)\r\nAndroid SDK: /Users/csci/Library/Android/sdk\r\n\tSupported Android versions:\r\n\t\t7.0 (API level 24)\r\n\r\nSDK Tools Version: 25.1.7\r\nSDK Platform Tools Version: 24.0.2\r\nSDK Build Tools Version: 24.0.2\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_45\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_45-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.45-b02, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.216 (Visual Studio Community)\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703030023\r\nGit revision: e02ab111d8181ffe766c2258141282c88188ebb6\r\nBuild date: 2018-02-20 08:06:38-05\r\nXamarin addins: 5ce2b6790676a4542aa0d69d07f6a716e17d4e65\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.12.6\r\nDarwin 16.7.0 Darwin Kernel Version 16.7.0\r\n    Thu Jan 11 22:59:40 PST 2018\r\n    root:xnu-3789.73.8~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nNuGet Package Management Extensions 0.12.5\r\nxUnit.NET 2 testing framework support 0.7.5\r\nRedth's Addins 1.0.9\r\nGorilla Player 1.0.0.5\r\nInternet of Things (IoT) development (Preview) 7.1\r\n```\r\n\r\n### Build Logs\r\n\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Attach build log or link to gist (https://gist.github.com/) of the log.\r\n-->\r\n\r\n### Example Project (If Possible)\r\n<!--\r\n1. Place cursor below this comment block.\r\n\r\n2. Drag and drop the compressed project or files needed to reproduce.\r\n-->\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n-->\r\n[TimePickerRendererTest.zip](https://github.com/xamarin/xamarin-macios/files/1776480/TimePickerRendererTest.zip)\r\n\r\n"},{"Id":"7323851506","Type":"PullRequestEvent","CreatedAt":"2018-03-02T20:17:37","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3648","RelatedDescription":"Merged pull request \"[xharness] Only run the install source tests if we're including either Mac or Simulator tests.\" (#3648) at xamarin/xamarin-macios","RelatedBody":"This means we won't be running these tests when running device tests (which is\nnot needed)."},{"Id":"7323784296","Type":"IssuesEvent","CreatedAt":"2018-03-02T20:01:09","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3608","RelatedDescription":"Reopened issue \"Xamarin.Mac Binding Library project does not support \"Full\" framework\" (#3608) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create a new Xamarin.Mac \"Bindings Library\"\r\n2. Open up the properties for the bindings project\r\n3. Set Build > General > Target Framework to \"Xamarin.Mac Full\"\r\n4. Add a Cocoa App and set its target framework to \"Xamarin.Mac Full\"\r\n5. Add a reference on the Cocoa App to the bindings library\r\n5. Compile (broken!)\r\n\r\n### Expected Behavior\r\nYou should be able to create a bindings library for either \"modern\" or \"full\" frameworks, *and* compile them.\r\n\r\n### Actual Behavior\r\nIt only works for the \"modern\" framework. \r\n\r\n### Environment\r\n\r\n```\r\n=== Visual Studio Professional 2017 for Mac ===\r\n\r\nVersion 7.3.3 (build 23)\r\nInstallation UUID: d9050f0b-87f7-4e38-9d83-c01eaf2f82fc\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\n=== NuGet ===\r\n\r\nVersion: 4.3.1.4445\r\n\r\n=== .NET Core ===\r\n\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Versions:\r\n\t2.0.5\r\n\t2.0.0\r\n\t2.0.0-preview1-002111-00\r\n\t2.0.0-beta-001791-00\r\n\t1.1.1\r\n\t1.1.0\r\n\t1.0.4\r\nSDK: /usr/local/share/dotnet/sdk/2.1.4/Sdks\r\nSDK Versions:\r\n\t2.1.4\r\n\t2.0.0\r\n\t2.0.0-preview1-005977\r\n\t2.0.0-preview1-005645\r\n\t1.0.1\r\n\t1.0.0-preview2-1-003177\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\n=== Xamarin.Profiler ===\r\n\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\n=== Apple Developer Tools ===\r\n\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n=== Xamarin.iOS ===\r\n\r\nVersion: 11.6.1.4 (Visual Studio Professional)\r\nHash: db807ec9\r\nBranch: xcode9.2\r\nBuild date: 2018-01-10 16:45:48-0500\r\n\r\n=== Xamarin.Android ===\r\n\r\nNot Installed\r\n\r\n=== Xamarin.Mac ===\r\n\r\nVersion: 4.0.0.216 (Visual Studio Professional)\r\n\r\n=== Xamarin Inspector ===\r\n\r\nVersion: 1.4.0\r\nHash: b3f92f9\r\nBranch: master\r\nBuild date: Fri, 19 Jan 2018 22:00:34 GMT\r\nClient compatibility: 1\r\n\r\n=== Build Information ===\r\n\r\nRelease ID: 703030023\r\nGit revision: e02ab111d8181ffe766c2258141282c88188ebb6\r\nBuild date: 2018-02-20 08:06:38-05\r\nXamarin addins: 5ce2b6790676a4542aa0d69d07f6a716e17d4e65\r\nBuild lane: monodevelop-lion-d15-5\r\n\r\n=== Operating System ===\r\n\r\nMac OS X 10.13.3\r\nDarwin 17.4.0 Darwin Kernel Version 17.4.0\r\n    Sun Dec 17 09:19:54 PST 2017\r\n    root:xnu-4570.41.2~1/RELEASE_X86_64 x86_64\r\n\r\n=== Enabled user installed addins ===\r\n\r\nAddinMaker 1.4.2\r\nRhinoCommon Plugin Support 7.3.3.0\r\nInternet of Things (IoT) development (Preview) 7.1\r\n\r\n```\r\n\r\n### Build Logs\r\n\r\n```\r\nBuilding Solution: MyBindingProject (Debug)\r\n__________________________________________________\r\nProject \"/Users/curtis/Projects/MyBindingProject/MyBindingProject/MyBindingProject.csproj\" (Build target(s)):\r\n\r\n/Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Microsoft.Common.CurrentVersion.targets(2003,5): warning MSB3245: Could not resolve this reference. Could not locate the assembly \"Xamarin.Mac\". Check to make sure the assembly exists on disk. If this reference is required by your code, you may get compilation errors.\r\n/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/bin/bgen  -nostdlib /v /baselib:/Library/Frameworks/Xamarin.Mac.framework/Versions/Current/lib/mono/4.5/Xamarin.Mac.dll /unsafe /d:\"__UNIFIED__;__MACOS__;DEBUG\" /Users/curtis/Projects/MyBindingProject/MyBindingProject/ApiDefinition.cs /s:/Users/curtis/Projects/MyBindingProject/MyBindingProject/StructsAndEnums.cs -r /mscorlib.dll -r /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/4.5-api/System.Core.dll -r /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/4.5-api/System.dll -r /mscorlib.dll /tmpdir:/Users/curtis/Projects/MyBindingProject/MyBindingProject/obj/Debug/mac/ /sourceonly:/Users/curtis/Projects/MyBindingProject/MyBindingProject/obj/Debug/mac/sources.list /target-framework=Xamarin.Mac,Version=v4.5,Profile=Full \r\nBTOUCH : error CS0006: Metadata file `/mscorlib.dll' could not be found\r\nBTOUCH : error CS0006: Metadata file `/mscorlib.dll' could not be found\r\nBTOUCH : error CS1703: An assembly `System' with the same identity has already been imported. Consider removing one of the references\r\nBTOUCH : error CS1703: An assembly `System.Core' with the same identity has already been imported. Consider removing one of the references\r\nBTOUCH : error CS0518: The predefined type `System.Object' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.ValueType' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Attribute' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Int32' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.UInt32' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Int64' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.UInt64' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Single' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Double' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Char' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Int16' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Decimal' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Boolean' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.SByte' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Byte' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.UInt16' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.String' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Enum' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Delegate' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.MulticastDelegate' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Void' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Array' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Type' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Collections.IEnumerator' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Collections.IEnumerable' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.IDisposable' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.IntPtr' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.UIntPtr' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.RuntimeFieldHandle' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.RuntimeTypeHandle' is not defined or imported\r\nBTOUCH : error CS0518: The predefined type `System.Exception' is not defined or imported\r\nDone building project \"MyBindingProject.csproj\" -- FAILED.\r\n\r\n---------------------- Done ----------------------\r\n\r\nBuild: 35 errors, 1 warning\r\n```\r\n\r\n### Example Project (If Possible)\r\n\r\n[MyBindingProject.zip](https://github.com/xamarin/xamarin-macios/files/1764172/MyBindingProject.zip)\r\n"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"970456916488015873","CreatedAt":"2018-03-05T00:32:13+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/jQn1NkyLSA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":15,"FavoriteCount":10,"RawContent":null},{"Id":"970104538375118848","CreatedAt":"2018-03-04T01:12:00+00:00","UserScreenname":"xamarinhq","Text":"Better resource organization in #XamarinForms: https://t.co/8bKeJx4e22","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":16,"RawContent":null},{"Id":"969656588805001217","CreatedAt":"2018-03-02T19:32:00+00:00","UserScreenname":"xamarinhq","Text":"You don't want to miss this! It's your chance to ask living legend @migueldeicaza your questions in his @reddit… https://t.co/6qG4JhCwia","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":8,"FavoriteCount":6,"RawContent":null},{"Id":"969616829483311104","CreatedAt":"2018-03-02T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/3D8bDqoefW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":100,"FavoriteCount":29,"RawContent":null},{"Id":"969291313173745665","CreatedAt":"2018-03-01T19:20:32+00:00","UserScreenname":"xamarinhq","Text":"Amp up your skills with a #Xamarin mobile developer event near you in March: https://t.co/glgXli4KCp https://t.co/hUYXkqMYl6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":14,"RawContent":null},{"Id":"969256455504318464","CreatedAt":"2018-03-01T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDgfF2Z https://t.co/MNLAkVzqaz","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":7,"RawContent":null},{"Id":"968935619358527488","CreatedAt":"2018-02-28T19:47:08+00:00","UserScreenname":"xamarinhq","Text":"Check out the new, feature-packed release of #UrhoSharp 1.8: https://t.co/ZxSIstdhNE https://t.co/cwathwkTEw","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":57,"FavoriteCount":21,"RawContent":null},{"Id":"968895325460103168","CreatedAt":"2018-02-28T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/YZBmRK5CcT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":33,"FavoriteCount":11,"RawContent":null},{"Id":"968530780724088832","CreatedAt":"2018-02-27T16:58:27+00:00","UserScreenname":"xamarinhq","Text":"Our own @mayur_tendulkar shows you how to build a mobile app using #XamarinForms and the Microsoft Graph API:… https://t.co/svcX6jHBJ4","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":58,"FavoriteCount":17,"RawContent":null},{"Id":"968204127166754816","CreatedAt":"2018-02-26T19:20:26+00:00","UserScreenname":"xamarinhq","Text":"Get a sneak peek at our newest @XamarinU course, \"Navigation Patterns in #XamarinForms\": https://t.co/3fd0sIUJMZ https://t.co/GzDZxRtlZH","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":65,"FavoriteCount":21,"RawContent":null},{"Id":"968170803916361728","CreatedAt":"2018-02-26T17:08:02+00:00","UserScreenname":"xamarinhq","Text":"Learn how to supercharge your Xamarin.Mac app startup times: https://t.co/JzwELyF3Tm https://t.co/ABxM6v3B6S","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":24,"FavoriteCount":4,"RawContent":null},{"Id":"967928201430388736","CreatedAt":"2018-02-26T01:04:01+00:00","UserScreenname":"xamarinhq","Text":"Implement or improve end-to-end mobile #DevOps in your apps with this series from Greg Shackles on the #VSAppCenter… https://t.co/bCckhyxtl6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":46,"FavoriteCount":25,"RawContent":null},{"Id":"967564304206745600","CreatedAt":"2018-02-25T00:58:01+00:00","UserScreenname":"xamarinhq","Text":"Running #Xamarin.iOS unit tests in #VSTS: https://t.co/20PDCJZkbJ https://t.co/6VAIpDbCD7","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":79,"FavoriteCount":45,"RawContent":null},{"Id":"967121514339405824","CreatedAt":"2018-02-23T19:38:31+00:00","UserScreenname":"xamarinhq","Text":"Add @TizenProject to your #XamarinForms apps: https://t.co/pom9Nki4vo https://t.co/EVWC9fi7wy","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":8,"RawContent":null},{"Id":"967078348043190272","CreatedAt":"2018-02-23T16:47:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":23,"RawContent":null},{"Id":"966787653097181187","CreatedAt":"2018-02-22T21:31:53+00:00","UserScreenname":"xamarinhq","Text":"Create and host tvOS TVML apps with Microsoft #Azure and #Xamarin: https://t.co/ScMHDQBDvs https://t.co/sPxlVR6weS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":18,"RawContent":null},{"Id":"966716967104245760","CreatedAt":"2018-02-22T16:51:00+00:00","UserScreenname":"xamarinhq","Text":"It's almost time for our webinar with @XamarinU on building your first intelligent app with #Xamarin and Microsoft… https://t.co/nrzOWMsSV0","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":17,"FavoriteCount":4,"RawContent":null},{"Id":"966354831018520577","CreatedAt":"2018-02-21T16:52:00+00:00","UserScreenname":"xamarinhq","Text":"You don't want to miss tomorrow's webinar with @XamarinU on building your first intelligent app with #Xamarin and M… https://t.co/XMK3ovJfTs","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":18,"RawContent":null},{"Id":"966037865846181889","CreatedAt":"2018-02-20T19:52:29+00:00","UserScreenname":"xamarinhq","Text":"Learn how to create simple Xamarin.iOS apps with #CoreML and Microsoft #Azure: https://t.co/poP0TGynlP https://t.co/Qv70tw9axj","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":62,"FavoriteCount":35,"RawContent":null},{"Id":"965998738874556416","CreatedAt":"2018-02-20T17:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/1lAEfhDA1g","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":34,"FavoriteCount":16,"RawContent":null}]}},"RunOn":"2018-03-05T05:30:39.3893412Z","RunDurationInMilliseconds":3840}