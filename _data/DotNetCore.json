{"Data":{"Blog":{"FeedItems":[{"Title":".NET Core September 2017 Update — macOS High Sierra Support","PublishedOn":"2017-09-22T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We released .NET Core updates for macOS High Sierra Support and additional quality fixes. You can download and install the update for Windows, macOS and Linux. This update is for .NET Core 1.0 and 1.1. The initial .NET Core 2.0 release includes similar improvements, so is not being updated with this release. Downloads .NET Core 1.0.7 .NET... <a aria-label=\"read more about .NET Core September 2017 Update &#8212; macOS High Sierra Support\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/","RawContent":null},{"Title":".NET Framework 4.7.1 Accessibility and WPF Improvements","PublishedOn":"2017-09-21T00:00:00","CommentsCount":3,"FacebookCount":0,"Summary":"This post describes the new WPF and accessibility features and improvements in .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Accessibility improvements .NET Framework 4.7.1 brings in a lot of accessibility improvements across different libraries to align with the... <a aria-label=\"read more about .NET Framework 4.7.1 Accessibility and WPF Improvements\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/","RawContent":null},{"Title":"Watch .NET Conf 2017!","PublishedOn":"2017-09-19T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":".NET Conf starts today. It&#8217;s a three-day, free, virtual and global .NET conference. All you need to do is point your web browser to channel9.msdn.com, starting at 8AM Pacific Time. We have a packed agenda with a great set of expert .NET developers. What will you learn? Many things. You will learn to build for... <a aria-label=\"read more about Watch .NET Conf 2017!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/","RawContent":null},{"Title":".NET Framework 4.7.1 ASP.NET and Configuration features","PublishedOn":"2017-09-14T00:00:00","CommentsCount":23,"FacebookCount":0,"Summary":"This post describes the new ASP.NET, Configuration and System.Messaging features and improvements in the .NET Framework 4.7.1. More information on the build these features are available in and how to get the Developer Pack is covered in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Configuration builders Configuration builders allow developers to inject and build... <a aria-label=\"read more about .NET Framework 4.7.1 ASP.NET and Configuration features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/","RawContent":null},{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T00:00:00","CommentsCount":20,"FacebookCount":0,"Summary":"Last Updated: 2017.09.21. Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. This update has known issues. Please see them at the bottom of the update. Security This release contains the... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null},{"Title":"The week in .NET – Let’s Encrypt Web App Renewer, Seattle CodeCamp 2017","PublishedOn":"2017-08-29T00:00:00","CommentsCount":8,"FacebookCount":0,"Summary":"Previous posts: Project File Tools, Maira Wenzel, Mixed Reality in Miami .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Open-source project of the week: Let&#8217;s Encrypt Azure Web App Renewer There&#8217;s a growing consensus that all web sites should... <a aria-label=\"read more about The week in .NET &#8211; Let&#8217;s Encrypt Web App Renewer, Seattle CodeCamp 2017\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/","RawContent":null},{"Title":"UWP & .NET Standard 2.0: A preview is now available!","PublishedOn":"2017-08-25T00:00:00","CommentsCount":47,"FacebookCount":0,"Summary":"Today, we released the first Preview of Visual Studio 2017 version 15.4. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&#8217;ll outline what this means for UWP development with .NET. Prerequisites In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU)... <a aria-label=\"read more about UWP &#38; .NET Standard 2.0: A preview is now available!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","RawContent":null},{"Title":"Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance","PublishedOn":"2017-08-25T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"As part of the series of posts announced at this initial blog post (.NET Application Architecture Guidance) that explores each of the architecture areas currently covered by our team, this current blog post focuses on &#8220;Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance&#8220;. Just as a reminder, the four introductory blog posts of this series are (or... <a aria-label=\"read more about Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/","RawContent":null},{"Title":"The week in .NET – Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!","PublishedOn":"2017-08-23T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Previous posts: .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Nuke, Warden.NET, .NET in Bangalore Visual Studio extension of the week: Project File Tools The Project File Tools Visual Studio extension provides package name and version IntelliSense, tooltips for... <a aria-label=\"read more about The week in .NET &#8211; Project File Tools, Maira Wenzel, Mixed Reality in Miami, and links!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/23/the-week-in-net-project-file-tools-maira-wenzel-mixed-reality-in-miami-and-links/","RawContent":null},{"Title":".NET Framework Update for AppContext","PublishedOn":"2017-08-18T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"A new update for .NET Framework is now available for the AppContext class. The behavior of the AppContext class was recently regressed. The update returns the class to the correct behavior. This update affects the .NET Framework 4.6 and later. The update is not required on Windows 10. The AppContext class was introduced in the... <a aria-label=\"read more about .NET Framework Update for AppContext\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6483200432","Type":"PullRequestEvent","CreatedAt":"2017-08-18T19:58:41","Actor":"gep13","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Opened pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6470589367","Type":"PullRequestEvent","CreatedAt":"2017-08-17T09:24:13","Actor":"stefanov-stefan","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Opened pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6404144202","Type":"IssuesEvent","CreatedAt":"2017-08-07T01:09:52","Actor":"ghuntley","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/84","RelatedDescription":"Opened issue \"How can we embed images into the .NET foundation website?\" (#84) at dotnet/home","RelatedBody":"The CSP policy on https://dotnetfoundation.org/reactiveui is preventing embedding images. I'd prefer to _not to adjust CSP_ policy to add the reactiveui.net and instead have some way to pull-request images into this repository.\r\n\r\n![image](https://user-images.githubusercontent.com/127353/29008831-a28cfee4-7b60-11e7-81e4-46342b074d4b.png)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6541935607","Type":"IssuesEvent","CreatedAt":"2017-09-01T22:57:04","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/31","RelatedDescription":"Opened issue \"Issues with .NET Standard 2.0 with .NET Framework & NuGet\" (#31) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\nWe've designed .NET Standard & our tooling so that projects targeting .NET Framework 4.6.1 can consume NuGet packages & projects targeting .NET Standard 2.0 or earlier. Unfortunately, we've seen a few issues around that scenario. The purpose of this document is to summarize the issues, outline our plan on addressing them, and providing workarounds you can deploy with today's state of our tooling.\r\n\r\n## Symptoms and root cause\r\n\r\nThe [primary symptom](https:/github.com/dotnet/standard/issues/410) is that applications crash with a `FileLoadException` or a `FileNotFoundException`. Another symptom is warnings at build time regarding assembly versions. This is due to one or both of the following issues:\r\n\r\n1. Missing binding redirects\r\n2. Missing binaries that come from indirect NuGet packages\r\n\r\n### Missing binding redirects\r\n\r\n.NET Standard 1.x was based around contracts. Many of these contracts shipped with .NET Framework 4.5 and later. However, different versions of .NET Framework picked up different versions of these contracts, as by-design of contract versioning. As a side effect of marking .NET Framework 4.6.1 as implementing .NET Standard 2.0, some projects will now start picking up binaries built for .NET Standard 1.5 and 1.6 (as opposed to previously where .NET Framework 4.6.1 was considered as implementing .NET Standard 1.4). This results in mismatches of the assembly versions between what was shipped in .NET Framework and what was part of .NET Standard 1.5/1.6.\r\n\r\nThis can be addressed by binding redirects. As writing them by hand sucks, we added an [Automatic Binding Redirect Generation][abrg] feature in .NET Framework 4.5.1. This feature is opt-in. Unfortunately, it's not enabled based on target framework, but by which target framework was selected when the project was created (as the feature is turned on via an MSBuild property that is conditionally emitted by the template). In practice, this means it's mostly off you often upgrade existing projects, rather than creating new ones.\r\n\r\n[abrg]: https://docs.microsoft.com/en-us/dotnet/framework/configure-apps/how-to-enable-and-disable-automatic-binding-redirection\r\n\r\n### Missing binaries\r\n\r\nThere are two primary flavors of NuGet: `packages.config` and `PackageReference`.\r\n\r\n* With `packages.config`, each project has a config file with a flattened graph of all the NuGet dependencies. The project file in turn has direct links to all the assets. The assets are selected at install time. None of this includes indirect NuGet references coming from referenced projects.\r\n\r\n* With `PackageReference` each project contains MSBuild `PackageReference` items. The project file contains no references to any assets as the assets are selected at build time. Package restore will compute the graph of all packages, including indirect NuGet references coming from referenced projects.\r\n\r\nThe default for .NET Framework projects is `packages.config`. This ensures more compatibility because `PackageReference` doesn't support all the features that `packages.config` did, for example, PowerShell install scripts and content.\r\n\r\nThe only supported mode for SDK-style projects (.NET Core/.NET Standard) is `PackageReference`. This means that a .NET Framework project referencing a .NET Standard project ends up crossing the streams between two different NuGet models. When the .NET Standard project references NuGet packages that the .NET Framework project doesn't reference, the application ends up missing all binaries coming from those packages.\r\n\r\nWhy has this worked before? Because with` packages.config`, all dependencies are copied to each project's output folder. MSBuild copies them up from there. With `PackageReference`, we don't copy the binaries because it relies on the consuming project to see its dependencies and extract the proper asset itself. This allows the consuming project to pick up the right assets for packages that use bait & switch (which many of the .NET packages must do).\r\n\r\n### Plan\r\n\r\nThe plan is to address these issues moving forward as follows:\r\n\r\n1. **Converge on `PackageReference` for all project types**, including .NET Framework. The short-term plan for (1) is to start blocking project-to-project references in Visual Studio 15.4 that will end up crossing the streams between `packages.config` and `PackageReference`. This block is UI only; you can still edit the reference by editing the project by hand. The error message will instruct you to switch the .NET Framework project to `PackageReference` if you want to reference a .NET Standard project. Referencing .NET Standard binaries or NuGet packages will not require this, it's only about project-to-project references. In later releases, we plan on providing a converter. The challenge is that `packages.config` has features we can't offer for `PackagReference` across the board, in particular PowerShell install scripts and content. We'll need good guidance and mitigations, if applicable.\r\n\r\n2. **Ensure binding redirects are on by default**. Short term, this means we need to fix our target files to make sure we turn on automatic binding redirect generation. However, binding redirects don't work well in all scenarios, when there is no application project (like unit tests or add-ins). We need to work on a plan to bring the regular “higher wins” binding policy without binding redirects. This needs a proposal and proper vetting, but it seems we've reached the point where this is necessary.\r\n\r\n## Workarounds\r\n\r\n### Regular .NET Framework projects\r\n\r\n1. Enable [automatic binding redirects][abrg] in the root .NET Framework application.\r\n2. Make sure your root application project doesn't use `packages.config` but uses `PackageReference` for NuGet packages\r\n    * If you currently don't have `packages.config`, simply add `<RestoreProjectStyle>PackageReference</RestoreProjectStyle>` to your project file\r\n    * If you currently do have a `packages.config`, convert the contents to packages references in the project file. The syntax is like this:\r\n        - `<PackageReference Include=\"package-id\" Version=\"package-version\" />`\r\n\r\n### ASP.NET web applications and web sites\r\n\r\n1. Web applications and web sites don't support automatic binding redirect generation. In order to resolve binding conflicts, you need to double click the warning in the error list and Visual Studio will add them to your `web.config` file.\r\n2. In web application projects, you should enable `PackageReference` like mentioned above. In web sites, you cannot use `PackageReference` as there is no project file. In that case, you need to install all NuGet packages into your web site that any of the direct or indirect project references depend on.\r\n\r\n## Discussion\r\n\r\nFor a discussion, please go to [https://github.com/dotnet/standard/issues/481]"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6631010911","Type":"IssuesEvent","CreatedAt":"2017-09-25T04:21:00","Actor":"JamesCrompton-MSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14168","RelatedDescription":"Opened issue \"Workaround for Windows Workflow tracing.\" (#14168) at dotnet/coreclr","RelatedBody":"Windows workflow activities do not play nicely with EventSource's activity tracing in that hierarchy is broken between the call to the workflow start and the children of the activity. Setting the CurrentThreadActiivtyId in the root workflow activity is apparently not sufficient to restore this hierarchy either resulting in the inability to trace the workflow execution.\r\n\r\nAs a workaround it would be nice to be able to set the entire Activity in the thread instead of just the Activity Id."},{"Id":"6631007406","Type":"IssuesEvent","CreatedAt":"2017-09-25T04:18:51","Actor":"JamesCrompton-MSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14167","RelatedDescription":"Opened issue \"Activity tracing only has limited opt in capability\" (#14167) at dotnet/coreclr","RelatedBody":"Currently to opt into activity tracing you must enable the Microsoft.Tasks.Nuget provider for the appropriate keyword while capturing events. There is however a limit of 14 on the number of concurrent sessions that can listen to one provider. This means that if you have more than 14 services which each capture logs and all want activity tracing you hit failures."},{"Id":"6631004583","Type":"IssuesEvent","CreatedAt":"2017-09-25T04:17:09","Actor":"JamesCrompton-MSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14166","RelatedDescription":"Opened issue \"Compiler generated methods result in unexpected methods in the Event Source manifest.\" (#14166) at dotnet/coreclr","RelatedBody":"If LINQ is used inside a method in event source it can result in compiler generated methods which cause the EventSource to fail to load if the types on that method are not supported.\r\n\r\nFor example, a dictionary of string Tuples was processed using a ForEach LINQ statement\r\n\r\nthis.allMappedRoutes.ForEach(x => this.HttpRouteMapped(x.Key, x.Value));\r\n\r\nthis resulted in a compiler generated method of \r\n{Void <OnEventCommand>b__24_0(System.Tuple`2[System.String,System.String])}\r\n\r\nwhich caused the EventSource to fail to load with \r\nERROR: Exception in Command Processing for EventSource Microsoft-FRP-InfraEventSource: Unsupported\r\ntype KeyValuePair`2 in event source.\r\n\r\nThis happens even if the method the LINQ expression in is marked as [NonEvent]. This is confusing and difficult to understand when it happens.\r\n"},{"Id":"6630990685","Type":"IssuesEvent","CreatedAt":"2017-09-25T04:08:53","Actor":"JamesCrompton-MSFT","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14165","RelatedDescription":"Opened issue \"Activity ID generated for activity tracing is not sufficiently unique.\" (#14165) at dotnet/coreclr","RelatedBody":"When activity tracing generates a new \"GUID\" (packed path) for Start or Send events, it does not create a unique enough GUID when considering multi process and multi server scenarios. The same GUID will be generated on multiple machines and processes simultaneously making it very difficult to parse the logs using just activity ID. A combination of process ID, machine name and time range are all required in order to uniquely identify an execution thread.\r\n"},{"Id":"6630803664","Type":"PullRequestEvent","CreatedAt":"2017-09-25T02:35:22","Actor":"fiigii","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14164","RelatedDescription":"Opened pull request \"Enable Intel hardware intrinsic in debug code and reflection calls\" (#14164) at dotnet/coreclr","RelatedBody":"Separated from #14020 \r\n\r\ncc @jkotas "},{"Id":"6630473190","Type":"IssuesEvent","CreatedAt":"2017-09-24T22:59:51","Actor":"damageboy","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14163","RelatedDescription":"Opened issue \"Suggestion: Make a list of JIT optimization supported by RyuJIT\" (#14163) at dotnet/coreclr","RelatedBody":"From time to time, I learn of \"new\" (in the sense of not known to me) optimization that RyuJIT or the LegacyJIT can take.\r\n\r\nFrom a recent [example](https://github.com/dotnet/coreclr/pull/14030), I learned, for instance, that:\r\n\r\n> For BCL ValueType primitives byte, sbyte, ushort, short, uint, int, ulong, long, IntPtr, UIntPtr, Guid cast via object to the type and use .Equals directly them directly; then rely on the Jit to elide the boxing - meaning the mostly completely inline (e.g. Guid doesn't; though isn't a virtual call)\r\n\r\nOr in other words, that in this type of code-construct:\r\n```c#\r\n           if (typeof(TKey) == typeof(byte))\r\n            {\r\n                return (byte)(object)key0 == (byte)(object)key1;\r\n            }\r\n```\r\n\r\nThe JIT can omit the boxing all together.\r\n\r\nAs someone attempting to write correct yet readable code, this sort of information, of what the JIT can and can't do, is not available to the best of my knowledge.\r\n\r\nIs there a way the a definitive list could be made that describes exactly which optimizations the JIT can make and under what circumstances?"},{"Id":"6630051641","Type":"IssuesEvent","CreatedAt":"2017-09-24T17:51:54","Actor":"colgreen","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14162","RelatedDescription":"Opened issue \"Possible unnecessary null tests in ArraySortHelper<TKey,TValue> \" (#14162) at dotnet/coreclr","RelatedBody":"We can pass a secondary array to Array.Sort() like so:\r\n\r\n    Array.Sort<int,int>(keys, values, ...)\r\n\r\nThis overload of Array.Sort() is performed by the ArraySortHelper<TValue,TKey> class rather than ArraySortHelper<TKey>. However, ArraySortHelper<TValue,TKey> is still performing null tests on the 'values' array at each swap operation, which I think is redundant. \r\n\r\nPerforming a conditional branch like this at each swap (of which there may typically be thousands per call to sort()) will have a notable performance impact, so I think this is a good candidate for a performance improvement without any backwards compatibility issues."}],"ResultType":"GitHubEvent"},"CLI":{"Events":[],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6628336327","Type":"PullRequestEvent","CreatedAt":"2017-09-23T16:39:10","Actor":"eerhardt","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/508","RelatedDescription":"Opened pull request \"Apply source build patches\" (#508) at dotnet/standard","RelatedBody":"Applying the patches from source-build to the dotnet/standard repo using some property names discussed on Friday.\r\n\r\nLet me know what you think of these properties/names.\r\n\r\nI still want to make one change:  on Unix, init-tools.sh will copy the tools from the root directory.  I want to port this change to Windows as well (using the same Environment Variables for now).  But I haven't started on that work.  I can do that separately from this change."},{"Id":"6626339968","Type":"PullRequestEvent","CreatedAt":"2017-09-22T19:07:11","Actor":"ericstj","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/507","RelatedDescription":"Opened pull request \"Use a file list rather than globbing NETStandard assemblies\" (#507) at dotnet/standard","RelatedBody":"This change minimizes the amount of work done during project evaluation by directly\r\nsetting the reference items to all the files/paths we know are part of the package.\r\n\r\n/cc @weshaggard @davkean \r\n\r\n#442"},{"Id":"6623847683","Type":"IssuesEvent","CreatedAt":"2017-09-22T09:04:13","Actor":"kiran-bobade","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/506","RelatedDescription":"Opened issue \"Can't use System.Configuration.Configuration manager in a .NET Standard2.0 library on .NET FX4.6\" (#506) at dotnet/standard","RelatedBody":"I have an assembly created in **NetStandard2.0**. It reads AppSettings using **System.Configuration.ConfigurationManager**. I have installed nuget package of **System.Configuration.ConfigurationManager** with version 4.4.X which is suitable for NetStandard2.0.\r\n\r\nWhen I refer this assembly in console app (.Net Core) it is reading AppSettings properly, but when I refer this assembly in old .NetFramework(4.6.X) console app it is not working and throwing an exception.\r\n\r\nPlease see the code below.\r\n\r\n**Assembly 1: NetStandard 2.0**\r\n\r\n**Nuget: System.Configuration.ConfigurationManager 4.4.0**\r\n\r\n     using System.Configuration;\r\n\r\n     namespace Bootstrapper.Lib\r\n     {\r\n         public class Bootstrapper\r\n         {           \r\n             public void LoadAppSettings()\r\n             {\r\n                   string serachPattern = ConfigurationManager.AppSettings[\"AssemblySearchPattern\"];\r\n             }\r\n        }\r\n    }\r\n**Console App: NetFx 4.6.X**\r\n\r\n\tusing System;\r\n\tusing Bootstrapper.Lib;\r\n\tnamespace Bootstrapper.Console\r\n\t{\r\n\t  class Program\r\n\t  {\r\n\t\tstatic void Main(string[] args)\r\n\t\t{\r\n\t\t\tnew Bootstrapper().LoadAppSettings();\r\n\t\t}\r\n\t  }\r\n\t}\r\n\r\n**Exception After Run:**\r\n\r\n\t'Could not load file or assembly 'System.Configuration.ConfigurationManager, \r\n\t Version=4.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' or one \r\n\t of its dependencies. The system cannot find the file specified.'\r\n\r\n**It will work with Console App developed using .NetCore.**\r\n\r\nPlease help!!!"},{"Id":"6623489124","Type":"IssuesEvent","CreatedAt":"2017-09-22T07:27:59","Actor":"dozer75","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/505","RelatedDescription":"Opened issue \"Lots of conflicts when a project references both netstandard1.6 and netstandard2.0 projects\" (#505) at dotnet/standard","RelatedBody":"We have a classic WebApi .NET Framework project that references projects that is either netstandard1.6 and netstandard2.0.\r\n\r\nSome of our core projects uses EF Core 2.0 (which uses netstandard 2.0), while the Microsoft.AspNet.OData library references netstandard1.6. But this genereates lots of conflicts warnings on assemblies within these standards when building like these (there are more warnings than these):\r\n\r\n```\r\n1>          Encountered conflict between 'Reference:C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.0\\build\\netstandard2.0\\\\ref\\System.AppContext.dll' and 'Reference:C:\\Users\\<user>\\.nuget\\packages\\system.appcontext\\4.1.0\\ref\\netstandard1.6\\System.AppContext.dll'.  Choosing 'Reference:C:\\Program Files\\dotnet\\sdk\\NuGetFallbackFolder\\netstandard.library\\2.0.0\\build\\netstandard2.0\\\\ref\\System.AppContext.dll' because AssemblyVersion '4.1.2.0' is greater than '4.1.0.0'.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\microsoft.win32.registry\\4.0.0\\runtimes\\unix\\lib\\netstandard1.3\\Microsoft.Win32.Registry.dll' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\microsoft.win32.registry\\4.0.0\\runtimes\\win\\lib\\netstandard1.3\\Microsoft.Win32.Registry.dll'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.fedora.23-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\fedora.23-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.fedora.24-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\fedora.24-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.opensuse.13.2-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\opensuse.13.2-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.opensuse.42.1-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\opensuse.42.1-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.rhel.7-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\rhel.7-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.ubuntu.14.04-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\ubuntu.14.04-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.ubuntu.16.04-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\ubuntu.16.04-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.debian.8-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\debian.8-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\runtime.ubuntu.16.10-x64.runtime.native.system.security.cryptography.openssl\\4.3.0\\runtimes\\ubuntu.16.10-x64\\native\\System.Security.Cryptography.Native.OpenSsl.so'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\linux\\lib\\netstandard1.4\\System.Diagnostics.Process.dll' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\osx\\lib\\netstandard1.4\\System.Diagnostics.Process.dll'.  Could not determine winner due to equal file and assembly versions.\r\n1>          Encountered conflict between 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\linux\\lib\\netstandard1.4\\System.Diagnostics.Process.dll' and 'Runtime:C:\\Users\\<user>\\.nuget\\packages\\system.diagnostics.process\\4.1.0\\runtimes\\win\\lib\\netstandard1.4\\System.Diagnostics.Process.dll'.  Could not determine winner due to equal file and assembly versions.\r\n\r\n```\r\n\r\nWhat impact does these have? \r\n\r\nI thought that the idea with these standards was that they should be backward compatible? There shouldn't be any warnings for this at all. \r\n\r\nI find the whole standard thing very non-standard compatible, this is one of the problems I have mixing projects that uses different standards. So it is quite frustrating now."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6631115983","Type":"PullRequestEvent","CreatedAt":"2017-09-25T05:19:27","Actor":"dotnet-maestro-bot","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24230","RelatedDescription":"Opened pull request \"Update ProjectNTfs, ProjectNTfsTestILC to beta-25725-00, beta-25725-00, respectively (master)\" (#24230) at dotnet/corefx","RelatedBody":""},{"Id":"6630289832","Type":"IssuesEvent","CreatedAt":"2017-09-24T20:38:00","Actor":"softeering","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24229","RelatedDescription":"Opened issue \"System.Data.SqlClient throwing System.PlatformNotSupportedException when loaded via reflection\" (#24229) at dotnet/corefx","RelatedBody":"System.Data.SqlClient does not work when loading the external library (.NET Standard DLL) at runtime through reflection except if the library has been published for a specific platform (rid).\r\nTrying to execute a SQL query against a SQL Server instance throws \"System.PlatformNotSupportedException: System.Data.SqlClient is not supported on this platform\" exception.\r\n\r\nRepro steps and Visual studio solution can be found here:\r\nhttps://github.com/softeering/NETStandardSQLClientRepro\r\n\r\nI'm pretty sure this can be explained but I don't get why it doesn't work"},{"Id":"6630237196","Type":"IssuesEvent","CreatedAt":"2017-09-24T20:01:10","Actor":"tintoy","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24228","RelatedDescription":"Opened issue \"AnonymousPipeClientStream.ReadAsync does not seem to support cancellation\" (#24228) at dotnet/corefx","RelatedBody":"Hi.\r\n\r\nAfter some experimentation, it seems to me that unlike `NamedPipeClientStream`, `AnonymousPipeClientStream` (or `AnonymousPipeServerStream` for that matter) does not support cancellation (because there's no way to open the pipe in async mode and so `Stream.ReadAsync` is used instead of `PipeStream.ReadAsyncCore`). This is a little painful because it means there's no way to \"unblock\"  a pending read or write on that stream when the stream contains no data.\r\n\r\nHere's a simple repro that shows what I'm trying to do. It works for named pipes, but not for anonymous ones:\r\n\r\n```csharp\r\nNamedPipeServerStream source = new NamedPipeServerStream(\"pipe-test\", PipeDirection.Out, 1, PipeTransmissionMode.Byte, PipeOptions.Asynchronous);\r\nNamedPipeClientStream destination = new NamedPipeClientStream(\".\", \"pipe-test\", PipeDirection.In, PipeOptions.Asynchronous);\r\nawait destination.ConnectAsync();\r\n\r\nCancellationTokenSource cancellationSource = new CancellationTokenSource();\r\n\r\nbyte[] buffer = new byte[10];\r\nTask<int> readTask = destination.ReadAsync(buffer, 0, buffer.Length, cancellationSource.Token);\r\n\r\n// Right now, readTask is blocked waiting for data.\r\nTask timeout = Task.Delay(TimeSpan.FromSeconds(1));\r\nTask winner = await Task.WhenAny(readTask, timeout);\r\nAssert.Equal(timeout, winner);\r\n\r\ncancellationSource.Cancel();\r\n\r\n// readTask will now fault with TaskCanceledException\r\ntimeout = Task.Delay(TimeSpan.FromSeconds(5));\r\nwinner = await Task.WhenAny(readTask, timeout);\r\nAssert.Equal(readTask, winner);\r\n\r\n// Prove that it was canceled via the correct CancellationToken\r\nTaskCanceledException cancelled = await Assert.ThrowsAsync<TaskCanceledException>(() => readTask);\r\nAssert.Equal(cancellationSource.Token, cancelled.CancellationToken);\r\n```\r\n\r\nIs this by design, or simply something nobody has gotten around to, yet? Because it looks like it should be possible to implement by constructing the base `PipeStream` with `isAsync: true` to use the [correct code-path](https://github.com/dotnet/corefx/blob/1f434a9665d666542497250a0b4e211ce20b40df/src/System.IO.Pipes/src/System/IO/Pipes/PipeStream.cs#L164-L175)."},{"Id":"6630060375","Type":"PullRequestEvent","CreatedAt":"2017-09-24T17:58:05","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24224","RelatedDescription":"Merged pull request \"IPAddress: Change to faster algo to bigendian->littleendian flip of numbers\" (#24224) at dotnet/corefx","RelatedBody":"As per my comment in CoreFXLabs, its also identified there that the IPAddress methods are a lot slower\r\n\r\n(The version I have submitted is the (2) versions of the algo below)\r\n\r\n[Ref Issue from CoreFxLab](https://github.com/dotnet/corefxlab/pull/1779#issuecomment-331647487)\r\n\r\n|Test|AVERAGE | STDEV.S |     MIN |     MAX|\r\n|---|---|---|----|----|\r\n|MeasureReverse|  200.318 |   4.356 |  195.937 |  217.856|\r\n|MeasureReverse2|165.578 |   1.875 |  162.408 |  172.572|\r\nMeasureReverseUsingNtoH| 562.256 |   5.355 |  554.489 |  579.212|\r\n|MeasureReverseLong| 331.710 |   1.982 |  327.835 |  336.525|\r\n|MeasureReverseLong2|264.985 |   1.956 |  260.660 |  270.584|\r\n|MeasureReverseUsingNtoHLong|1241.993 |  59.340 | 1189.954 | 1361.043|\r\n"},{"Id":"6629963991","Type":"IssuesEvent","CreatedAt":"2017-09-24T16:49:19","Actor":"kazantsev-nikita","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corefx/issues/24210","RelatedDescription":"Closed issue \"Could not load file or assembly 'System.DirectoryServices.Protocols'\" (#24210) at dotnet/corefx","RelatedBody":"This issue refers to #23605. While [build system is still down](https://github.com/dotnet/corefx/issues/23605#issuecomment-330594248) I locally built copy of corefx and add `System.DirectoryServices.Protocols.dll` as reference to project. When I'm trying to create instance of  `PrincipalContext` I get an error:\r\n\r\n> BadImageFormatException: Could not load file or assembly 'System.DirectoryServices.Protocols, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'. Reference assemblies should not be loaded for execution. They can only be loaded in the Reflection-only loader context. (Exception from HRESULT: 0x80131058)\r\n> System.DirectoryServices.AccountManagement.PrincipalContext.ReadServerConfig(string serverName, ref ServerProperties properties)\r\n> System.DirectoryServices.AccountManagement.PrincipalContext.DoServerVerifyAndPropRetrieval()\r\n> System.DirectoryServices.AccountManagement.PrincipalContext..ctor(ContextType contextType, string name, string container, ContextOptions options, string userName, string password)\r\n> IdentityServer4.Quickstart.UI.AccountController+<Login>d__7.MoveNext() in AccountController.cs\r\n> +\r\n>                 var pc = new System.DirectoryServices.AccountManagement.PrincipalContext(\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> System.Runtime.CompilerServices.TaskAwaiter.GetResult()\r\n> Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker+<InvokeActionMethodAsync>d__12.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker+<InvokeNextActionFilterAsync>d__10.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Rethrow(ActionExecutedContext context)\r\n> Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\n> Microsoft.AspNetCore.Mvc.Internal.ControllerActionInvoker+<InvokeInnerFilterAsync>d__14.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeNextResourceFilter>d__22.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Rethrow(ResourceExecutedContext context)\r\n> Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker.Next(ref State next, ref Scope scope, ref object state, ref bool isCompleted)\r\n> Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeFilterPipelineAsync>d__17.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> Microsoft.AspNetCore.Mvc.Internal.ResourceInvoker+<InvokeAsync>d__15.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> Microsoft.AspNetCore.Builder.RouterMiddleware+<Invoke>d__4.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> IdentityServer4.Hosting.IdentityServerMiddleware+<Invoke>d__4.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> IdentityServer4.Hosting.FederatedSignOutMiddleware+<Invoke>d__7.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> Microsoft.AspNetCore.Authentication.AuthenticationMiddleware+<Invoke>d__6.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware+<Invoke>d__7.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> IdentityServer4.Hosting.BaseUrlMiddleware+<Invoke>d__2.MoveNext()\r\n> System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n> System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n> Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware+<Invoke>d__7.MoveNext()\r\n\r\nWhat I'm doing wrong? Where is the error in my implementation?"},{"Id":"6629889011","Type":"IssuesEvent","CreatedAt":"2017-09-24T15:56:02","Actor":"j3vans","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/issues/24227","RelatedDescription":"Opened issue \"System.Management.Automation support on .NET Core\" (#24227) at dotnet/corefx","RelatedBody":"Are there any plans to support running PowerShell runspaces/commands from within a .NET Core, this is the last thing preventing us from moving all our project to .NET Core.\r\n\r\nThanks!\r\n\r\n@terrajobst "},{"Id":"6629695325","Type":"PullRequestEvent","CreatedAt":"2017-09-24T13:45:09","Actor":"stephentoub","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corefx/pull/24212","RelatedDescription":"Merged pull request \"Use stackalloc directly into Span\" (#24212) at dotnet/corefx","RelatedBody":"We have a few places in corefx where we were stackalloc'ing into a temporary pointer and then creating a Span from that.  Now that we're using a C# compiler which supports stackalloc'ing directly into span, use that feature instead.\r\n\r\n@weshaggard, I changed dir.props to allow this in all projects by default.  Please let me know if there's a good reason not to do that.\r\n\r\ncc: @VSadov, @ahsonkhan, @geoffkizer"}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6629732128","Type":"IssuesEvent","CreatedAt":"2017-09-24T14:10:59","Actor":"davidbuckleyni","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22308","RelatedDescription":"Opened issue \"Visual Studio 2017 (26430.16) Release T4 Scaffolding crashing on model\" (#22308) at dotnet/roslyn","RelatedBody":"**Version Used**: \r\n\r\n**Steps to Reproduce**:\r\n\r\n1. Weird issue when trying to compile the following model\r\n\r\n`\r\n    public class basketheader\r\n\r\n    {\r\n        [Key]\r\n        public int id { get; set; }\r\n\r\n        public int orderId { get; set; }\r\n\r\n        public string title { get; set; }\r\n\r\n        public string description { get; set; }\r\n\r\n        public string emailBasket { get; set; }\r\n\r\n        public decimal basketTotal { get; set; }\r\n\r\n        public int currency { get; set; }\r\n\r\n \r\n        public bool isDeleted { get; set; }\r\n\r\n        public bool isActive { get; set; }\r\n\r\n        public DateTime createDated { get; set; }\r\n\r\n        public bool isSaved { get; set; }\r\n\r\n        public string notes { get; set; }\r\n\r\n   \r\n        public int basketSessionId { get; set; }\r\n\r\n       \r\n\r\n        public string EnteredBy { get; set; }\r\n\r\n\r\n        public BasketStatus BasketStatusSetting { get; set; }\r\n        public enum BasketStatus\r\n        {\r\n            Basket=0,\r\n            Order = 1,\r\n            Abandon=2,\r\n            FailedPayment=3,\r\n            Discarded=4\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n    }`\r\n\r\n**Expected Behavior**:\r\nShould Complile and product an basket header list page using asp.net mvc .4.6.2\r\n**Actual Behavior**:\r\nCrashes produces the following report in event viewer\r\n\r\nFaulting application name: devenv.exe, version: 15.0.26430.16, time stamp: 0x5968f055\r\nFaulting module name: PresentationCore.ni.dll, version: 4.7.2102.0, time stamp: 0x5937170a\r\nException code: 0xc0000005\r\nFault offset: 0x00245bdb\r\nFaulting process id: 0xaf0\r\nFaulting application start time: 0x01d33538be99ac24\r\nFaulting application path: C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\Common7\\IDE\\devenv.exe\r\nFaulting module path: C:\\WINDOWS\\assembly\\NativeImages_v4.0.30319_32\\PresentationCore\\e455d647c69dde661983d913460fef16\\PresentationCore.ni.dll\r\nReport Id: a9a59056-e157-4f3c-a1b2-23a695355c2b\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n\r\n3 Also when I try to update my version of version studio options are not available to do so."},{"Id":"6629327623","Type":"PullRequestEvent","CreatedAt":"2017-09-24T08:19:19","Actor":"AdamSpeight2008","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22307","RelatedDescription":"Opened pull request \"Should check against FULLWIDTH_LATIN_SMALL_LETTER_B\" (#22307) at dotnet/roslyn","RelatedBody":"Correcting a possible copy and paste error, should be `FULLWIDTH_LATIN_SMALL_LETTER_B`.\r\n\r\n**Customer scenario**\r\n\r\nWhat does the customer do to get into this situation, and why do we think this\r\nis common enough to address for this release.  (Granted, sometimes this will be\r\nobvious \"Open project, VS crashes\" but in general, I need to understand how\r\ncommon a scenario is)\r\n\r\n**Bugs this fixes:**\r\n\r\n(either VSO or GitHub links)\r\n\r\n**Workarounds, if any**\r\n\r\nAlso, why we think they are insufficient for RC vs. RC2, RC3, or RTW\r\n\r\n**Risk**\r\n\r\nThis is generally a measure our how central the affected code is to adjacent\r\nscenarios and thus how likely your fix is to destabilize a broader area of code\r\n\r\n**Performance impact**\r\n\r\n(with a brief justification for that assessment (e.g. \"Low perf impact because no extra allocations/no complexity changes\" vs. \"Low\")\r\n\r\n**Is this a regression from a previous update?**\r\n\r\n**Root cause analysis:**\r\n\r\nHow did we miss it?  What tests are we adding to guard against it in the future?\r\n\r\n**How was the bug found?**\r\n\r\n(E.g. customer reported it vs. ad hoc testing)\r\n\r\n**Test documentation updated?**\r\n\r\nIf this is a new non-compiler feature or a significant improvement to an existing feature, update https://github.com/dotnet/roslyn/wiki/Manual-Testing once you know which release it is targeting.\r\n"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6630610425","Type":"PullRequestEvent","CreatedAt":"2017-09-25T00:51:11","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4602","RelatedDescription":"Merged pull request \"Update how-to-build instructions to point to the released .NET Core 2.0 SDK\" (#4602) at dotnet/corert","RelatedBody":"Using the released .NET Core 2.0 SDK will give more predictable results."},{"Id":"6630605642","Type":"PullRequestEvent","CreatedAt":"2017-09-25T00:47:50","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4602","RelatedDescription":"Opened pull request \"Update how-to-build instructions to point to the released .NET Core 2.0 SDK\" (#4602) at dotnet/corert","RelatedBody":"Using the released .NET Core 2.0 SDK will give more predictable results."},{"Id":"6629779501","Type":"PullRequestEvent","CreatedAt":"2017-09-24T14:44:23","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4600","RelatedDescription":"Merged pull request \"Update how-to-build-and-run-ilcompiler-in-visual-studio.md\" (#4600) at dotnet/corert","RelatedBody":"This step was necessary for me, otherwise I received thousands of errors and wasn't too sure where to start to solve them."},{"Id":"6629320098","Type":"PullRequestEvent","CreatedAt":"2017-09-24T08:12:40","Actor":"ShalokShalom","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4601","RelatedDescription":"Opened pull request \"Add information about target platforms\" (#4601) at dotnet/corert","RelatedBody":""},{"Id":"6629185818","Type":"PullRequestEvent","CreatedAt":"2017-09-24T05:58:13","Actor":"bryanar","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4600","RelatedDescription":"Opened pull request \"Update how-to-build-and-run-ilcompiler-in-visual-studio.md\" (#4600) at dotnet/corert","RelatedBody":"This step was necessary for me, otherwise I received thousands of errors and wasn't too sure where to start to solve them."},{"Id":"6629147506","Type":"IssuesEvent","CreatedAt":"2017-09-24T05:15:48","Actor":"bryanar","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/corert/issues/4599","RelatedDescription":"Closed issue \"Opening/Building ILCompiler.sln in Visual Studio 2017 CE\" (#4599) at dotnet/corert","RelatedBody":"**Goal**:\r\nI am trying to build ILCompiler.sln in Visual Studio 2017 Community Edition, or at least get intellisense support up and running. \r\n\r\n**Problem**: \r\n\r\nA ton of:\r\n> \"CS0518 C# Predefined type 'System.Object' is not defined or imported\"\r\n\r\nI'm probably missing something trivial, can anyone help?"},{"Id":"6629055907","Type":"PullRequestEvent","CreatedAt":"2017-09-24T03:33:06","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4598","RelatedDescription":"Merged pull request \"Enable x86 build\" (#4598) at dotnet/corert","RelatedBody":"Contributes to #4589."},{"Id":"6628858867","Type":"IssuesEvent","CreatedAt":"2017-09-24T00:00:03","Actor":"bryanar","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/issues/4599","RelatedDescription":"Opened issue \"Opening ILCompiler.sln in Visual Studio 2017\" (#4599) at dotnet/corert","RelatedBody":"**Goal**:\r\nI am trying to build ILCompiler.sln in Visual Studio 2017 Community Edition, or at least get intellisense support up and running. \r\n\r\n**Problem**: \r\n\r\nA ton of:\r\n> \"CS0518 C# Predefined type 'System.Object' is not defined or imported\"\r\n\r\nI'm probably missing something trivial, can anyone help?"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"911357565769936896","CreatedAt":"2017-09-22T22:32:30+00:00","UserScreenname":"dotnet","Text":".NET Core September 2017 Update — macOS High Sierra Support https://t.co/k9gJ5jFIN8","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":43,"FavoriteCount":23,"RawContent":null},{"Id":"911015945291919360","CreatedAt":"2017-09-21T23:55:01+00:00","UserScreenname":"dotnet","Text":"Last one! Happening now on .NET Fundamentals Track @ #dotNETConf: Learn how to use #FSharp to write front-end &amp; bac… https://t.co/OH8cMAcq4I","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":25,"FavoriteCount":14,"RawContent":null},{"Id":"911005750410960896","CreatedAt":"2017-09-21T23:14:31+00:00","UserScreenname":"dotnet","Text":"PSA: .NET Framework September Update - known issues published https://t.co/1yk2xwnrvP","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":22,"FavoriteCount":11,"RawContent":null},{"Id":"911000845860458498","CreatedAt":"2017-09-21T22:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Get started w/ #FSharp, .NET Core &amp; #VSCode. Watch… https://t.co/VRkwBvSNPU","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":29,"FavoriteCount":13,"RawContent":null},{"Id":"910988157197344768","CreatedAt":"2017-09-21T22:04:36+00:00","UserScreenname":"dotnet","Text":".NET Framework 4.7.1 Accessibility and WPF Improvements https://t.co/eZLFQxhlLj","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":65,"FavoriteCount":52,"RawContent":null},{"Id":"910985746386911237","CreatedAt":"2017-09-21T21:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Introducing Razor Pages - Join the session here:… https://t.co/NTQg6urmhQ","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":17,"FavoriteCount":6,"RawContent":null},{"Id":"910970647702065152","CreatedAt":"2017-09-21T20:55:02+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: The #CSharp async await workout - a hands-on coding dem… https://t.co/JDvyBkgvww","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":49,"FavoriteCount":18,"RawContent":null},{"Id":"910955546496335873","CreatedAt":"2017-09-21T19:55:01+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: Solid Design Patterns for Mere Mortals - see some… https://t.co/iFgxAVURUP","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":49,"FavoriteCount":11,"RawContent":null},{"Id":"910940451754188801","CreatedAt":"2017-09-21T18:55:02+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: #CSharp Part 2 - What's New. Learn the structure and co… https://t.co/dSPE4e9EUE","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":38,"FavoriteCount":18,"RawContent":null},{"Id":"910925349013348352","CreatedAt":"2017-09-21T17:55:02+00:00","UserScreenname":"dotnet","Text":"Happening now on the .NET Fundamentals Track @ #dotNETConf: C# Part 1 - Introduction to C# - Join us:… https://t.co/af45Jelz1W","Source":"<a href=\"https://prod2.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod2</a>","RetweetCount":44,"FavoriteCount":23,"RawContent":null}]}},"RunOn":"2017-09-25T05:30:18.7961569Z","RunDurationInMilliseconds":6433}