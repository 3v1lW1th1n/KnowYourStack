{"Data":{"Blog":{"FeedItems":[{"Title":"Welcome to the New Blog Template for ASP.NET Developers","PublishedOn":"2017-09-08T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"By Juliet Daniel, Lucas Isaza, and Uma Lakshminarayan Have you always wanted to build a blog or other web application but haven&#8217;t had the time or educational resources to learn? With our blog template, available in our GitHub repo, you can create your web application fast and effortlessly, and even learn to master the new... <a aria-label=\"read more about Welcome to the New Blog Template for ASP.NET Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/08/welcome-to-the-new-blog-template-for-asp-net-developers/","RawContent":null},{"Title":"Getting Started with Windows Containers","PublishedOn":"2017-09-07T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Containers provide a way of running an application in a controlled environment, isolated from other applications running on the machine, and from the underlying infrastructure. They are a cost-effective way of abstracting away the machine, ensuring that the application runs in the same conditions, from development, to test, to production. Containers started in Linux, as... <a aria-label=\"read more about Getting Started with Windows Containers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/09/07/getting-started-with-windows-containers/","RawContent":null},{"Title":"ASP.NET Core 2.0 Features","PublishedOn":"2017-08-25T00:00:00","CommentsCount":17,"FacebookCount":0,"Summary":"Last week we announced the release of ASP.NET Core 2.0 and described some top new features, including Razor Pages, new and updated templates, and Application Insights integration. In this blog post we are going to dig into more details of features in 2.0. This list is not exhaustive or in any particular order, but highlights... <a aria-label=\"read more about ASP.NET Core 2.0 Features\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/25/asp-net-core-2-0-features-1/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0","PublishedOn":"2017-08-14T00:00:00","CommentsCount":43,"FacebookCount":0,"Summary":"The ASP.NET team is proud to announce general availability of ASP.NET Core 2.0.  This release features compatibility with .NET Core 2.0, tooling support in Visual Studio 2017 version 15.3, and the new Razor Pages user-interface design paradigm.  For a full list of updates, you can read the release notes and you can check the list... <a aria-label=\"read more about Announcing ASP.NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/08/14/announcing-asp-net-core-2-0/","RawContent":null},{"Title":"Development time IIS support for ASP.NET Core Applications","PublishedOn":"2017-07-14T00:00:00","CommentsCount":13,"FacebookCount":0,"Summary":"With a recent update to Visual Studio 2017, we have added support for debugging ASP.NET Core applications against IIS. This blog post will walk you through enabling this feature and setting up your project to use this feature. Getting Started To get started: You need to install Visual Studio 2017 (version 15.3) Preview (it will... <a aria-label=\"read more about Development time IIS support for ASP.NET Core Applications\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/07/13/development-time-iis-support-for-asp-net-core-applications/","RawContent":null},{"Title":"WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication","PublishedOn":"2017-06-28T00:00:00","CommentsCount":2,"FacebookCount":0,"Summary":"With the recent update to the WCF Service Reference tool in the VS Marketplace, support has been added for downloading metadata for a web service where the metadata exchange (MEX) endpoint has been secured with IIS authentication. The purpose of MEX endpoints is to allow clients to discover the service capabilities, including security aspects of... <a aria-label=\"read more about WCF Web Service Reference Provider – Metadata Exchange Endpoint Authentication\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/wcf-web-service-reference-mex-authentication/","RawContent":null},{"Title":"Introducing ASP.NET Core 2.0 Preview 2","PublishedOn":"2017-06-28T00:00:00","CommentsCount":41,"FacebookCount":0,"Summary":"At Build 2017, we released an initial preview version of ASP.NET Core 2.0.  Over the last two months we have incorporated your feedback and added a number of new features.  We now have a Preview 2 version of the ASP.NET Core 2.0 framework and Visual Studio tools for you to try.  In this post, we... <a aria-label=\"read more about Introducing ASP.NET Core 2.0 Preview 2\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/06/28/introducing-asp-net-core-2-0-preview-2/","RawContent":null},{"Title":"Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers","PublishedOn":"2017-05-10T00:00:00","CommentsCount":25,"FacebookCount":0,"Summary":"The ASP.NET team is pleased to share the first preview version of the ASP.NET Core 2.0 framework.  In this post, we’ll look at the new features and changes to the web framework that were announced at the Build 2017 keynote and sessions.  We will also look at some other updates that were published for ASP.NET... <a aria-label=\"read more about Announcing ASP.NET Core 2.0.0-Preview1 and Updates for .NET Web Developers\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/aspnet-2-preview-1/","RawContent":null},{"Title":"Visual Studio 2017 Tools for Azure Functions","PublishedOn":"2017-05-10T00:00:00","CommentsCount":104,"FacebookCount":0,"Summary":"Visual Studio 2017 Tools for Azure Functions are now available as part of the Azure development workload starting in the Visual Studio 2017 15.3 release. These tools: Enable creating pre-compiled C# functions that bring better cold start performance than script based functions, and opens the entire eco-system of Visual Studio tools for class libraries including code... <a aria-label=\"read more about Visual Studio 2017 Tools for Azure Functions\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/05/10/azure-function-tools-for-visual-studio-2017/","RawContent":null},{"Title":"JWT Validation and Authorization in ASP.NET Core","PublishedOn":"2017-04-27T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Post has moved here... <a aria-label=\"read more about JWT Validation and Authorization in ASP.NET Core\" href=\"https://blogs.msdn.microsoft.com/webdev/2017/04/27/jwt-validation-and-authorization-in-asp-net-core-2/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/webdev/2017/04/27/jwt-validation-and-authorization-in-asp-net-core-2/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6587007037","Type":"WatchEvent","CreatedAt":"2017-09-13T19:24:04","Actor":"jayslife","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6586958463","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:13:04","Actor":"jayslife","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2155#issuecomment-329268051","RelatedDescription":"Commented on issue \"Change IConfigureNamedOptions<OpenIdConnectOptions> to IOptionsMonitor<OpenIdConnectOptions>\" (#2155) at aspnet/Home","RelatedBody":"I am getting the same error as Edward: \r\n`Unhandled Exception: System.InvalidOperationException: Provide Authority, MetadataAddress, Configuration, or ConfigurationManager to OpenIdConnectOptions\r\n   at Microsoft.AspNetCore.Authentication.OpenIdConnect.OpenIdConnectMiddleware..ctor(RequestDelegate next, IDataProtectionProvider dataProtectionProvider, ILoggerFactory loggerFactory, UrlEncoder encoder, IServiceProvider services, IOptions`1 sharedOptions, IOptions`1 options, HtmlEncoder htmlEncoder)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)\r\n   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)\r\n   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass3_0.<UseMiddleware>b__0(RequestDelegate next)\r\n   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build()\r\n   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()`\r\n\r\nBut this only occurs when trying to run my site from the command line via dotnet run. I also don't have a custom IOptionsMonitor.\r\n\r\nHere is my \r\n`app.UseOpenIdConnectAuthentication(new OpenIdConnectOptions\r\n            {\r\n                AuthenticationScheme = \"oidc\",\r\n                SignInScheme = \"Cookies\",\r\n\r\n                Authority = baseUrl,\r\n                //should be true in prod!\r\n                RequireHttpsMetadata = false,\r\n\r\n                ClientId = \"customclient\",\r\n                ClientSecret = \"secretissafewithme\",\r\n\r\n                ResponseType = \"code id_token\",\r\n                Scope = {\"api1\", \"offline_access\"},\r\n                GetClaimsFromUserInfoEndpoint = true,\r\n\r\n                SaveTokens = true,\r\n\r\n                TokenValidationParameters = new Microsoft.IdentityModel.Tokens.TokenValidationParameters\r\n                {\r\n                    NameClaimType = JwtClaimTypes.Name,\r\n                    RoleClaimType = JwtClaimTypes.Role,\r\n                },\r\n                //UseTokenLifetime = true,\r\n                Events = new OpenIdConnectEvents\r\n                {\r\n                    // Called when authentication is completed. This is the last event, assuming that authentication succeeds. \r\n                    // After this event is handled, the user is signed into the app.\r\n                    OnTicketReceived = async trc =>\r\n                    {\r\n                        await Task.Run(() =>\r\n                        {\r\n                            // store both tokens in the claims/cookie.\r\n                            var identity = trc.Ticket.Principal.Identity as ClaimsIdentity;\r\n                            identity.AddClaims(new[]\r\n                            {\r\n                                new Claim(\"access_token\", trc.Ticket.Properties.GetTokenValue(\"access_token\")),\r\n                                new Claim(\"refresh_token\", trc.Ticket.Properties.GetTokenValue(\"refresh_token\")),\r\n                                new Claim(\"expires_at\", trc.Ticket.Properties.GetTokenValue(\"expires_at\")),\r\n                            });\r\n\r\n                            // cookie is good for multiple requests\r\n                            trc.Properties.IsPersistent = true;\r\n                            // set 12h expiration\r\n                            trc.Properties.ExpiresUtc = DateTimeOffset\r\n                                .Parse(trc.Ticket.Properties.GetTokenValue(\"expires_at\")).AddHours(12);\r\n                        });\r\n                    },\r\n                },\r\n            });`"},{"Id":"6585637846","Type":"WatchEvent","CreatedAt":"2017-09-13T14:37:34","Actor":"ableji","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6585442679","Type":"WatchEvent","CreatedAt":"2017-09-13T14:02:21","Actor":"wangyi040534","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6584735945","Type":"WatchEvent","CreatedAt":"2017-09-13T11:27:48","Actor":"ctysingh","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6582798038","Type":"ForkEvent","CreatedAt":"2017-09-13T01:04:54","Actor":"nicolastakashi","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/nicolastakashi/Home","RelatedDescription":"Forked aspnet/Home to nicolastakashi/Home","RelatedBody":null},{"Id":"6582487130","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T22:58:22","Actor":"bricelam","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2194#issuecomment-329007616","RelatedDescription":"Commented on issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"I used my omnipotent SO privileges to undelete my answer and expand it a bit."},{"Id":"6582437657","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T22:41:25","Actor":"bricelam","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2194#issuecomment-329004605","RelatedDescription":"Commented on issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"Well, I tried to point you in the right direction, but my answer got deleted... Here's the exact code you can copy and paste into your application.\r\n``` csharp\r\npublic class DesignTimeDbContextFactory : IDesignTimeDbContextFactory<SampleArchContext>\r\n{    \r\n    public SampleArchContext CreateDbContext(string[] args)\r\n    {\r\n        var host = new WebHostBuilder()\r\n            .UseKestrel()\r\n            .UseContentRoot(Directory.GetCurrentDirectory())\r\n            .ConfigureAppConfiguration((hostingContext, config) =>\r\n            {\r\n                var env = hostingContext.HostingEnvironment;\r\n                config.SetBasePath(env.ContentRootPath);\r\n                config.AddInMemoryCollection(new[]\r\n                       {\r\n                         new KeyValuePair<string,string>(\"the-key\", \"the-value\")\r\n                       })\r\n                       .AddJsonFile(\"appsettings.json\", reloadOnChange: true, optional: false)\r\n                       .AddJsonFile($\"appsettings.{env}.json\", optional: true)\r\n                       .AddEnvironmentVariables();\r\n            })\r\n            .ConfigureLogging((hostingContext, logging) =>\r\n            {\r\n                logging.AddDebug();\r\n                logging.AddConsole();\r\n            })\r\n            .UseIISIntegration()\r\n            .UseDefaultServiceProvider((context, options) =>\r\n            {\r\n                options.ValidateScopes = context.HostingEnvironment.IsDevelopment();\r\n            })\r\n            .UseStartup<Startup>()\r\n            .Build();\r\n            \r\n        return host.Services.CreateScope().ServiceProvider.GetRequiredService<SampleArchContext>();\r\n    }\r\n}\r\n```\r\nIf you follow the [guidance](https://docs.microsoft.com/en-us/aspnet/core/migration/1x-to-2x/#update-main-method-in-programcs) I pointed to and split the top half of your `Program.Main()` into a `BuildWebHost()` method, EF will do the rest for you (i.e. you could remove the custom `IDesignTimeDbContextFactory` implementation).\r\n\r\nTo directly answer you're question, you can't inject services into `IDesignTimeDbContextFactory`. It is a static entry point into the application (like `Program.Main()`) and the service container must be configured from scratch."},{"Id":"6582117539","Type":"WatchEvent","CreatedAt":"2017-09-12T21:11:37","Actor":"Plac3hold3r","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6581812188","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T19:59:25","Actor":"pranavkm","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2194#issuecomment-328967523","RelatedDescription":"Commented on issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"@bricelam looks like @mohammad-hth is attempting to get to `IHostingEnvironment` in a `IDesignTimeDbContextFactory`. What's the recommended pattern here?"},{"Id":"6581222880","Type":"WatchEvent","CreatedAt":"2017-09-12T17:33:14","Actor":"devmonte","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6581018985","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T16:45:41","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2193#issuecomment-328912994","RelatedDescription":"Commented on issue \"Jwt Authorization .NET Core 2.0 always return Unauthorized (HTTP 401)\" (#2193) at aspnet/Home","RelatedBody":"What is creating the token? Can you cut and paste an actual token so we can decode it? It's hard to transcribe from a screenshot."},{"Id":"6580986837","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T16:38:50","Actor":"blowdart","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328910892","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"These sorts of issues belong in [aspnet/security](https://github.com/aspnet/Security). Please ask questions about authentication there."},{"Id":"6580979049","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T16:37:12","Actor":"CharlesOkwuagwu","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328910395","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"@lorenz31 please share the CodeProject link.\r\nThanks"},{"Id":"6579726732","Type":"WatchEvent","CreatedAt":"2017-09-12T12:36:06","Actor":"vivekmishra-sft","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6579339520","Type":"IssuesEvent","CreatedAt":"2017-09-12T11:00:36","Actor":"manikandan05","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Home/issues/2014","RelatedDescription":"Closed issue \"How to make the entire application as unobtrusive supported mode?\" (#2014) at aspnet/Home","RelatedBody":"I have searched about unobtrusive support in ASP.NET Core application. But unfortunately, nothing get from online.\r\n\r\nMy question is, if there is common unobtrusive feature (apart from validation) exists or not like as MVC5?\r\n\r\nIf its available means, how to make us entire application in unobtrusive mode!.\r\n\r\nCould please share some common details about this!\r\n\r\nThanks."},{"Id":"6578755694","Type":"WatchEvent","CreatedAt":"2017-09-12T08:47:22","Actor":"etrupja","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6578016594","Type":"IssuesEvent","CreatedAt":"2017-09-12T05:04:44","Actor":"LFT09KA","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2195","RelatedDescription":"Opened issue \"JUSTE 1990(E) 2.10.F06F.064Y4 -7LU2RETABLOOKap.µ-klrtlzh9oit.rdk\" (#2195) at aspnet/Home","RelatedBody":"To address your issues more quickly, please open the issue in the most appropriate repository. These are some of the most common repos:\r\n\r\nCommon ASP.NET and Entity Framework repos and projects:\r\n\r\n - Documentation: https://github.com/aspnet/Docs\r\n - MVC: https://github.com/aspnet/Mvc\r\n - Entity Framework Core: https://github.com/aspnet/EntityFramework\r\n - Entity Framework 6: https://github.com/aspnet/EntityFramework6\r\n - SignalR: https://github.com/aspnet/SignalR\r\n - ASP.NET Core in Docker: https://github.com/aspnet/aspnet-docker\r\n - Microsoft.NET.Sdk.Web: https://github.com/aspnet/websdk\r\n - Kestrel HTTP Server: https://github.com/aspnet/KestrelHttpServer\r\n - ASP.NET Katana: https://github.com/aspnet/AspNetKatana\r\n - and more! See a full list here: https://github.com/aspnet\r\n\r\nOther common projects:\r\n\r\n - NuGet: https://github.com/NuGet/home\r\n - .NET Core CLI, SDK, or runtime: https://github.com/dotnet/core\r\n - Visual Studio: https://developercommunity.visualstudio.com\r\n - Visual Studio Code: https://github.com/microsoft/vscode\r\n - Omnisharp (C# support for VS Code): https://github.com/omnisharp/omnisharp-vscode\r\n"},{"Id":"6578011806","Type":"WatchEvent","CreatedAt":"2017-09-12T05:02:21","Actor":"LFT09KA","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6577841725","Type":"ForkEvent","CreatedAt":"2017-09-12T03:40:40","Actor":"ascode","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/ascode/Home","RelatedDescription":"Forked aspnet/Home to ascode/Home","RelatedBody":null},{"Id":"6577841653","Type":"WatchEvent","CreatedAt":"2017-09-12T03:40:38","Actor":"ascode","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6577806630","Type":"ForkEvent","CreatedAt":"2017-09-12T03:25:47","Actor":"luququ","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/luququ/Home","RelatedDescription":"Forked aspnet/Home to luququ/Home","RelatedBody":null},{"Id":"6576286680","Type":"WatchEvent","CreatedAt":"2017-09-11T19:14:07","Actor":"al-hadi","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6576180900","Type":"ForkEvent","CreatedAt":"2017-09-11T18:49:39","Actor":"jdoddeap","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/jdoddeap/Home","RelatedDescription":"Forked aspnet/Home to jdoddeap/Home","RelatedBody":null},{"Id":"6575725999","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T17:05:28","Actor":"lucassklp","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2193#issuecomment-328594063","RelatedDescription":"Commented on issue \"Jwt Authorization .NET Core 2.0 always return Unauthorized (HTTP 401)\" (#2193) at aspnet/Home","RelatedBody":"No, there is not any message. That exception is only displayed into output."},{"Id":"6575505492","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T16:18:15","Actor":"Tratcher","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2193#issuecomment-328580903","RelatedDescription":"Commented on issue \"Jwt Authorization .NET Core 2.0 always return Unauthorized (HTTP 401)\" (#2193) at aspnet/Home","RelatedBody":"Is there a message for that exception?"},{"Id":"6574431005","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T12:52:26","Actor":"lorenz31","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328519515","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"@f1xxxer I understand. By the way, I already got it working. I just set aside using Asp.Net Identity for the built-in registration/login and just used the reference I found a code project."},{"Id":"6573554635","Type":"WatchEvent","CreatedAt":"2017-09-11T09:14:14","Actor":"ariefabubakar","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Home","RelatedBody":null},{"Id":"6573428340","Type":"IssuesEvent","CreatedAt":"2017-09-11T08:45:31","Actor":"mohammad-hth","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Home/issues/2194","RelatedDescription":"Opened issue \"No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered\" (#2194) at aspnet/Home","RelatedBody":"I have a problem when I want to fire add-migration command for an ASP MVC Core 2 project.\r\n\r\n> No service for type 'Microsoft.AspNetCore.Hosting.IHostingEnvironment' has been registered.\r\n\r\n[You can see more information in stackoverflow](https://stackoverflow.com/questions/46150730/asp-net-core-2-no-service-for-type-microsoft-aspnetcore-hosting-ihostingenviron)"},{"Id":"6573243292","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T07:58:38","Actor":"AlexOliinyk1","Repository":"aspnet/Home","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Home/issues/2103#issuecomment-328449189","RelatedDescription":"Commented on issue \"Asp.Net Core 2.0 Jwt Bearer Authentication works only for first request\" (#2103) at aspnet/Home","RelatedBody":"@f1xxxer  can you help in this issue ? https://github.com/aspnet/Identity/issues/1422\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"SignalR":{"Events":[{"Id":"6587455188","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:08:51","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/853#issuecomment-329297603","RelatedDescription":"Commented on issue \".NET Client logs every single message as information\" (#853) at aspnet/SignalR","RelatedBody":"2e695c935ec0fe8271f9ea618892c40c835160f9"},{"Id":"6587440158","Type":"IssuesEvent","CreatedAt":"2017-09-13T21:05:19","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/853","RelatedDescription":"Closed issue \".NET Client logs every single message as information\" (#853) at aspnet/SignalR","RelatedBody":"Similar to https://github.com/aspnet/SignalR/issues/821 we need to change the .NET client to reduce the default amount of spam. There's also no overload that lets you specify the log level. Ideally you would do this:\r\n\r\n```C#\r\nvar connection = new HubConnectionBuilder()\r\n    .WithUrl(\"http://localhost:5000/cache\")\r\n    .WithMessagePackProtocol()\r\n    .WithConsoleLogger(LogLevel.Debug)\r\n    .WithTransportType(TransportType.WebSockets)\r\n    .Build();\r\n```\r\n\r\nThe current overload taking `ILoggerFactory` doesn't make much sense.\r\n\r\n> info: Microsoft.AspNetCore.Sockets.Client.WebSocketsTransport[0]\r\n      09/12/2017 00:59:09: Connection Id ec09831d-efcb-4bc4-8b89-34800a6e0912: Starting transport. Transfer mode: Text.\r\ninfo: Microsoft.AspNetCore.Sockets.Client.WebSocketsTransport[6]\r\n      09/12/2017 00:59:09: Connection Id ec09831d-efcb-4bc4-8b89-34800a6e0912: Starting the send loop.\r\ninfo: Microsoft.AspNetCore.Sockets.Client.WebSocketsTransport[2]\r\n      09/12/2017 00:59:09: Connection Id ec09831d-efcb-4bc4-8b89-34800a6e0912: Starting receive loop.\r\nConnected!\r\nhey\r\ninfo: Microsoft.AspNetCore.SignalR.Client.HubConnection[4]\r\n      Sending Invocation '1'.\r\ninfo: Microsoft.AspNetCore.SignalR.Client.HubConnection[5]\r\n      Sending Invocation '1' completed.\r\ninfo: Microsoft.AspNetCore.Sockets.Client.WebSocketsTransport[11]\r\n      09/12/2017 00:59:12: Connection Id ec09831d-efcb-4bc4-8b89-34800a6e0912: Passing message to application. Payload s\r\nize: 44.\r\ninfo: Microsoft.AspNetCore.SignalR.Client.HubConnection[4]\r\n      Sending Invocation '2'.\r\ninfo: Microsoft.AspNetCore.SignalR.Client.HubConnection[5]\r\n      Sending Invocation '2' completed.\r\ninfo: Microsoft.AspNetCore.Sockets.Client.WebSocketsTransport[11]\r\n      09/12/2017 00:59:12: Connection Id ec09831d-efcb-4bc4-8b89-34800a6e0912: Passing message to application. Payload s\r\nize: 47.\r\n1\r\n\r\n/cc @moozzyk @muratg "},{"Id":"6587397583","Type":"PushEvent","CreatedAt":"2017-09-13T20:55:22","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/11cc57ee0e4ebc38c2cf5877b1df19e4e686f446...b093f2b279a24e47ef4bf74c1a90d4d29495586c","RelatedDescription":"Pushed to refs/heads/dev at aspnet/SignalR","RelatedBody":null},{"Id":"6587395092","Type":"PushEvent","CreatedAt":"2017-09-13T20:54:47","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/2e695c935ec0fe8271f9ea618892c40c835160f9...d226b20756b18b28b73534d9d6c4bf585f0fe840","RelatedDescription":"Pushed to refs/heads/rel/1.0.0-alpha1 at aspnet/SignalR","RelatedBody":null},{"Id":"6587395085","Type":"PullRequestEvent","CreatedAt":"2017-09-13T20:54:47","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/874","RelatedDescription":"Merged pull request \"Rename With/GetTransportType to With/GetTransport\" (#874) at aspnet/SignalR","RelatedBody":""},{"Id":"6587377995","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:50:46","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/875#issuecomment-329293016","RelatedDescription":"Commented on issue \"IHttpConnectionOptions and IHubConnectionOptions aren't exposed\" (#875) at aspnet/SignalR","RelatedBody":"In general we need to rethink our exporting strategy. At the moment it is quite inconsistent. In some cases we export all types from a file/module while in other cases we re-export. We re-export if there are types in the file/module which should not exposed publicly but we should review if this is consistent and if there is a better way of doing this. "},{"Id":"6586887952","Type":"IssuesEvent","CreatedAt":"2017-09-13T18:57:45","Actor":"anurse","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/876","RelatedDescription":"Opened issue \"Use names in EventIds for logging\" (#876) at aspnet/SignalR","RelatedBody":"In https://github.com/aspnet/SignalR/blob/11cc57ee0e4ebc38c2cf5877b1df19e4e686f446/src/Microsoft.AspNetCore.SignalR.Client.Core/Internal/SignalRClientLoggerExtensions.cs we use `int`s for the `eventId` parameter, but the `EventId` type that is used can actually also support holding a name. Names are easier to query and inspect in structure log storage. So, as an example, a `LoggerMessage.Define` should change to something like this:\r\n\r\n```csharp\r\nLoggerMessage.Define<...>(LogLevel.Trace, new EventId(1, \"[Event Name]\", \"Preparing blocking invocation '{invocationId}' of '{target}', with return type '{returnType}' and {argumentCount} argument(s).\");\r\n```\r\n\r\n(Event ID names don't need a prefix because `EventId` is only unique within a Logger, so there's no need to prefix it)."},{"Id":"6586768983","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T18:30:42","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/875#issuecomment-329256680","RelatedDescription":"Commented on issue \"IHttpConnectionOptions and IHubConnectionOptions aren't exposed\" (#875) at aspnet/SignalR","RelatedBody":"For now we treat protocols as an internal thing (that's why IHubProtocol is in the Internal namespace)"},{"Id":"6586696180","Type":"WatchEvent","CreatedAt":"2017-09-13T18:14:24","Actor":"MaximTkachenko","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/SignalR","RelatedBody":null},{"Id":"6586590686","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:50:39","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/868#issuecomment-329245750","RelatedDescription":"Commented on issue \"Rationale behind supporting Server-Sent Events and Long Polling\" (#868) at aspnet/SignalR","RelatedBody":"https fixes it."},{"Id":"6586558436","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:43:22","Actor":"KPixel","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/868#issuecomment-329243748","RelatedDescription":"Commented on issue \"Rationale behind supporting Server-Sent Events and Long Polling\" (#868) at aspnet/SignalR","RelatedBody":"I think a related issue is that proxies can mess with websocket connections, and a common workaround is to just use https/wss."},{"Id":"6586484567","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:26:32","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/875#issuecomment-329239134","RelatedDescription":"Commented on issue \"IHttpConnectionOptions and IHubConnectionOptions aren't exposed\" (#875) at aspnet/SignalR","RelatedBody":"How do you write your own `BetterMessagePack` protocol then? Or implement `SuperFastUDP` connection?"},{"Id":"6586476464","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:24:49","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/875#issuecomment-329238676","RelatedDescription":"Commented on issue \"IHttpConnectionOptions and IHubConnectionOptions aren't exposed\" (#875) at aspnet/SignalR","RelatedBody":"I am not sure if IConnection and IHubProtocol need to be exposed. "},{"Id":"6586471348","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:23:35","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/875#issuecomment-329238352","RelatedDescription":"Commented on issue \"IHttpConnectionOptions and IHubConnectionOptions aren't exposed\" (#875) at aspnet/SignalR","RelatedBody":"Also `IConnection` and `IHubProtocol` aren't exposed."},{"Id":"6586468796","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:23:04","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/868#issuecomment-329238228","RelatedDescription":"Commented on issue \"Rationale behind supporting Server-Sent Events and Long Polling\" (#868) at aspnet/SignalR","RelatedBody":"One more datapoint - some corporate proxies block websockets."},{"Id":"6586410861","Type":"IssuesEvent","CreatedAt":"2017-09-13T17:09:45","Actor":"BrennanConroy","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/issues/875","RelatedDescription":"Opened issue \"IHttpConnectionOptions and IHubConnectionOptions aren't exposed\" (#875) at aspnet/SignalR","RelatedBody":"There is no way to new up a class that implements either `IHttpConnectionOptions` or `IHubConnectionOptions` because they aren't exported. Looks like we just need to add them to the index.ts file."},{"Id":"6586376148","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:01:51","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/871#issuecomment-329232423","RelatedDescription":"Commented on issue \"Pipeline modules for cross-cutting concerns \" (#871) at aspnet/SignalR","RelatedBody":"> For parameter validation, I was considering adding DataAnnotation validation at a cross-cutting level.\r\n\r\nWhat sort of application data are you posting to your hubs? \r\n\r\n> Another potential use-case could be adding per-invocation authorization.\r\n\r\nAlready works per invocation and per hub connection.\r\n\r\n> I am more interested in understanding the roadmap than trying to convince you to add this feature\r\n\r\nYes that's great! I have no doubt this feature is generally useful (thats why we did it initially) but I want to see some concrete examples before we add anything else."},{"Id":"6586328969","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T16:51:39","Actor":"bromanko","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/871#issuecomment-329229490","RelatedDescription":"Commented on issue \"Pipeline modules for cross-cutting concerns \" (#871) at aspnet/SignalR","RelatedBody":"No major complaints from me. I am more interested in understanding the roadmap than trying to convince you to add this feature. Logging has been the only thing I immediately needed and as you mentioned, this is being included. \r\n\r\nFor parameter validation, I was considering adding DataAnnotation validation at a cross-cutting level. \r\n\r\nAnother potential use-case could be adding per-invocation authorization. From the best I can tell, right now authorization is handled only at the hub level.\r\n\r\n"},{"Id":"6586312517","Type":"PullRequestEvent","CreatedAt":"2017-09-13T16:47:58","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/SignalR/pull/874","RelatedDescription":"Opened pull request \"Rename With/GetTransportType to With/GetTransport\" (#874) at aspnet/SignalR","RelatedBody":""},{"Id":"6586307284","Type":"CreateEvent","CreatedAt":"2017-09-13T16:46:47","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/tree/pawelka/rename-transporttype","RelatedDescription":"Created branch \"pawelka/rename-transporttype\" at aspnet/SignalR","RelatedBody":null},{"Id":"6586290460","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T16:43:01","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/860#issuecomment-329226986","RelatedDescription":"Commented on issue \"Issue with disposing the HttpConnection\" (#860) at aspnet/SignalR","RelatedBody":"Some notes before we remove one of these. The Dispose in the DisposeAsync is for the cases when the connection did not start successfully (e.g. failure during negotiation) or if the user called `DisposeAsync` between negotiation and starting the transport. In these cases we won't have the continuation on channel completion. The dispose in the channel completion continuation is for cases when the connection was closed abruptly and the user did not call DisposeAsync."},{"Id":"6586221395","Type":"IssuesEvent","CreatedAt":"2017-09-13T16:27:53","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/SignalR/issues/870","RelatedDescription":"Closed issue \"What is a typescript signalr-client for Microsoft.AspNetCore.SignalR.Client 1.0.0-alpha1-26986 ?\" (#870) at aspnet/SignalR","RelatedBody":""},{"Id":"6586221384","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T16:27:53","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/870#issuecomment-329222719","RelatedDescription":"Commented on issue \"What is a typescript signalr-client for Microsoft.AspNetCore.SignalR.Client 1.0.0-alpha1-26986 ?\" (#870) at aspnet/SignalR","RelatedBody":"Not sure what you are asking. README shows how to install the ts client."},{"Id":"6586192929","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T16:21:45","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/SignalR/issues/867#issuecomment-329220970","RelatedDescription":"Commented on issue \"UglifyJs compile exception with @aspnet/signalr-client \" (#867) at aspnet/SignalR","RelatedBody":"This is because of Uglify not supporting ES6. See also https://github.com/aspnet/SignalR/issues/729 (which contains the same workaround you have)"},{"Id":"6586191651","Type":"PushEvent","CreatedAt":"2017-09-13T16:21:29","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/71bdd676b5e9cf9498f8f0f4d591aa1844ebfb90...11cc57ee0e4ebc38c2cf5877b1df19e4e686f446","RelatedDescription":"Pushed to refs/heads/dev at aspnet/SignalR","RelatedBody":null},{"Id":"6586180767","Type":"PushEvent","CreatedAt":"2017-09-13T16:19:13","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/5d7b706c4d955afa6299bfc8266ee4fbacd1d963...71bdd676b5e9cf9498f8f0f4d591aa1844ebfb90","RelatedDescription":"Pushed to refs/heads/dev at aspnet/SignalR","RelatedBody":null},{"Id":"6586175540","Type":"PushEvent","CreatedAt":"2017-09-13T16:18:08","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/72568acff06e4ecb9755c19f6c717e69148512d8...2e695c935ec0fe8271f9ea618892c40c835160f9","RelatedDescription":"Pushed to refs/heads/rel/1.0.0-alpha1 at aspnet/SignalR","RelatedBody":null},{"Id":"6586175484","Type":"PullRequestEvent","CreatedAt":"2017-09-13T16:18:07","Actor":"davidfowl","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/869","RelatedDescription":"Merged pull request \"Made tweaks to .NET client logging API\" (#869) at aspnet/SignalR","RelatedBody":"- Removed ConnectionFactoryDelegate and used Func<IConnection>\r\n- Changed WithLogger that accepts ILoggerFactory to WithLoggerFactory\r\n- Made UseLogger configure the existing ILoggerFactory or create a LoggerFactory\r\n- Add support for setting the log level for console logs\r\n- Updated tests"},{"Id":"6586171327","Type":"PushEvent","CreatedAt":"2017-09-13T16:17:15","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/SignalR/compare/dbe4b4025bb9518f816f4762bf53c1f8ae02407e...72568acff06e4ecb9755c19f6c717e69148512d8","RelatedDescription":"Pushed to refs/heads/rel/1.0.0-alpha1 at aspnet/SignalR","RelatedBody":null},{"Id":"6586171295","Type":"PullRequestEvent","CreatedAt":"2017-09-13T16:17:14","Actor":"moozzyk","Repository":"aspnet/SignalR","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/SignalR/pull/865","RelatedDescription":"Merged pull request \"Appending version to browser javascript file names\" (#865) at aspnet/SignalR","RelatedBody":""}],"ResultType":"GitHubEvent"},"Mvc":{"Events":[{"Id":"6587593340","Type":"PushEvent","CreatedAt":"2017-09-13T21:44:15","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/b89396b586a148bfe97a5f47cb0439b81a7fd6cb...4ca6cb867b2f6076c8904a3b2518194562d7780e","RelatedDescription":"Pushed to refs/heads/kichalla/request-form-limits at aspnet/Mvc","RelatedBody":null},{"Id":"6587587002","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:42:33","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/4604#issuecomment-329305434","RelatedDescription":"Commented on issue \"ObjectResult executor should log the type of the value being written out\" (#4604) at aspnet/Mvc","RelatedBody":"@rynowak there's a PR for this that I assigned to you to review."},{"Id":"6587586369","Type":"PushEvent","CreatedAt":"2017-09-13T21:42:23","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/e32479a2e76f0f15e938a922acf2f8f16d02f07e...b89396b586a148bfe97a5f47cb0439b81a7fd6cb","RelatedDescription":"Pushed to refs/heads/kichalla/request-form-limits at aspnet/Mvc","RelatedBody":null},{"Id":"6587582551","Type":"PushEvent","CreatedAt":"2017-09-13T21:41:22","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/7912d5ef91dc5bf69f4a75bd2cb7c7154924943d...e32479a2e76f0f15e938a922acf2f8f16d02f07e","RelatedDescription":"Pushed to refs/heads/kichalla/request-form-limits at aspnet/Mvc","RelatedBody":null},{"Id":"6587554297","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:33:51","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6812#issuecomment-329303525","RelatedDescription":"Commented on issue \"Added a model binder for handling Enum types. [Fixes #6329] Why don't…\" (#6812) at aspnet/Mvc","RelatedBody":"🆙 📅 "},{"Id":"6587547269","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:32:04","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6768#issuecomment-329303117","RelatedDescription":"Commented on issue \"JsonResultExecuter logs type of result.\" (#6768) at aspnet/Mvc","RelatedBody":"@mistakenot thanks for the PR! @rynowak can you review?"},{"Id":"6587536932","Type":"PushEvent","CreatedAt":"2017-09-13T21:29:27","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/0767f3828a95f1a6b3b40033a59ffba492e7470b...3047b313f228346c7ae30642fc4e01c0eeef9cf0","RelatedDescription":"Pushed to refs/heads/kichalla/enumtype-binding at aspnet/Mvc","RelatedBody":null},{"Id":"6587406252","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:57:21","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6689#issuecomment-329294741","RelatedDescription":"Commented on issue \"Formatters: BufferedMediaTypeFormatter and MediaTypeFormatter \" (#6689) at aspnet/Mvc","RelatedBody":"Closing because there are no plans to implement this. It seems that there exist other ways to do what's being discussed here."},{"Id":"6587406225","Type":"IssuesEvent","CreatedAt":"2017-09-13T20:57:21","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6689","RelatedDescription":"Closed issue \"Formatters: BufferedMediaTypeFormatter and MediaTypeFormatter \" (#6689) at aspnet/Mvc","RelatedBody":"Trying to implement a custom HalFormatter (HATEOAS)  for Web Api in ASP.Net core 2.0 but none of these 2 types seem to be available.  Package references set to Microsoft.AspnetCore.All.  Am i missing something? Were these retired?"},{"Id":"6587355321","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T20:45:30","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6812#discussion_r138734391","RelatedDescription":"Commented on pull request \"Added a model binder for handling Enum types. [Fixes #6329] Why don't…\" (#6812) at aspnet/Mvc","RelatedBody":"yes, true..but i didn't want to get the 'underlying' type in the code again and just accept what the binderprovider gives already"},{"Id":"6587338833","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:41:34","Actor":"Eilon","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6796#issuecomment-329290575","RelatedDescription":"Commented on issue \"Performance Issues with Html.DisplayFor()\" (#6796) at aspnet/Mvc","RelatedBody":"@mitchelsellers thanks for the report. This definitely sounds quite slow.\r\n\r\n@pranavkm - can you profile this at least in 2.0 and see where the slowdown is? I would have thought that just about everything is super-duper cached, so rendering a total of ~1000 fields w/ DisplayFor should not take 2 - 4 seconds..."},{"Id":"6587155178","Type":"ForkEvent","CreatedAt":"2017-09-13T19:58:22","Actor":"Lasie989","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/Lasie989/Mvc","RelatedDescription":"Forked aspnet/Mvc to Lasie989/Mvc","RelatedBody":null},{"Id":"6587155007","Type":"WatchEvent","CreatedAt":"2017-09-13T19:58:19","Actor":"Lasie989","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Mvc","RelatedBody":null},{"Id":"6587154857","Type":"WatchEvent","CreatedAt":"2017-09-13T19:58:17","Actor":"Lasie989","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Mvc","RelatedBody":null},{"Id":"6587154665","Type":"WatchEvent","CreatedAt":"2017-09-13T19:58:15","Actor":"Lasie989","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Mvc","RelatedBody":null},{"Id":"6587031901","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T19:25:31","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6812#discussion_r138715621","RelatedDescription":"Commented on pull request \"Added a model binder for handling Enum types. [Fixes #6329] Why don't…\" (#6812) at aspnet/Mvc","RelatedBody":"&hellip;_Nullable**Flags**EnumType"},{"Id":"6587031921","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T19:24:56","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6812#discussion_r138715498","RelatedDescription":"Commented on pull request \"Added a model binder for handling Enum types. [Fixes #6329] Why don't…\" (#6812) at aspnet/Mvc","RelatedBody":"&hellip;_NonNullable**Flags**EnumType"},{"Id":"6587031898","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T19:21:02","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6812#discussion_r138714703","RelatedDescription":"Commented on pull request \"Added a model binder for handling Enum types. [Fixes #6329] Why don't…\" (#6812) at aspnet/Mvc","RelatedBody":"Suggest `Gets or sets an indication whether the model binding system will bind undefined values to enumeration types.` Note the formal \"enumeration types\" because that's suitable for translation."},{"Id":"6587031974","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T19:14:01","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6812#discussion_r138713095","RelatedDescription":"Commented on pull request \"Added a model binder for handling Enum types. [Fixes #6329] Why don't…\" (#6812) at aspnet/Mvc","RelatedBody":"No need to store the `Type`. Passed in the `ModelBindingContext` every time. That is, the constructor should only pass the `modelType` parameter to `base(...)`."},{"Id":"6586939522","Type":"IssuesEvent","CreatedAt":"2017-09-13T19:08:58","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6817","RelatedDescription":"Closed issue \"Add `TagHelperOutput` extension methods for `class` value manipulation\" (#6817) at aspnet/Mvc","RelatedBody":"Many thanks to @Elfocrash for his work in #6565. That PR adds the following extension methods:\r\n``` c#\r\npublic static void AddClass(\r\n    this TagHelperOutput tagHelperOutput,\r\n    string classValue,\r\n    HtmlEncoder htmlEncoder) { }\r\npublic static void RemoveClass(\r\n    this TagHelperOutput tagHelperOutput,\r\n    string classValue,\r\n    HtmlEncoder htmlEncoder) { }\r\n```\r\n\r\n----\r\n\r\nIssue created in arrears to track work done in the 2.1.0 milestone."},{"Id":"6586939515","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:08:58","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6817#issuecomment-329267042","RelatedDescription":"Commented on issue \"Add `TagHelperOutput` extension methods for `class` value manipulation\" (#6817) at aspnet/Mvc","RelatedBody":"db397d81"},{"Id":"6586933531","Type":"IssuesEvent","CreatedAt":"2017-09-13T19:07:36","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Mvc/issues/6817","RelatedDescription":"Opened issue \"Add `TagHelperOutput` extension methods for `class` value manipulation\" (#6817) at aspnet/Mvc","RelatedBody":"Many thanks to @Elfocrash for his work in #6565. That PR adds the following extension methods:\r\n``` c#\r\npublic static void AddClass(\r\n    this TagHelperOutput tagHelperOutput,\r\n    string classValue,\r\n    HtmlEncoder htmlEncoder) { }\r\npublic static void RemoveClass(\r\n    this TagHelperOutput tagHelperOutput,\r\n    string classValue,\r\n    HtmlEncoder htmlEncoder) { }\r\n```\r\n\r\n----\r\n\r\nIssue created in arrears to track work done in the 2.1.0 milestone."},{"Id":"6586890011","Type":"PushEvent","CreatedAt":"2017-09-13T18:58:14","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/4f18d99d021b33141a8747d63b2303040c8bd9dc...db397d812b425dc18ffdb639529c4c1790375cad","RelatedDescription":"Pushed to refs/heads/dev at aspnet/Mvc","RelatedBody":null},{"Id":"6586889825","Type":"PullRequestEvent","CreatedAt":"2017-09-13T18:58:12","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6565","RelatedDescription":"Merged pull request \"TagHelperOutput extension methods for class value manipulation\" (#6565) at aspnet/Mvc","RelatedBody":"It feels like the class attribute is a bit unique in a sense that it is the most used attribute and it can have multiple values. However there is no way to simply add a value or remove one when you process a tag helper.\r\n\r\nI wrote the AddClass and RemoveClass methods to do it in a simple way. Let me know what you think about this and if you are happy with it I will write the unit tests and do any amends (probably AddClasses/RemoveClasses with params string[] ?)"},{"Id":"6586888675","Type":"PushEvent","CreatedAt":"2017-09-13T18:57:55","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/9c4acf54b2df1db40efa48028d321f51d1d9b127...0767f3828a95f1a6b3b40033a59ffba492e7470b","RelatedDescription":"Pushed to refs/heads/kichalla/enumtype-binding at aspnet/Mvc","RelatedBody":null},{"Id":"6586835096","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T18:44:28","Actor":"dougbu","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6801#discussion_r138705907","RelatedDescription":"Commented on pull request \"Added new extension methods to configure all MVC localization services\" (#6801) at aspnet/Mvc","RelatedBody":"Please add similar `<remarks>` in the new `MvcLocalizationMvcBuilderExtensions` methods as well as the overloads below that you missed."},{"Id":"6586709595","Type":"PushEvent","CreatedAt":"2017-09-13T18:17:24","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Mvc/compare/2d24dee5bff7a568dbf4639346117e9ebf0616b1...9c4acf54b2df1db40efa48028d321f51d1d9b127","RelatedDescription":"Pushed to refs/heads/kichalla/enumtype-binding at aspnet/Mvc","RelatedBody":null},{"Id":"6586719092","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T23:08:10","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6812#discussion_r138489227","RelatedDescription":"Commented on pull request \"Added a model binder for handling Enum types. [Fixes #6329] Why don't…\" (#6812) at aspnet/Mvc","RelatedBody":"Good catch!"},{"Id":"6586719071","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T21:24:35","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6812#discussion_r138470262","RelatedDescription":"Commented on pull request \"Added a model binder for handling Enum types. [Fixes #6329] Why don't…\" (#6812) at aspnet/Mvc","RelatedBody":"For example, the type converter doesn't throw when a integer value is used and for whose value there is not corresponding name in the enum. This Enum.IsDefined check verifies that there is a name for that backing value."},{"Id":"6586719074","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-12T21:22:16","Actor":"kichalla","Repository":"aspnet/Mvc","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Mvc/pull/6812#discussion_r138469689","RelatedDescription":"Commented on pull request \"Added a model binder for handling Enum types. [Fixes #6329] Why don't…\" (#6812) at aspnet/Mvc","RelatedBody":"Sure"}],"ResultType":"GitHubEvent"},"Identity":{"Events":[{"Id":"6587169617","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T20:01:44","Actor":"natemcmaster","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1425#issuecomment-329280544","RelatedDescription":"Commented on issue \"Cookie expiration time configured in `ConfigureApplicationCookie` ignored by Identity\" (#1425) at aspnet/Identity","RelatedBody":"Can you try changing your code to this?\r\n```\r\ncfg.ExpireTimeSpan= TimeSpan.FromDays(15);\r\n```\r\n\r\nAs mentioned in the xmldocs, Cookie.Expiration is ignored on CookieAuthenticationOptions.\r\n\r\nhttps://github.com/aspnet/Security/blob/a53bf093a7d86b35e019c80515c92d7626982325/src/Microsoft.AspNetCore.Authentication.Cookies/CookieAuthenticationOptions.cs#L62\r\n\r\nPossible duplicate of https://github.com/aspnet/Security/issues/1293"},{"Id":"6587037552","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:31:02","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/pull/1391#issuecomment-329272419","RelatedDescription":"Commented on issue \"Added RavenDB identity provider.\" (#1391) at aspnet/Identity","RelatedBody":"Sure"},{"Id":"6587034303","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:30:18","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/pull/1391#issuecomment-329272239","RelatedDescription":"Commented on issue \"Added RavenDB identity provider.\" (#1391) at aspnet/Identity","RelatedBody":"@blowdart ok with this change?"},{"Id":"6587021439","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:27:25","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1401#issuecomment-329271551","RelatedDescription":"Commented on issue \"AddIdentity should set DefaultScheme and DefaultChallengeScheme only\" (#1401) at aspnet/Identity","RelatedBody":"Basically once we do https://github.com/aspnet/Identity/issues/1409 we switch templates over to using that in 2.1, and just deprecate AddIdentity in 3.0 but leave it alone in 2.x"},{"Id":"6587009924","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:24:43","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1401#issuecomment-329270897","RelatedDescription":"Commented on issue \"AddIdentity should set DefaultScheme and DefaultChallengeScheme only\" (#1401) at aspnet/Identity","RelatedBody":"I think we might be stuck with AddIdentity for 2.x, and we should maybe switch to the `AddIdentityCore<TUser>` method which decouples authentication from identity"},{"Id":"6587009472","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:24:37","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1401#issuecomment-329270877","RelatedDescription":"Commented on issue \"AddIdentity should set DefaultScheme and DefaultChallengeScheme only\" (#1401) at aspnet/Identity","RelatedBody":"This feels more like fixing a bug than a breaking change to me, but @Eilon should weigh in."},{"Id":"6587003935","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:23:19","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1401#issuecomment-329270544","RelatedDescription":"Commented on issue \"AddIdentity should set DefaultScheme and DefaultChallengeScheme only\" (#1401) at aspnet/Identity","RelatedBody":"Well it makes Identity play nicer with the new defaults we added, of course the tradeoff is that people don't really know the side effects of calling AddIdentity, so changing them in 2.1 might result in different effective defaults for apps which will cause another wave of migration issues.\r\n\r\nFor example:\r\n\r\nToday:\r\n```\r\n   services.AddAuthentication(o => o.DefaultAuthenticateScheme = \"Bearer\");\r\n   services.AddIdentity() // DefaultAuthenticateScheme = \"Identity\", so context.User = identity cookie\r\n```\r\n\r\nAfter this change:\r\n\r\n```\r\n   services.AddAuthentication(o => o.DefaultAuthenticateScheme = \"Bearer\");\r\n   services.AddIdentity() // DefaultScheme = \"Identity\", but explicit \"Bearer\" wins so context.User = Bearer\r\n```\r\n\r\nSo it might have been the correct thing to do...but...2.1 migration pain if we change it now"},{"Id":"6586969086","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:15:34","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1401#issuecomment-329268641","RelatedDescription":"Commented on issue \"AddIdentity should set DefaultScheme and DefaultChallengeScheme only\" (#1401) at aspnet/Identity","RelatedBody":"Is it a good breaking change? :)"},{"Id":"6586954469","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T19:12:10","Actor":"HaoK","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1401#issuecomment-329267835","RelatedDescription":"Commented on issue \"AddIdentity should set DefaultScheme and DefaultChallengeScheme only\" (#1401) at aspnet/Identity","RelatedBody":"Is this something we can do in 2.1, as its kinda a breaking change...\r\n\r\ncc @blowdart @ajcvickers @davidfowl @Tratcher "},{"Id":"6585381951","Type":"ForkEvent","CreatedAt":"2017-09-13T13:51:14","Actor":"MabinzaN","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/MabinzaN/Identity","RelatedDescription":"Forked aspnet/Identity to MabinzaN/Identity","RelatedBody":null},{"Id":"6585275759","Type":"ForkEvent","CreatedAt":"2017-09-13T13:31:02","Actor":"AnarionII","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/AnarionII/Identity","RelatedDescription":"Forked aspnet/Identity to AnarionII/Identity","RelatedBody":null},{"Id":"6584737757","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T11:28:18","Actor":"B-Esmaili","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1425#issuecomment-329138994","RelatedDescription":"Commented on issue \"Cookie expiration time configured in `ConfigureApplicationCookie` ignored by Identity\" (#1425) at aspnet/Identity","RelatedBody":"I went through the documentation and did as mentioned but still i get logged out after 30minutes."},{"Id":"6584249635","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T09:29:57","Actor":"Awd60","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1416#issuecomment-329112195","RelatedDescription":"Commented on issue \"How to get current user for web API request ?\" (#1416) at aspnet/Identity","RelatedBody":"Issue was closed by my mistake"},{"Id":"6584248242","Type":"IssuesEvent","CreatedAt":"2017-09-13T09:29:38","Actor":"Awd60","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1416","RelatedDescription":"Reopened issue \"How to get current user for web API request ?\" (#1416) at aspnet/Identity","RelatedBody":"How to get current user for web API request ?\r\n this example does not work\r\nvar claims = ((ClaimsIdentity)User.Identity).Claims;"},{"Id":"6584202257","Type":"IssuesEvent","CreatedAt":"2017-09-13T09:19:36","Actor":"Awd60","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1416","RelatedDescription":"Closed issue \"How to get current user for web API request ?\" (#1416) at aspnet/Identity","RelatedBody":"How to get current user for web API request ?\r\n this example does not work\r\nvar claims = ((ClaimsIdentity)User.Identity).Claims;"},{"Id":"6584202242","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T09:19:36","Actor":"Awd60","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1416#issuecomment-329109461","RelatedDescription":"Commented on issue \"How to get current user for web API request ?\" (#1416) at aspnet/Identity","RelatedBody":"We are using standard Azure authentication.\r\n![authentication](https://user-images.githubusercontent.com/30531953/30369536-28a18852-9875-11e7-9d4a-ecf732bab8c6.PNG)\r\n![authentication1](https://user-images.githubusercontent.com/30531953/30369535-2890f2d0-9875-11e7-895f-88bd496a2c2e.PNG)\r\nApplication itself does not handle authentication and rely for Azure .\r\n\r\n"},{"Id":"6584074176","Type":"IssuesEvent","CreatedAt":"2017-09-13T08:51:54","Actor":"AlexOliinyk1","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1422","RelatedDescription":"Closed issue \"asp.net core 2.0 + angular 4  + jwt authorization \" (#1422) at aspnet/Identity","RelatedBody":"Hi All\r\n\r\nI can't find way how configure my application using bearer token authorization, I used this article as example https://wildermuth.com/2017/08/19/Two-AuthorizationSchemes-in-ASP-NET-Core-2\r\n\r\nI'm implemented it successful   on the empty application. But after moving logic to my already created asp.net core 2 and anngular  4 using angular cli. \r\n\r\nI'm got error like this '404 not found ' for more details  https://github.com/nbarbettini/SimpleTokenProvider/issues/7 \r\n![image](https://user-images.githubusercontent.com/10448723/30217173-0639af84-94be-11e7-9e0c-27ec6463e54b.png)\r\n\r\nBut when I removed authorize attribute this route working. \r\n\r\nProblem is I can't configure the server as I think, because I saw as token was passed to the server in the header. \r\n\r\n\r\nmy startup looks like this \r\n\r\n![image](https://user-images.githubusercontent.com/10448723/30217331-7be106b0-94be-11e7-9e37-98e77d68a89c.png)\r\n![image](https://user-images.githubusercontent.com/10448723/30217347-87e40c46-94be-11e7-813e-00a2ee1afee0.png) \r\n![image](https://user-images.githubusercontent.com/10448723/30264088-0b47be3e-96e0-11e7-8a39-d2faaff43f91.png)\r\n\r\n\r\n\r\n\r\n"},{"Id":"6584074026","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T08:51:52","Actor":"AlexOliinyk1","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1422#issuecomment-329102222","RelatedDescription":"Commented on issue \"asp.net core 2.0 + angular 4  + jwt authorization \" (#1422) at aspnet/Identity","RelatedBody":" This example from article is worked for me, it seems I something was missed from article above, before crearted this issue."},{"Id":"6583492141","Type":"WatchEvent","CreatedAt":"2017-09-13T06:08:30","Actor":"myesn","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6581530416","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T18:48:53","Actor":"VahidN","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1425#issuecomment-328946276","RelatedDescription":"Commented on issue \"Cookie expiration time configured in `ConfigureApplicationCookie` ignored by Identity\" (#1425) at aspnet/Identity","RelatedBody":"Have you configured your server to store the cookie decryption keys permanently? if not, whenever the server restarts or the app pool restarts, your users will have to login again.\r\n[More info](https://docs.microsoft.com/en-us/aspnet/core/publishing/iis#data-protection)"},{"Id":"6581336320","Type":"IssuesEvent","CreatedAt":"2017-09-12T17:59:51","Actor":"B-Esmaili","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Identity/issues/1425","RelatedDescription":"Opened issue \"Cookie expiration time configured in `ConfigureApplicationCookie` ignored by Identity\" (#1425) at aspnet/Identity","RelatedBody":"Here is my configuration for identity cookie :\r\n```\r\nservices.ConfigureApplicationCookie(cfg =>\r\n            {\r\n                cfg.Cookie.Name = \"application_ms_state\";\r\n                cfg.Cookie.Expiration = TimeSpan.FromDays(10);\r\n                cfg.SlidingExpiration = true;\r\n            });\r\n```\r\nthe problem is despite the value i provide in  `Expiration` the generated cookie has expiration day equals to 15 days.as you can see in following image \r\n\r\n![cookie](https://user-images.githubusercontent.com/9152515/30340920-602ed1ec-9809-11e7-80c1-32f1c480be11.png)\r\n\r\ncookies is generated for 15 days.now the next problem is same cookie expires in almost half an hour.could anyone clarify what is problem with my configuration?"},{"Id":"6580601714","Type":"IssuesEvent","CreatedAt":"2017-09-12T15:23:10","Actor":"lugrugzo","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Identity/issues/1421","RelatedDescription":"Closed issue \"Support for two-factor when using Jwt\" (#1421) at aspnet/Identity","RelatedBody":"Here is my Startup.cs\r\n\r\n``` cs\r\nservices\r\n                .AddAuthentication(options =>\r\n                {\r\n                    options.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                    options.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n                })\r\n                .AddJwtBearer(cfg =>\r\n                {\r\n                    cfg.RequireHttpsMetadata = false;\r\n                    cfg.SaveToken = true;\r\n                    cfg.TokenValidationParameters = new TokenValidationParameters\r\n                    {\r\n                        ValidIssuer = Configuration[\"Tokens:Issuer\"],\r\n                        ValidAudience = Configuration[\"Tokens:Issuer\"],\r\n                        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(Configuration[\"Tokens:Key\"]))\r\n                    };\r\n                });\r\n```\r\n\r\nMy login action:\r\n\r\n``` cs\r\n[HttpPost]\r\n        public async Task<object> Login([FromBody] LoginViewModel model, string returnUrl = null)\r\n        {\r\n            var result = await _signInManager.PasswordSignInAsync(model.Email, model.Password, false, false);\r\n            \r\n            if (result.Succeeded)\r\n            {\r\n                var user = await _userManager.GetUserAsync(User) ;\r\n                return GenerateToken(model.Email, user.Id);\r\n            }\r\n            \r\n            if (result.RequiresTwoFactor)\r\n            {\r\n                \r\n                var user = await _signInManager.GetTwoFactorAuthenticationUserAsync();\r\n                var result2 = await _signInManager.TwoFactorAuthenticatorSignInAsync(model.TwoFactorCode, false, false);\r\n\r\n                if (result2.Succeeded)\r\n                {\r\n                    return GenerateToken(model.Email, user.Id);\r\n                }\r\n                else\r\n                {\r\n                    return BadRequest(\"Invalid two-factor token\");\r\n                }\r\n            }\r\n            \r\n            return BadRequest(\"Invalid login attempt\");\r\n        }\r\n```\r\n\r\nGenerateToken():\r\n\r\n``` cs\r\nprivate object GenerateToken(string email, string userId)\r\n        {\r\n            var claims = new[]\r\n            {\r\n                new Claim(JwtRegisteredClaimNames.Sub, email),\r\n                new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()),\r\n                new Claim(new ClaimsIdentityOptions().UserIdClaimType, userId), \r\n            };\r\n\r\n            var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_config[\"Tokens:Key\"]));\r\n            var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256);\r\n\r\n            var token = new JwtSecurityToken(\r\n                issuer: _config[\"Tokens:Issuer\"],\r\n                audience: _config[\"Tokens:Issuer\"],\r\n                claims: claims,\r\n                expires: DateTime.Now.AddDays(30),\r\n                signingCredentials: creds\r\n            );\r\n\r\n            return new JwtSecurityTokenHandler().WriteToken(token);\r\n        }\r\n```\r\n\r\nIf I enable two-factor login for user, `GetTwoFactorAuthenticationUserAsync()` returns `null`.\r\n\r\nWhen testing example MVC app that comes with --auth option, I saw it's putting a cookie named `Identity.TwoFactorUserId` when logging if two-factor login enabled, how can I reproduce this using Web Api & Jwt? \r\n\r\nThanks."},{"Id":"6580320971","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T14:33:17","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1421#issuecomment-328871750","RelatedDescription":"Commented on issue \"Support for two-factor when using Jwt\" (#1421) at aspnet/Identity","RelatedBody":"The 2fa in this case should really be at the JWT issuance point, that's where login takes place, that's what needs protected."},{"Id":"6580315563","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T14:32:19","Actor":"blowdart","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1422#issuecomment-328871495","RelatedDescription":"Commented on issue \"asp.net core 2.0 + angular 4  + jwt authorization \" (#1422) at aspnet/Identity","RelatedBody":"You can't put authorize on the login endpoint, that's kind of defeating the purpose - it needs to allow anonymous access so you can actually login. You don't really say what the problem is though."},{"Id":"6579741874","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T12:39:34","Actor":"jcmordan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328840068","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"@hey-red when I do that a got this error:\r\n\r\n```\r\nInvalidOperationException: Unable to resolve service for type 'Microsoft.AspNetCore.Identity.IUserLockoutStore`1[School360.Models.User]' while attempting to activate 'School360.Api.Controllers.AccountsController'.\r\nMicrosoft.Extensions.Internal.ActivatorUtilities.GetService(IServiceProvider sp, Type type, Type requiredBy, bool isDefaultParameterRequired)\r\n```\r\n\r\nTrying to solve it a Add the UserStorage<TUser> like this:\r\n\r\n`builder.AddUserStore<UserStore<User>>();`\r\n\r\nBut then I got this error:\r\n\r\n`InvalidOperationException: Unable to resolve service for type 'Microsoft.EntityFrameworkCore.DbContext' while attempting to activate 'Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`1[User]'.`\r\n\r\nI had to add DbContext like this:\r\n\r\n`services.TryAddScoped<DbContext, MyDbContext>();`\r\n\r\nbut I don't know if this is ok!\r\n\r\n"},{"Id":"6578508669","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T07:49:50","Actor":"N41m0r","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328770569","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"@hey-red Thx, using CheckPasswordSignInAsync solved my problem."},{"Id":"6578137538","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T05:57:43","Actor":"hey-red","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328745626","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"@jcmordan \r\nYou can achieve it like this:\r\n\r\n```C#\r\nvar user = await _userManager.FindByNameAsync(userName);\r\nif (user == null)\r\n{\r\n      return BadRequest(\"Invalid credentials\");\r\n }\r\n\r\nvar result = await _signInManager.CheckPasswordSignInAsync(user, password, true);\r\nif (!result.Succeeded)\r\n{\r\n      return BadRequest(\"Invalid credentials\");\r\n}\r\n\r\n// Create token with user claims..\r\n```\r\n\r\n"},{"Id":"6577669418","Type":"WatchEvent","CreatedAt":"2017-09-12T02:29:57","Actor":"390493386","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null},{"Id":"6577406728","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T00:41:42","Actor":"jcmordan","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Identity/issues/1423#issuecomment-328697789","RelatedDescription":"Commented on issue \"JWT Bearer Authentication : Set-Cookie in header response filled\" (#1423) at aspnet/Identity","RelatedBody":"@hey-red @HaoK  What do you mean by:\r\n\r\n> With JWT you will have to manage the authentication yourself. \r\n\r\nI can't use _signInManager.PasswordSignInAsync anymore? what is the alternative?"},{"Id":"6577166380","Type":"WatchEvent","CreatedAt":"2017-09-11T23:05:30","Actor":"tparviainen","Repository":"aspnet/Identity","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Identity","RelatedBody":null}],"ResultType":"GitHubEvent"},"Kestrel":{"Events":[{"Id":"6587614958","Type":"PullRequestEvent","CreatedAt":"2017-09-13T21:50:06","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/1977","RelatedDescription":"Closed pull request \"Implement regression tests\" (#1977) at aspnet/KestrelHttpServer","RelatedBody":"Tests the following issues:\r\n\r\n- TFS-221190\r\n- TFS-221148\r\n- TFS-221191\r\n\r\n@natemcmaster @halter73 @muratg"},{"Id":"6587614873","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:50:04","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/1977#issuecomment-329307048","RelatedDescription":"Commented on issue \"Implement regression tests\" (#1977) at aspnet/KestrelHttpServer","RelatedBody":"Closing this in favor of #2060."},{"Id":"6587614113","Type":"DeleteEvent","CreatedAt":"2017-09-13T21:49:50","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":null,"RelatedDescription":"Deleted branch \"cesarbs/regression-tests\" at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6587613951","Type":"PushEvent","CreatedAt":"2017-09-13T21:49:47","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/1e465e9643eee56f90087d08413a6814e5b6f43c...da7bc24eece472cee44775a70bcac3b14022b7b2","RelatedDescription":"Pushed to refs/heads/dev at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6587613884","Type":"PullRequestEvent","CreatedAt":"2017-09-13T21:49:46","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2060","RelatedDescription":"Merged pull request \"Follow-up to #1977\" (#2060) at aspnet/KestrelHttpServer","RelatedBody":"@muratg I'm opening this new PR to handle the changes to #1977 as requested.\r\n\r\ncc @rjmooney"},{"Id":"6587590450","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:43:28","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2047#issuecomment-329305629","RelatedDescription":"Commented on issue \"Error -32 EPIPE broken pipe\" (#2047) at aspnet/KestrelHttpServer","RelatedBody":"https://github.com/aspnet/KestrelHttpServer/issues/1978#issuecomment-319838683"},{"Id":"6587450604","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:07:49","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2047#issuecomment-329297342","RelatedDescription":"Commented on issue \"Error -32 EPIPE broken pipe\" (#2047) at aspnet/KestrelHttpServer","RelatedBody":"Can you share a repro app?"},{"Id":"6587436994","Type":"PushEvent","CreatedAt":"2017-09-13T21:04:33","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/bbced22d28c35267ecda86875a17c43852cd87c0...25a4f4591f472376026191d81a8d9d86109d3a5c","RelatedDescription":"Pushed to refs/heads/cesarbs/regression-tests at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6587429280","Type":"WatchEvent","CreatedAt":"2017-09-13T21:02:42","Actor":"CharlesOkwuagwu","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6587398171","Type":"PullRequestEvent","CreatedAt":"2017-09-13T20:55:30","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2060","RelatedDescription":"Opened pull request \"Follow-up to #1977\" (#2060) at aspnet/KestrelHttpServer","RelatedBody":"@muratg I'm opening this new PR to handle the changes to #1977 as requested.\r\n\r\ncc @rjmooney"},{"Id":"6587393054","Type":"CreateEvent","CreatedAt":"2017-09-13T20:54:19","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/tree/cesarbs/regression-tests","RelatedDescription":"Created branch \"cesarbs/regression-tests\" at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6587358209","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T20:46:11","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/1977#discussion_r138734561","RelatedDescription":"Commented on pull request \"Implement regression tests\" (#1977) at aspnet/KestrelHttpServer","RelatedBody":"Actually I'll leave it in its own test."},{"Id":"6587340777","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T20:42:02","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/1977#discussion_r138733522","RelatedDescription":"Commented on pull request \"Implement regression tests\" (#1977) at aspnet/KestrelHttpServer","RelatedBody":"I'm adding `{ \"GET /pub/WWW/\", \".\" }` to `HttpParsingData.HostHeaderData`, so this will get tested via `RequestTests.MatchesValidRequestTargetAndHostHeader`."},{"Id":"6587329896","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T20:39:31","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/1977#discussion_r138732853","RelatedDescription":"Commented on pull request \"Implement regression tests\" (#1977) at aspnet/KestrelHttpServer","RelatedBody":"I'm adding `\"[0x00]\"` to `HttpParsingData.MethodWithNonTokenCharData`, then this will be tested via `BadHttpRequestTests.TestInvalidRequestLines` as well."},{"Id":"6587319699","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T20:37:11","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/1977#discussion_r138732249","RelatedDescription":"Commented on pull request \"Implement regression tests\" (#1977) at aspnet/KestrelHttpServer","RelatedBody":"I'm adding `\"GET /\\r\\nLocation:http://www.contoso.com/ HTTP/1.1\\r\\n\"` to `HttpParsingData.RequestLineInvalidData`, then this will get tested by `BadHttpRequestTests.TestInvalidRequestLines`."},{"Id":"6587096832","Type":"IssuesEvent","CreatedAt":"2017-09-13T19:45:03","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/2055","RelatedDescription":"Closed issue \"[Patch 1.1.3] Flaky test ListenerPrimaryTests.NonListenerPipeConnectionsAreLoggedAndIgnored\" (#2055) at aspnet/KestrelHttpServer","RelatedBody":"```\r\nSystem.InvalidOperationException : Collection was modified; enumeration operation may not execute.\r\n   at System.ThrowHelper.ThrowInvalidOperationException(ExceptionResource resource)\r\n   at System.Collections.Generic.List`1.Enumerator.MoveNextRare()\r\n   at System.Linq.Enumerable.Count[TSource](IEnumerable`1 source, Func`2 predicate)\r\n   at Microsoft.AspNetCore.Server.KestrelTests.ListenerPrimaryTests.<NonListenerPipeConnectionsAreLoggedAndIgnored>d__1.MoveNext() in C:\\b\\w\\d6337ac2abf63a4b\\.repositories\\KestrelHttpServer\\test\\Microsoft.AspNetCore.Server.KestrelTests\\ListenerPrimaryTests.cs:line 193\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n```\r\n\r\nWe could fix this in the next patch seeing that we're nearly done with this one."},{"Id":"6587096125","Type":"DeleteEvent","CreatedAt":"2017-09-13T19:44:52","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":null,"RelatedDescription":"Deleted branch \"halter73/concurrent-log-1.0.5\" at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6587095920","Type":"PushEvent","CreatedAt":"2017-09-13T19:44:49","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/351b12126cad4ee21666280ed809e2af29e58385...539e37af8abd7d61970bf2915844f6fe0488db24","RelatedDescription":"Pushed to refs/heads/rel/1.0.5 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6587095871","Type":"PullRequestEvent","CreatedAt":"2017-09-13T19:44:48","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2057","RelatedDescription":"Merged pull request \"Use ConcurrentQueue in TestApplicationErrorLogger [1.0.5]\" (#2057) at aspnet/KestrelHttpServer","RelatedBody":"#2055"},{"Id":"6587094691","Type":"DeleteEvent","CreatedAt":"2017-09-13T19:44:31","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":null,"RelatedDescription":"Deleted branch \"halter73/concurrent-log-1.1.3\" at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6587094579","Type":"PushEvent","CreatedAt":"2017-09-13T19:44:29","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/7c5d7dbae983dbf7b03aa2f947bcddbc5c84ba6c...87e0f71b05c9436991517e422d9175a8fe6a14fe","RelatedDescription":"Pushed to refs/heads/rel/1.1.3 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6587094480","Type":"PullRequestEvent","CreatedAt":"2017-09-13T19:44:28","Actor":"halter73","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2056","RelatedDescription":"Merged pull request \"Use ConcurrentQueue in TestApplicationErrorLogger [1.1.3]\" (#2056) at aspnet/KestrelHttpServer","RelatedBody":"#2055"},{"Id":"6586430825","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T17:14:15","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1267#issuecomment-329235784","RelatedDescription":"Commented on issue \"Kestrel randomly locked and stop responding.\" (#1267) at aspnet/KestrelHttpServer","RelatedBody":"@vinhhrv About this:\r\n\r\n> telnet port is oke, but curl http => hangs\r\n\r\nCan you share more details about the specific request that causes it to hang? Or does it hang on any request?"},{"Id":"6585996369","Type":"WatchEvent","CreatedAt":"2017-09-13T15:42:25","Actor":"etigerstudio","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6585713316","Type":"WatchEvent","CreatedAt":"2017-09-13T14:50:57","Actor":"ableji","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6585247718","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T13:25:33","Actor":"bartonjs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1802#issuecomment-329166900","RelatedDescription":"Commented on issue \"ASP.NET Core Kestrel on Linux never prompts for client certificate\" (#1802) at aspnet/KestrelHttpServer","RelatedBody":"If we're not behaving the same on all platforms then that'd (probably) be a bug.  If SslStream on Windows stopped sending the CA list intentionally then Linux should be changed (and macOS evaluated).  If it's that Windows made a change in newer versions of Windows then we need to decide what we want.  (The \"probably\" is because if it's nuanced in Windows we may have a hard time forming an opinion on the other platforms, and macOS may or may not expose any part of this as an option)\r\n\r\nIf all the platforms support an explicit list of string/X500DistinguishedName/etc, I could certainly get behind user control."},{"Id":"6583720333","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T07:22:13","Actor":"Layoric","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/issues/1464#issuecomment-329081683","RelatedDescription":"Commented on issue \"Microsoft.AspNetCore.Server.Kestrel.Internal.Networking.UvException: Error -32 EPIPE broken pipe\" (#1464) at aspnet/KestrelHttpServer","RelatedBody":"Just leaving this here incase others are seeing lots of `Error -32 EPIPE broken pipe` errors randomly in AWS ECS. I upgraded from Docker 1.12.4 to 17.0.3 (AWS ECS Optimized Image 2017-03-f) and after a few days the dropping of network access has not yet returned.\r\n\r\nOther reading I did seemed to indicate this was a bad update to a Docker containers internal IP tables causing this outage and subsequently lots of `Error -32 EPIPE broken pipe` errors in the logs."},{"Id":"6583185749","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T03:49:03","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/pull/2041#issuecomment-329051183","RelatedDescription":"Commented on issue \"Merge code paths duplicated between HTTP/1.x and HTTP/2 implementations (#2017)\" (#2041) at aspnet/KestrelHttpServer","RelatedBody":"The latest commit 64f88f9555267a94ce0d59f0cb41a061cac1267a has the change to use the same request processing loop in both HTTP/1.x and HTTP/2. The class hierarchy is now (still using the old names for some things)\r\n\r\n```\r\n        Frame\r\n          ^\r\n          |\r\n     _____|______\r\n    /            \\\r\nHttp1Frame   Http2Stream\r\n    ^             ^\r\n    |             |\r\nFrameOfT    Http2StreamOfT\r\n```\r\n\r\nThe request processing loop is in `Frame`. There is still some duplication in `FrameOfT` and `Http2StreamOfT` to deal with hiding the generic parameter up in the hierarchy, but that duplication is minor."},{"Id":"6583174191","Type":"PushEvent","CreatedAt":"2017-09-13T03:44:58","Actor":"cesarbs","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/KestrelHttpServer/compare/a950c54c4432cf9e7d7429f2e32f65831138acee...64f88f9555267a94ce0d59f0cb41a061cac1267a","RelatedDescription":"Pushed to refs/heads/cesarbs/2017 at aspnet/KestrelHttpServer","RelatedBody":null},{"Id":"6582941347","Type":"WatchEvent","CreatedAt":"2017-09-13T02:07:56","Actor":"sweetbai","Repository":"aspnet/KestrelHttpServer","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/KestrelHttpServer","RelatedBody":null}],"ResultType":"GitHubEvent"},"Razor":{"Events":[{"Id":"6587424130","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T21:01:30","Actor":"Eilon","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329295777","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"Maybe an issue with line endings? How does Razor behave when a single file uses different line endings on different lines? I could see that confusing things...\r\n\r\nE.g.:\r\n\r\n```\r\n{ CR\r\n        \t<li><a href=\"#\"> CR\r\n                    <i></i><font>@(item.Name)</font> CRLF\r\n        \t    <span>@item.UpdateTime.ToString(\"yyyy-MM-dd\")</span></a> CRLF\r\n               </li> CR\r\n} CR\r\n```\r\n\r\nOr something like that."},{"Id":"6586755329","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T18:27:38","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329255847","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"Also the line numbers in the errors don't seem to correspond to the razor code above. The errors are all on the same line (162) but the end tag for `a` and `li` are all on different lines."},{"Id":"6586712895","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T18:18:11","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329253215","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"I tried but couldn't reproduce this. @qibucloud, could you include include more of your cshtml? It'll be helpful to know what scope your `<li>` lies in."},{"Id":"6586169362","Type":"IssueCommentEvent","CreatedAt":"2017-09-13T16:16:49","Actor":"Eilon","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682#issuecomment-329219586","RelatedDescription":"Commented on issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"@NTaylorMullen / @ajaybhargavb / @rynowak - any idea on this? Maybe a Razor parser bug? I can't see anything obviously wrong in the syntax above."},{"Id":"6583033626","Type":"IssuesEvent","CreatedAt":"2017-09-13T02:47:25","Actor":"qibucloud","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1682","RelatedDescription":"Opened issue \"\"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\" (#1682) at aspnet/Razor","RelatedBody":"```@foreach (var item in contentlist)\r\n{\r\n        \t<li><a href=\"#\">\r\n                    <i></i><font>@(item.Name)</font>\r\n        \t    <span>@item.UpdateTime.ToString(\"yyyy-MM-dd\")</span></a>\r\n               </li>\r\n}\r\n\r\nMicrosoft.AspNetCore.Mvc.Razor.Compilation.CompilationFailedException: One or more compilation failures occurred:\r\nindex.cshtml(162,11): Error RZ9999: The \"li\" element was not closed.  All elements must be either self-closing or have a matching end tag.\r\nindex.cshtml(162,164): Error RZ9999: Encountered end tag \"a\" with no matching start tag.  Are your start/end tags properly balanced?\r\nindex.cshtml(162,168): Error RZ9999: Encountered end tag \"li\" with no matching start tag.  Are your start/end tags properly balanced?\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CompileAndEmit(String relativePath)\r\n   at Microsoft.AspNetCore.Mvc.Razor.Internal.RazorViewCompiler.CreateCacheEntry(String normalizedPath)```"},{"Id":"6582699117","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T00:21:04","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1681#discussion_r138498963","RelatedDescription":"Commented on pull request \"Change notifications for the project manager\" (#1681) at aspnet/Razor","RelatedBody":"Next PR"},{"Id":"6582698200","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-13T00:10:18","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1681#discussion_r138497723","RelatedDescription":"Commented on pull request \"Change notifications for the project manager\" (#1681) at aspnet/Razor","RelatedBody":"Where is this called? Or is that coming in the next PR?"},{"Id":"6582544001","Type":"IssueCommentEvent","CreatedAt":"2017-09-12T23:19:01","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1460#issuecomment-329011223","RelatedDescription":"Commented on issue \"@using directive IntelliSense does not auto complete\" (#1460) at aspnet/Razor","RelatedBody":"On a related note (I suspect), extra whitespace after the `@using` directive loses IntelliSense completely. E.g. `@using  System` is displayed in white rather than colourized."},{"Id":"6581240197","Type":"PullRequestEvent","CreatedAt":"2017-09-12T17:37:17","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/pull/1681","RelatedDescription":"Opened pull request \"Change notifications for the project manager\" (#1681) at aspnet/Razor","RelatedBody":"There's still nothing processing the notifications in the background.\r\nThis is all the plumbing for dirty checking and publishing updates."},{"Id":"6581239779","Type":"PushEvent","CreatedAt":"2017-09-12T17:37:11","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/37a90ef484f9cfefbac925f6c5a1d3c3326204dc...7cca8618ea81037290c6d29ed16664a3aeac315c","RelatedDescription":"Pushed to refs/heads/rynowak/mt-2 at aspnet/Razor","RelatedBody":null},{"Id":"6581236580","Type":"PushEvent","CreatedAt":"2017-09-12T17:36:28","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/c05e0b79ffacb59663738b8bb2d3fb35d719d782...37a90ef484f9cfefbac925f6c5a1d3c3326204dc","RelatedDescription":"Pushed to refs/heads/rynowak/mt-2 at aspnet/Razor","RelatedBody":null},{"Id":"6579175920","Type":"WatchEvent","CreatedAt":"2017-09-12T10:19:57","Actor":"sdgoh","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Razor","RelatedBody":null},{"Id":"6577042228","Type":"IssuesEvent","CreatedAt":"2017-09-11T22:23:32","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680","RelatedDescription":"Closed issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"As can be seen in aspnet/Mvc#6565 discussions as well as in MVC's [`UrlResolutionTagHelper`](https://github.com/aspnet/Mvc/blob/3beb3108661d2f9df478a6248ede0feb22fdd968/src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/UrlResolutionTagHelper.cs#L167-L216), dealing with HTML encoding adds wrinkles to otherwise-reasonable code. Just one example: The `UrlResolutionTagHelper` performs encoding with the default `HtmlEncoder` (from DI), not the encoder that's in-scope where the tag helper is applied.\r\n\r\nOne approach to simplify this would be to encode all `TagHelperAttribute` values before adding them to the `tagHelperContext.AllAttributes` collection. That doesn't completely solve the in-scope `HtmlEncoder` issue when performing comparisons with values from somewhere else e.g. aspnet/Mvc#6565. But, it does make it much easier to write most tag helper code that deals with attribute values."},{"Id":"6577042053","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T22:23:29","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680#issuecomment-328675989","RelatedDescription":"Commented on issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"Implementation detail of #6565. Should be investigated and tracked there."},{"Id":"6575027923","Type":"IssuesEvent","CreatedAt":"2017-09-11T14:49:16","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/issues/1570","RelatedDescription":"Closed issue \"\"Templates can be used only with field access...\" error not displayed in VS\" (#1570) at aspnet/Razor","RelatedBody":"1. File->New->Web App\r\n2. Go to Index.cshtml\r\n3. Add tag helper with `ModelExpression` attribute\r\n4. Use it and set it to unsupported expression type (`\"A\" + \"B\"`)\r\n\r\nExpected: error squiggly in VS\r\n\r\nActual: no errors in VS, fails at runtime\r\n\r\n"},{"Id":"6575027914","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T14:49:16","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1570#issuecomment-328553600","RelatedDescription":"Commented on issue \"\"Templates can be used only with field access...\" error not displayed in VS\" (#1570) at aspnet/Razor","RelatedBody":"I think this is a won't fix then. We don't attempt to do deep analysis and verification of these expressions and we don't want to.\r\n\r\nSomeone scream if you think we should care about this."},{"Id":"6575009145","Type":"IssueCommentEvent","CreatedAt":"2017-09-11T14:45:52","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1212#issuecomment-328552439","RelatedDescription":"Commented on issue \"Integration tests with ASP.NET Core causes missing references from Razor files\" (#1212) at aspnet/Razor","RelatedBody":"**Hi, it looks like you are posting on a closed issue/PR/commit!**\r\n\r\nWe're very likely to lose track of your bug/feedback/question unless you:\r\n1. Open a new issue\r\n2. Explain very clearly what you need help with\r\n3. If you think you have found a bug, include detailed repro steps so that we can investigate the problem\r\n\r\nThanks!"},{"Id":"6570034668","Type":"IssueCommentEvent","CreatedAt":"2017-09-09T16:41:54","Actor":"Ciantic","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1212#issuecomment-328288766","RelatedDescription":"Commented on issue \"Integration tests with ASP.NET Core causes missing references from Razor files\" (#1212) at aspnet/Razor","RelatedBody":"I think the main problem is that Visual Studio asp.net core xunit template creates a csproj file that is already broken.\r\n\r\nE.g. here is what it created in my project:\r\n\r\nhttps://github.com/Ciantic/OksidiCom.AspNetCore/blob/fb11872b9e5ab9a015909dd34a76c737b05fbdce/test/OksidiCom.UserService.Test/OksidiCom.UserService.Test.csproj\r\n\r\nAnd it gives the Razor compilation error in here:\r\n\r\nhttps://github.com/Ciantic/OksidiCom.AspNetCore/blob/fb11872b9e5ab9a015909dd34a76c737b05fbdce/test/OksidiCom.UserService.Test/Tests.cs#L120 (LoginIssuesToken test)\r\n\r\nIf there is a simple fix for manipulating the csproj, the VS template for xunit test project should include it already."},{"Id":"6568603451","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T21:44:54","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1570#issuecomment-328221239","RelatedDescription":"Commented on issue \"\"Templates can be used only with field access...\" error not displayed in VS\" (#1570) at aspnet/Razor","RelatedBody":"I investigated this and looks like razor might not have enough information in design time to make this a design time error.\r\n\r\nFor example, in this ModelExpression attribute `for`,\r\n```HTML\r\n<test for=\"StringProp+1\"></test>\r\n```\r\nthe generated code looks like this,\r\n```C#\r\n__WebApplication5_TagHelpers_TestTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.StringProp+1);\r\n```\r\nwhich is valid c# and compiles successfully. It is only caught at runtime [here](https://github.com/aspnet/Mvc/blob/a23307e2b1e7934e2c8d69774cda1b36778f697b/src/Microsoft.AspNetCore.Mvc.ViewFeatures/Internal/ExpressionMetadataProvider.cs#L80) in Mvc.\r\nThis seems to be more of a \"by design\". @rynowak @NTaylorMullen thoughts on if we want to come up with some sort of workaround for this?"},{"Id":"6567281771","Type":"DeleteEvent","CreatedAt":"2017-09-08T15:48:40","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":null,"RelatedDescription":"Deleted branch \"rynowak/project-manager-redux\" at aspnet/Razor","RelatedBody":null},{"Id":"6567281698","Type":"PullRequestEvent","CreatedAt":"2017-09-08T15:48:39","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677","RelatedDescription":"Closed pull request \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"Splits the 'trigger' out from the change manager. The next change will\r\nadd more functionality to DPSMBase."},{"Id":"6567281536","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T15:48:37","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677#issuecomment-328140954","RelatedDescription":"Commented on issue \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"82866d9442ae7914980576fd821e162d6c30ecbb"},{"Id":"6567229197","Type":"PushEvent","CreatedAt":"2017-09-08T15:37:16","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/compare/1806d26e9a8d3cb6cc41ce9b5858ee61c5373922...82866d9442ae7914980576fd821e162d6c30ecbb","RelatedDescription":"Pushed to refs/heads/dev at aspnet/Razor","RelatedBody":null},{"Id":"6567107112","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-08T15:11:14","Actor":"rynowak","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677#discussion_r137815212","RelatedDescription":"Commented on pull request \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"github doesn't update the diff when you push to the base branch"},{"Id":"6566326573","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T12:12:45","Actor":"atifaziz","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/715#issuecomment-328086945","RelatedDescription":"Commented on issue \"Add an HTML-formatted constructions support into Razor instead of the removed @helper directive.\" (#715) at aspnet/Razor","RelatedBody":"In addition to using C# tuples, [as shown above](https://github.com/aspnet/Razor/issues/715#issuecomment-328084286), using local C# functions can also make it simpler to pass multiple arguments:\r\n\r\n```\r\nIHtmlContent Render<T>(Func<T, IHtmlContent> helper, T item = default(T)) =>\r\n    helper(item);\r\n\r\nFunc<object, IHtmlContent> Person(string fn, string ln, int age) =>\r\n    @<p>@fn @ln is @age years old.</p>;\r\n\r\n@Render(Person(\"John\", \"Doe\", 42))\r\n```\r\n\r\n`Render` above is only for cosmetics as `@Person(\"John\", \"Doe\", 42)(null)` would look ugly."},{"Id":"6566275115","Type":"IssueCommentEvent","CreatedAt":"2017-09-08T11:58:20","Actor":"atifaziz","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/715#issuecomment-328084286","RelatedDescription":"Commented on issue \"Add an HTML-formatted constructions support into Razor instead of the removed @helper directive.\" (#715) at aspnet/Razor","RelatedBody":"@NTaylorMullen [said](https://github.com/aspnet/Razor/issues/715#issuecomment-198468516):\r\n\r\n> This still does not solve the problem of a parameterized Razor code. What if there are two or three parameters of different types?\r\n\r\n>>As unfortunate as it might be you'd need to provide some sort of poco object in that case. A potential, less clean solution would be using variables from outside of the `@<p>...</p>`:\r\n\r\nThe example given was:\r\n\r\n```\r\nvar firstName = \"John\";\r\nvar lastName = \"Doe\";\r\n\r\nFunc<int, IHtmlContent> person = @<p>@firstName @lastName is @item years old.</p>;\r\n\r\n@person(30)\r\n```\r\n\r\nBut how about using a C# tuple to ship several values into the first argument? As in:\r\n\r\n```\r\nFunc<(string FirstName, string LastName, int Age), IHtmlContent> person =\r\n    @<p>@item.FirstName @item.LastName is @item.Age years old.</p>;\r\n\r\n@person((\"John\", \"Doe\", 42))\r\n```\r\n\r\nThe only odd looking bit may be the double parentheses needed at the call sites but that's far better than having to rely on closures for parameterization."},{"Id":"6564195627","Type":"PullRequestReviewCommentEvent","CreatedAt":"2017-09-07T23:38:56","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/pull/1677#discussion_r137681075","RelatedDescription":"Commented on pull request \"Refactor project snapshot manager\" (#1677) at aspnet/Razor","RelatedBody":"Not sure why these changes are displayed here while the base branch is set to `rynowak/foreground-theory`"},{"Id":"6564178318","Type":"CommitCommentEvent","CreatedAt":"2017-09-07T23:37:54","Actor":"ajaybhargavb","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/aspnet/Razor/commit/1806d26e9a8d3cb6cc41ce9b5858ee61c5373922#commitcomment-24158630","RelatedDescription":"Commented on commit \"1806d26e9a8d3cb6cc41ce9b5858ee61c5373922\" at aspnet/Razor","RelatedBody":"Yolo merge 🙈 "},{"Id":"6564082876","Type":"IssueCommentEvent","CreatedAt":"2017-09-07T23:00:33","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680#issuecomment-327950076","RelatedDescription":"Commented on issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"Much appreciated @rynowak "},{"Id":"6564075492","Type":"IssuesEvent","CreatedAt":"2017-09-07T22:57:55","Actor":"dougbu","Repository":"aspnet/Razor","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Razor/issues/1680","RelatedDescription":"Opened issue \"Normalize the HTML encoding status of attribute values before calling tag helpers\" (#1680) at aspnet/Razor","RelatedBody":"As can be seen in aspnet/Mvc#6565 discussions as well as in MVC's [`UrlResolutionTagHelper`](https://github.com/aspnet/Mvc/blob/3beb3108661d2f9df478a6248ede0feb22fdd968/src/Microsoft.AspNetCore.Mvc.Razor/TagHelpers/UrlResolutionTagHelper.cs#L167-L216), dealing with HTML encoding adds wrinkles to otherwise-reasonable code. Just one example: The `UrlResolutionTagHelper` performs encoding with the default `HtmlEncoder` (from DI), not the encoder that's in-scope where the tag helper is applied.\r\n\r\nOne approach to simplify this would be to encode all `TagHelperAttribute` values before adding them to the `tagHelperContext.AllAttributes` collection. That doesn't completely solve the in-scope `HtmlEncoder` issue when performing comparisons with values from somewhere else e.g. aspnet/Mvc#6565. But, it does make it much easier to write most tag helper code that deals with attribute values."}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6585749309","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:57:15","Actor":"davidfowl","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Closed issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585739204","Type":"IssuesEvent","CreatedAt":"2017-09-13T14:55:30","Actor":"jsdmitry","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/270","RelatedDescription":"Opened issue \"Model does not serialize to the camelCase by default\" (#270) at aspnet/Announcements","RelatedBody":"I am returning a data of the IEnumerable type as a Model of View. And I wait for that a Model has will properties with camelCase formatting as when getting a data from WebApi controller."},{"Id":"6585692487","Type":"WatchEvent","CreatedAt":"2017-09-13T14:47:20","Actor":"Chris-ZA","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6563238976","Type":"WatchEvent","CreatedAt":"2017-09-07T19:46:57","Actor":"m6t","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6545178208","Type":"WatchEvent","CreatedAt":"2017-09-04T02:21:09","Actor":"foxfu","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6544528482","Type":"WatchEvent","CreatedAt":"2017-09-03T17:29:33","Actor":"alefranz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6542239491","Type":"WatchEvent","CreatedAt":"2017-09-02T02:49:33","Actor":"BlueColorDemon","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6538082530","Type":"WatchEvent","CreatedAt":"2017-09-01T03:11:44","Actor":"ken1211","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6534627582","Type":"WatchEvent","CreatedAt":"2017-08-31T11:36:46","Actor":"csyszf","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6525086646","Type":"WatchEvent","CreatedAt":"2017-08-29T14:48:04","Actor":"anserk","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6516751305","Type":"WatchEvent","CreatedAt":"2017-08-27T13:55:26","Actor":"pjdv2","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6516747587","Type":"WatchEvent","CreatedAt":"2017-08-27T13:52:23","Actor":"pjdv2","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6512833226","Type":"WatchEvent","CreatedAt":"2017-08-25T15:49:37","Actor":"MattPress","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6509699760","Type":"WatchEvent","CreatedAt":"2017-08-24T22:04:39","Actor":"runebakjacobsen","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6506925369","Type":"WatchEvent","CreatedAt":"2017-08-24T11:03:36","Actor":"cemalshukriev","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6504000070","Type":"IssuesEvent","CreatedAt":"2017-08-23T19:03:38","Actor":"jbagga","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/aspnet/Announcements/issues/269","RelatedDescription":"Opened issue \"ExpandoObjectAdapter does not assume case insensitivity\" (#269) at aspnet/Announcements","RelatedBody":"When applying a json patch to `ExpandoObject`s, case insensitive search will not be used to match the path segment to the object's dictionary keys. Instead, the path segment will be resolved using the `NamingStrategy` defined in the `IContractResolver`.\r\n\r\nAddresses https://github.com/aspnet/JsonPatch/issues/102\r\n\r\nSee https://github.com/aspnet/JsonPatch/issues/103 for discussion\r\n"},{"Id":"6498883578","Type":"WatchEvent","CreatedAt":"2017-08-22T19:12:28","Actor":"andregr15","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6495189019","Type":"WatchEvent","CreatedAt":"2017-08-22T03:10:54","Actor":"babtsoualiaksandr","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6493226643","Type":"IssueCommentEvent","CreatedAt":"2017-08-21T16:09:19","Actor":"anurse","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"created","RelatedUrl":"https://github.com/aspnet/Announcements/issues/237#issuecomment-323786938","RelatedDescription":"Commented on issue \"Microsoft.Extensions.PlatformAbstractions has been removed\" (#237) at aspnet/Announcements","RelatedBody":"Note: As part of this change, you could encounter the following error if you build your WebHost by injecting `IStartup` directly into the container, rather than calling `.UseStartup` or `.Configure`:\r\n\r\n```\r\nUnhandled Exception: System.ArgumentException: A valid non-empty application name must be provided.\r\nParameter name: applicationName\r\n   at Microsoft.AspNetCore.Hosting.Internal.HostingEnvironmentExtensions.Initialize(IHostingEnvironment hostingEnvironment, String applicationName, String contentRootPath, WebHostOptions options)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.BuildCommonServices(AggregateException& hostingStartupErrors)\r\n   at Microsoft.AspNetCore.Hosting.WebHostBuilder.Build()\r\n   at ConsoleApp11.Program.Main(String[] args) in C:\\Users\\dfowler\\documents\\visual studio 2017\\Projects\\ConsoleApp11\\ConsoleApp11\\Program.cs:line 11\r\n```\r\n\r\nThis occurs because we need to get the name of the application. Previously, we used some heuristics to detect it, but we removed some of them in 2.0. In the scenario above, where `IStartup` is manually injected into the container, add the following call to your `WebHostBuilder` set-up sequence:\r\n\r\n```\r\nWebHost.CreateDefaultBuilder(args)\r\n    // ... other Web Host configuration calls\r\n    .UseSetting(WebHostDefaults.ApplicationKey, \"[Application Name]\")\r\n```\r\n\r\n**NOTE: This is only required in 2.0 and only when you do NOT call `.UseStartup` or `.Configure`**\r\n\r\nSee https://github.com/aspnet/Hosting/issues/1137 for further info."},{"Id":"6487154520","Type":"WatchEvent","CreatedAt":"2017-08-20T04:02:52","Actor":"fahadabdulaziz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6484292850","Type":"WatchEvent","CreatedAt":"2017-08-18T23:29:17","Actor":"DejanMilicic","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6481758203","Type":"WatchEvent","CreatedAt":"2017-08-18T16:17:50","Actor":"andreabbondanza","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6481116208","Type":"WatchEvent","CreatedAt":"2017-08-18T14:54:17","Actor":"imranakram","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6480883973","Type":"WatchEvent","CreatedAt":"2017-08-18T14:25:21","Actor":"gldraphael","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6473732109","Type":"WatchEvent","CreatedAt":"2017-08-17T16:29:24","Actor":"modulexcite","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6470181527","Type":"WatchEvent","CreatedAt":"2017-08-17T08:23:42","Actor":"svasorcery","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6464186890","Type":"ForkEvent","CreatedAt":"2017-08-16T14:42:02","Actor":"osmarvcneto","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":null,"RelatedUrl":"https://github.com/osmarvcneto/Announcements","RelatedDescription":"Forked aspnet/Announcements to osmarvcneto/Announcements","RelatedBody":null},{"Id":"6462831810","Type":"WatchEvent","CreatedAt":"2017-08-16T11:45:52","Actor":"karelsteinmetz","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6461972156","Type":"WatchEvent","CreatedAt":"2017-08-16T09:29:11","Actor":"holysdking","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null},{"Id":"6461518520","Type":"WatchEvent","CreatedAt":"2017-08-16T08:21:31","Actor":"kangyangyang","Repository":"aspnet/Announcements","Organization":"aspnet","RawContent":null,"RelatedAction":"started","RelatedUrl":null,"RelatedDescription":"Starred aspnet/Announcements","RelatedBody":null}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"906146139933638658","CreatedAt":"2017-09-08T13:24:09+00:00","UserScreenname":"aspnet","Text":"Getting Started with Windows Containers https://t.co/8twiZLlB5H","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":49,"FavoriteCount":24,"RawContent":null},{"Id":"897126323298209792","CreatedAt":"2017-08-14T16:02:37+00:00","UserScreenname":"aspnet","Text":"Announcing ASPNet Core 2.0 - https://t.co/5RTzwS9Ym2","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":196,"FavoriteCount":158,"RawContent":null},{"Id":"877222209667960834","CreatedAt":"2017-06-20T17:50:47+00:00","UserScreenname":"aspnet","Text":"Check out the latest Code Conversation episode where @LadyNaggaga chats with @BaggaJaspreet about ASPNet Core TagHe… https://t.co/xeyH9UaAso","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":12,"FavoriteCount":4,"RawContent":null}]}},"RunOn":"2017-09-13T21:52:04.8018425Z","RunDurationInMilliseconds":6577}