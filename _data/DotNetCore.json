{"Data":{"Blog":{"FeedItems":[{"Title":".NET Framework 4.7.1 Runtime and Compiler Features","PublishedOn":"2017-09-28T00:00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This post describes the new Runtime, Compiler and Base Class Library (BCL) improvements in the .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post.  BCL &#8211; .NET Standard 2.0 Support .NET Framework 4.7.1 has built-in support for .NET Standard 2.0. .NET Framework 4.7.1... <a aria-label=\"read more about .NET Framework 4.7.1 Runtime and Compiler Features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/28/net-framework-4-7-1-runtime-and-compiler-features/","RawContent":null},{"Title":"Build a web service with F# and .NET Core 2.0","PublishedOn":"2017-09-26T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Earlier this year, I wrote about an update to the roadmap for F# and .NET Core. I had mentioned that there were a number of things you could build with F# and .NET Core today, such as web services. In this post, I&#8217;ll walk through building a web service with F# and .NET Core 2.0... <a aria-label=\"read more about Build a web service with F# and .NET Core 2.0\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/26/build-a-web-service-with-f-and-net-core-2-0/","RawContent":null},{"Title":".NET Framework September 2017 Preview of Quality Rollup","PublishedOn":"2017-09-25T00:00:00","CommentsCount":1,"FacebookCount":0,"Summary":"Today, we are releasing the September 2017 Preview of Quality Rollup. This type of rollup is intended for businesses that want to the preview or use quality improvements as soon as they are available. This update applies to Windows 10 Update 1607 (Anniversary Update) and to Windows Server 2016. FYI: The KBs for Windows Server 2016... <a aria-label=\"read more about .NET Framework September 2017 Preview of Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/25/net-framework-september-2017-preview-of-quality-rollup/","RawContent":null},{"Title":".NET Core September 2017 Update — macOS High Sierra Support","PublishedOn":"2017-09-22T00:00:00","CommentsCount":4,"FacebookCount":0,"Summary":"We released .NET Core updates for macOS High Sierra Support and additional quality fixes. You can download and install the update for Windows, macOS and Linux. This update is for .NET Core 1.0 and 1.1. The initial .NET Core 2.0 release includes similar improvements, so is not being updated with this release. Downloads .NET Core 1.0.7 .NET... <a aria-label=\"read more about .NET Core September 2017 Update &#8212; macOS High Sierra Support\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/22/net-core-september-2017-update-macos-high-sierra-support/","RawContent":null},{"Title":".NET Framework 4.7.1 Accessibility and WPF Improvements","PublishedOn":"2017-09-21T00:00:00","CommentsCount":16,"FacebookCount":0,"Summary":"This post describes the new WPF and accessibility features and improvements in .NET Framework 4.7.1. You can try out these features by downloading the Developer Pack, described in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Accessibility improvements .NET Framework 4.7.1 brings in a lot of accessibility improvements across different libraries to align with the... <a aria-label=\"read more about .NET Framework 4.7.1 Accessibility and WPF Improvements\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/21/net-framework-4-7-1-accessibility-and-wpf-improvements/","RawContent":null},{"Title":"Watch .NET Conf 2017!","PublishedOn":"2017-09-19T00:00:00","CommentsCount":12,"FacebookCount":0,"Summary":".NET Conf starts today. It&#8217;s a three-day, free, virtual and global .NET conference. All you need to do is point your web browser to channel9.msdn.com, starting at 8AM Pacific Time. We have a packed agenda with a great set of expert .NET developers. What will you learn? Many things. You will learn to build for... <a aria-label=\"read more about Watch .NET Conf 2017!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/19/watch-net-conf-2017/","RawContent":null},{"Title":".NET Framework 4.7.1 ASP.NET and Configuration features","PublishedOn":"2017-09-14T00:00:00","CommentsCount":24,"FacebookCount":0,"Summary":"This post describes the new ASP.NET, Configuration and System.Messaging features and improvements in the .NET Framework 4.7.1. More information on the build these features are available in and how to get the Developer Pack is covered in the Welcome to the .NET Framework 4.7.1 Early Access blog post. Configuration builders Configuration builders allow developers to inject and build... <a aria-label=\"read more about .NET Framework 4.7.1 ASP.NET and Configuration features\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/13/net-framework-4-7-1-asp-net-and-configuration-features/","RawContent":null},{"Title":".NET Framework September 2017 Security and Quality Rollup","PublishedOn":"2017-09-13T00:00:00","CommentsCount":21,"FacebookCount":0,"Summary":"Last Updated: 2017.09.21. Today, we are releasing the September 2017 Security and Quality Rollup and Security Only Update. This update applies to Windows 7 and later client versions and Windows Server 2008 and later server versions. This update has known issues. Please see them at the bottom of the update. Security This release contains the... <a aria-label=\"read more about .NET Framework September 2017 Security and Quality Rollup\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/09/12/net-framework-september-2017-security-and-quality-rollup/","RawContent":null},{"Title":"The week in .NET – Let’s Encrypt Web App Renewer, Seattle CodeCamp 2017","PublishedOn":"2017-08-29T00:00:00","CommentsCount":15,"FacebookCount":0,"Summary":"Previous posts: Project File Tools, Maira Wenzel, Mixed Reality in Miami .NET Core 2.0, ASP.NET Core 2.0, Entity Framework 2.0, Visual Studio 2017 Update 3, enterprise Entity Framework Core in Boston Rezoom.SQL, Protobuf in Orlando Open-source project of the week: Let&#8217;s Encrypt Azure Web App Renewer There&#8217;s a growing consensus that all web sites should... <a aria-label=\"read more about The week in .NET &#8211; Let&#8217;s Encrypt Web App Renewer, Seattle CodeCamp 2017\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/29/the-week-in-net/","RawContent":null},{"Title":"UWP & .NET Standard 2.0: A preview is now available!","PublishedOn":"2017-08-25T00:00:00","CommentsCount":50,"FacebookCount":0,"Summary":"Today, we released the first Preview of Visual Studio 2017 version 15.4. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&#8217;ll outline what this means for UWP development with .NET. Prerequisites In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU)... <a aria-label=\"read more about UWP &#38; .NET Standard 2.0: A preview is now available!\" href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\" class=\"read-more\">Read more</a>","Href":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","RawContent":null}],"ResultType":"Feed"},"Home":{"Events":[{"Id":"6650451504","Type":"IssuesEvent","CreatedAt":"2017-09-28T16:22:10","Actor":"hughbe","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/issues/87","RelatedDescription":"Opened issue \"PRs to repos outside of dotnet/* pattern should not always thank for signing the CLA\" (#87) at dotnet/home","RelatedBody":"For example: https://github.com/mono/libgdiplus/pull/109\r\n\r\nI have already signed the CLI. On the dotnet/corefx etc. projects, I don't get the extra message:\r\n\r\n```\r\n@hughbe,\r\nThanks for having already signed the Contribution License Agreement. Your agreement was validated by .NET Foundation. We will now review your pull request.\r\nThanks,\r\n.NET Foundation Pull Request Bot\r\n```\r\n\r\nJust a small gripe, as I get an email each time I do this. I've seen this in Mono and Xunit.\r\n\r\n/cc @karelz I know this is unrelated to corefx but maybe you know the right person/repo to route this to :D\r\n"},{"Id":"6515896963","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:20:18","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/85","RelatedDescription":"Merged pull request \"Create telerik-ui-for-uwp.md\" (#85) at dotnet/home","RelatedBody":"Submission of Telerik UI for UWP"},{"Id":"6515896506","Type":"PullRequestEvent","CreatedAt":"2017-08-26T22:19:49","Actor":"jongalloway","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Merged pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""},{"Id":"6483200432","Type":"PullRequestEvent","CreatedAt":"2017-08-18T19:58:41","Actor":"gep13","Repository":"dotnet/home","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/home/pull/86","RelatedDescription":"Opened pull request \"Corrected list of maintainers\" (#86) at dotnet/home","RelatedBody":""}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"6645912196","Type":"IssuesEvent","CreatedAt":"2017-09-27T19:47:08","Actor":"terrajobst","Repository":"dotnet/announcements","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/announcements/issues/32","RelatedDescription":"Opened issue \".NET Framework 4.7.1 provides built-in support for .NET Standard 2.0\" (#32) at dotnet/announcements","RelatedBody":"## Summary\r\n\r\n.NET Framework 4.7.1 will have built-in support for .NET Standard 2.0. This means that you don't have to deploy any additional files or use binding redirects to use .NET Standard 2.0 libraries.\r\n\r\nFor a demo, check out [this video][video].\r\n\r\n## Details\r\n\r\nWhile libraries targeting [.NET Standard 2.0][ns20post] are can be consumed by applications and libraries [targeting .NET Framework 4.6.1][nstable] and higher, not all files that are required for .NET Standard libraries were part of .NET Framework 4.6.1. In fact, .NET Framework 4.6.1 was shipped before .NET Standard 2.0 was even designed. That's why building an application targeting .NET Framework 4.6.1 (as well as 4.6.2 and 4.7) will have to deploy additional files.\r\n\r\n* If you use **Visual Studio 2017 15.3** or higher, these files are automatically copied to the application's output folder.\r\n\r\n* If you use **Visual Studio 2015 and [use NuGet 3.6][nuget36]**, we'll prompt you to install a [support package][vs2015support] which will handle copying the files to the output directory.\r\n\r\nStarting with .NET Framework 4.7.1 these files no longer have to be deployed with the application -- they are built right into the .NET Framework itself.\r\n\r\n.NET Framework 4.7.1 also adds[about 200 missing APIs][missingapis] that were part of .NET Standard 2.0 but not actually implemented by .NET Framework 4.6.1, 4.6.2 or 4.7.\r\n\r\nThis also removes the need for [binding redirects][netfx-issues] when using .NET Standard libraries on .NET Framework because the CLR automatically unifies version numbers of assemblies that are part of the platform.\r\n\r\nLearn more [by reading the .NET Standard FAQ](http://aka.ms/netstandardfaq).\r\n\r\n## Discussion\r\n\r\nDiscussion\r\n\r\nFor a discussion, please go to dotnet/standard#514.\r\n\r\n[ns20post]: https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\r\n[nstable]: https://docs.microsoft.com/en-us/dotnet/standard/net-standard\r\n[nuget36]: https://dist.nuget.org/visualstudio-2015-vsix/v3.6.0/NuGet.Tools.vsix\r\n[vs2015support]: https://aka.ms/netstandard-build-support-netfx\r\n[missingapis]: https://github.com/dotnet/standard/blob/master/netstandard/src/ApiCompatBaseline.net461.txt\r\n[netfx-issues]: https://github.com/dotnet/standard/issues/481\r\n[video]: https://www.youtube.com/watch?v=u67Eu_IgEMs\r\n\r\nhttps://github.com/dotnet/standard/issues/514"}],"ResultType":"GitHubEvent"},"CoreCLR":{"Events":[{"Id":"6685857999","Type":"PullRequestEvent","CreatedAt":"2017-10-07T01:49:20","Actor":"dotnet-maestro-bot","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14378","RelatedDescription":"Opened pull request \"Update CoreFx to preview1-25807-01 (master)\" (#14378) at dotnet/coreclr","RelatedBody":"/cc @dotnet/coreclr-auto-update-notify"},{"Id":"6685849883","Type":"PullRequestEvent","CreatedAt":"2017-10-07T01:42:39","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14353","RelatedDescription":"Merged pull request \"Fix RyuJIT/arm32 asserts\" (#14353) at dotnet/coreclr","RelatedBody":"Fix #14199: propagate `GTF_EXCEPT` bits from the end of `GT_FIELD_LIST`\r\nlists to the beginning, to avoid \"Missing flags on tree\" asserts.\r\n\r\nFix #14198: for RyuJIT/arm32, `GT_BITCAST` needs to be a MultiRegOp.\r\nThis is required when a varargs function, which includes the tailcall\r\nhelper, needs to pass a double in integer registers. We can end up\r\nwith `GT_PUTARG_REG/long(GT_BITCAST/long(double tree))`.\r\n\r\nFixed various GenTree node flags dumping issues."},{"Id":"6685849875","Type":"IssuesEvent","CreatedAt":"2017-10-07T01:42:39","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14199","RelatedDescription":"Closed issue \"[RyuJIT/arm32][JitStress=1] Assertion failed '!\"Missing flags on tree\"'\" (#14199) at dotnet/coreclr","RelatedBody":"Tests:\r\n\r\n```\r\nJIT\\Methodical\\fp\\exgen\\10w5d_cs_d\\10w5d_cs_d.cmd\r\nJIT\\Methodical\\fp\\exgen\\10w5d_cs_r\\10w5d_cs_r.cmd\r\n```\r\n\r\nExample:\r\n\r\n```\r\nBEGIN EXECUTION\r\n \"E:\\gh\\coreclr2\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\corerun.exe\" 10w5d_cs_d.exe\r\nFunc_0_6_5_6_3: != true\r\nFunc_0_6_5_4_6: <= true\r\nFunc_0_6_5_4_5: > true\r\nFunc_0_6_5_4_3: == false\r\nFunc_0_6_4_6_2: != true\r\nFunc_0_6_4_5_4: < true\r\nFunc_0_6_4_5_1: < true\r\nFunc_0_6_4_4: <= true\r\nFunc_0_6_3_6_5: == false\r\nFunc_0_6_3_4_4: <= true\r\nFunc_0_6_3_4_3: < true\r\nFunc_0_6_3_3: < true\r\nFunc_0_6_3_2_3: >= true\r\nFunc_0_6_3_1_5: < true\r\nFunc_0_6_3_1: <= false\r\nFunc_0_6_3: != true\r\nFunc_0_6_2_5: != true\r\nFunc_0_6_2_1: > false\r\nFunc_0_6_1_6_4: < false\r\nFunc_0_6_1_6_3: > false\r\nFunc_0_6_1_5_4: > true\r\nFunc_0_6_1_3: == false\r\nFunc_0_5_6_6_6: <= true\r\nFunc_0_5_6_6_1: > true\r\nFunc_0_5_6_4_6: <= false\r\nFunc_0_5_6_4_2: >= false\r\nFunc_0_5_6_3_6: < false\r\nFunc_0_5_6_3_1: == false\r\nFunc_0_5_6_3: <= true\r\nFunc_0_5_6_2_1: >= false\r\nFunc_0_5_6_1_3: > true\r\nFunc_0_5_6_1: <= false\r\nFunc_0_5_5_6: != true\r\nFunc_0_5_5_5_6: != true\r\nFunc_0_5_5_5_4: == false\r\nFunc_0_5_5_5_2: == false\r\nFunc_0_5_5_4_5: < true\r\nFunc_0_5_5_4: > true\r\nFunc_0_5_5_3_4: != true\r\nFunc_0_5_5_3_2: <= true\r\nFunc_0_5_5_3_1: > true\r\nFunc_0_5_5_1: < false\r\nFunc_0_5_4_5: >= false\r\nFunc_0_5_4_1_3: <= false\r\nFunc_0_5_4_1_2: == false\r\nFunc_0_5_4: != true\r\nMissing flags on tree [000637]: --X---------\r\n               [000645] -c-XG--------             /--*  FIELD_LIST void   int at offset 12\r\n               [000644] ---XG--------             |  \\--*  IND       int\r\n               [000642] -------------             |     |  /--*  CNS_INT   int    12\r\n               [000643] ----G--------             |     \\--*  ADD       byref\r\n     (  1,  1) [000641] -------------             |        |  /--*  CNS_INT   int    4 field offset Fseq[a2_0_5_3_6_3]\r\n     (  5,  5) [000638] ----G--------             |        \\--*  ADD       byref\r\n     (  3,  3) [000639] L---G--------             |           \\--*  ADDR      byref\r\n     (  3,  2) [000640] ----G--N-----             |              \\--*  LCL_VAR   struct(AX) V00 loc0\r\n               [000637] -c--G--------             *  FIELD_LIST void   int at offset 8\r\n               [000636] R---G--------             \\--*  IND       int\r\n               [000634] -------------                |  /--*  CNS_INT   int    8\r\n               [000635] ----G--------                \\--*  ADD       byref\r\n     (  1,  1) [000633] -------------                   |  /--*  CNS_INT   int    4 field offset Fseq[a2_0_5_3_6_3]\r\n     (  5,  5) [000630] ----G--------                   \\--*  ADD       byref\r\n     (  3,  3) [000631] L---G--------                      \\--*  ADDR      byref\r\n     (  3,  2) [000632] ----G--N-----                         \\--*  LCL_VAR   struct(AX) V00 loc0\r\n\r\nAssert failure(PID 18280 [0x00004768], Thread: 8680 [0x21e8]): Assertion failed '!\"Missing flags on tree\"' in 'testout1:Func_0_5_3_6_3():double' (IL size 466)\r\n\r\n    File: e:\\gh\\coreclr2\\src\\jit\\flowgraph.cpp Line: 21433\r\n    Image: E:\\gh\\coreclr2\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n\r\nExpected: 100\r\nActual: 123456789\r\nEND EXECUTION - FAILED\r\nFAILED\r\n```\r\n"},{"Id":"6685826017","Type":"IssuesEvent","CreatedAt":"2017-10-07T01:22:24","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14377","RelatedDescription":"Opened issue \"[RyuJIT/arm32][TailcallStress=1] Assertion failed '(candidates & allRegs(i->registerType)) != 0'\" (#14377) at dotnet/coreclr","RelatedBody":"From an x86_arm_altjit run with `COMPlus_TailcallStress=1`\r\n\r\n```\r\nAssert failure(PID 4892 [0x0000131c], Thread: 6168 [0x1818]): Assertion failed '(candidates & allRegs(i->registerType)) != 0' in 'System.Numerics.Vector4:op_Multiply(struct,float):struct' (IL size 13)\r\n\r\n    File: d:\\j\\workspace\\x86_arm_altji---58f521f4\\src\\jit\\lsra.cpp Line: 4091\r\n    Image: D:\\j\\workspace\\x86_arm_altji---58f521f4\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n```\r\n\r\nTests:\r\n```\r\nJIT\\SIMD\\Vector4_r\\Vector4_r.cmd\r\nJIT\\SIMD\\Ldfld_r\\Ldfld_r.cmd\r\nJIT\\SIMD\\AbsSqrt_r\\AbsSqrt_r.cmd\r\nJIT\\SIMD\\Sums_r\\Sums_r.cmd\r\nJIT\\SIMD\\VectorUnused_r\\VectorUnused_r.cmd\r\nJIT\\SIMD\\AddingSequence_r\\AddingSequence_r.cmd\r\nJIT\\SIMD\\CircleInConvex_r\\CircleInConvex_r.cmd\r\nJIT\\SIMD\\Vector3_r\\Vector3_r.cmd\r\nJIT\\SIMD\\VectorReturn_ro\\VectorReturn_ro.cmd\r\nJIT\\SIMD\\VectorReturn_r\\VectorReturn_r.cmd\r\nreadytorun\\tests\\mainv2\\mainv2.cmd\r\nJIT\\Performance\\CodeQuality\\SIMD\\RayTracer\\RayTracer\\RayTracer.cmd\r\n```\r\n"},{"Id":"6685818689","Type":"IssuesEvent","CreatedAt":"2017-10-07T01:16:22","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14376","RelatedDescription":"Opened issue \"[RyuJIT/arm32][TailcallStress=1] Assertion failed 'header->epilogCount <= 1'\" (#14376) at dotnet/coreclr","RelatedBody":"Found in an x86_arm_altjit run with `COMPlus_TailcallStress=1`\r\n\r\n```\r\nAssert failure(PID 8752 [0x00002230], Thread: 9096 [0x2388]): Assertion failed 'header->epilogCount <= 1' in 'EHTest:f3()' (IL size 6)\r\n\r\n    File: d:\\j\\workspace\\x86_arm_altji---58f521f4\\src\\jit\\gcencode.cpp Line: 1628\r\n    Image: D:\\j\\workspace\\x86_arm_altji---58f521f4\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n```\r\n\r\nTest:\r\n```\r\nJIT\\Regression\\CLR-x86-JIT\\V1-M13-RTM\\b92289\\b92289\\b92289.cmd\r\n```\r\n"},{"Id":"6685814655","Type":"IssuesEvent","CreatedAt":"2017-10-07T01:13:28","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14375","RelatedDescription":"Opened issue \"[RyuJIT/arm32][TailcallStress=1] Assertion failed 'genIsValidFloatReg(reg)'\" (#14375) at dotnet/coreclr","RelatedBody":"Found in x86_arm_altjit job with `COMPlus_TailcallStress=1`.\r\n\r\n```\r\nAssert failure(PID 6552 [0x00001998], Thread: 7164 [0x1bfc]): Assertion failed 'genIsValidFloatReg(reg)' in 'Fourier:thefunction(double,double,int):double' (IL size 102)\r\n\r\n    File: d:\\j\\workspace\\x86_arm_altji---58f521f4\\src\\jit\\target.h Line: 2088\r\n    Image: D:\\j\\workspace\\x86_arm_altji---58f521f4\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n```\r\n\r\nTest:\r\n```\r\nJIT\\Performance\\CodeQuality\\Bytemark\\Bytemark\\Bytemark.cmd\r\n```"},{"Id":"6685785602","Type":"PullRequestEvent","CreatedAt":"2017-10-07T00:51:31","Actor":"jkotas","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14365","RelatedDescription":"Merged pull request \"Delete dead code\" (#14365) at dotnet/coreclr","RelatedBody":"Delete some dead code related to Windows Phone and code access security"},{"Id":"6685763102","Type":"IssuesEvent","CreatedAt":"2017-10-07T00:35:32","Actor":"rartemev","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/4122","RelatedDescription":"Closed issue \"tailcall_v4\\hijacking\\hijacking.cmd fails in arm64\" (#4122) at dotnet/coreclr","RelatedBody":"BEGIN EXECUTION\n \"Z:\\arm64\\new\\corerun.exe\" hijacking.exe\nExecuted 34 GCs\nExecuted 6 tail calls before failing\nExpected: 100\nActual: 101\nEND EXECUTION - FAILED\nFAILED\n\n@briansull  please investigate\\assign this to the proper dev\n"},{"Id":"6685748627","Type":"PullRequestEvent","CreatedAt":"2017-10-07T00:25:45","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/coreclr/pull/14369","RelatedDescription":"Merged pull request \"Fix handling of continuations for captured context\" (#14369) at dotnet/coreclr","RelatedBody":"My recent delegate optimization for async methods introduced a race condition that breaks posting back to a captured context.  If the awaited task completes between the time we check IsCompleted and when we try to store the continuation into the Task, we need to queue the continuation for execution, but my change incorrectly queued it to the thread pool rather than to the captured context.\r\n\r\nFixes https://github.com/dotnet/coreclr/issues/14367\r\ncc: @tarekgh, @kouvel, @mconnew "},{"Id":"6685748619","Type":"IssuesEvent","CreatedAt":"2017-10-07T00:25:45","Actor":"stephentoub","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14367","RelatedDescription":"Closed issue \"await sometimes not posting continuation to current SynchronizationContext\" (#14367) at dotnet/coreclr","RelatedBody":"In the WCF team we are seeing CI test failures due to continuations not posting to the current SynchronizationContext. We have tests to verify that if there's a non-default synchronization context set and you are awaiting an asynchronous WCF call that the await continuation is posted back to the synchronization context. We do this by creating a single threaded synchronization context and running the test via the context. We then compare the managed thread id before and after the await to make sure they are the same. This is to emulate the UI scenario with a single threaded dispatcher.  \r\nThe failure is timing sensitive as these tests succeed on most CI platforms. They are passing on all OSes except Windows, and only fail with a release build and when we are running against a self hosted service. When the service is running in IIS, it changes the timings sufficiently that the failures disappear. We have not been able to repro the issue locally.  \r\n[This](https://github.com/dotnet/wcf/blob/master/src/System.Private.ServiceModel/tests/Scenarios/Client/TypedClient/TypedProxyTests.4.0.0.cs#L168) is one of the failing tests.  \r\nThese tests were working with coreclr build 2.1.0-preview1-25720-03 and started failing with coreclr build 2.1.0-preview1-25730-01.  \r\nI've marked this as blocking partner as we can't move forward our dependency versions (so can't release) without this being fixed."},{"Id":"6685657705","Type":"IssuesEvent","CreatedAt":"2017-10-06T23:34:02","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14373","RelatedDescription":"Opened issue \"[RyuJIT/arm32][JitStress=2][JitStressRegs=3] Assertion failed 'nextAssignedRef->nodeLocation == refLocation || (nextAssignedRef->nodeLocation + 1 == refLocation && nextAssignedRef->delayRegFree)'\" (#14373) at dotnet/coreclr","RelatedBody":"Found in x86_arm_altjit run.\r\n\r\n```\r\nAssert failure(PID 6456 [0x00001938], Thread: 5536 [0x15a0]): Assertion failed 'nextAssignedRef->nodeLocation == refLocation || (nextAssignedRef->nodeLocation + 1 == refLocation && nextAssignedRef->delayRegFree)' in 'testout1:Func_0_5_5_3():struct' (IL size 652)\r\n\r\n    File: d:\\j\\workspace\\x86_arm_altji---2c922e9d\\src\\jit\\lsra.cpp Line: 5961\r\n    Image: D:\\j\\workspace\\x86_arm_altji---2c922e9d\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n```\r\n\r\nTests/configurations:\r\n```\r\nCOMPlus_JitStress=2\r\nCOMPlus_JitStressRegs=3\r\n\r\nJIT\\Methodical\\fp\\exgen\\10w5d_cs_ro\\10w5d_cs_ro.cmd\r\n```\r\n"},{"Id":"6685635716","Type":"IssuesEvent","CreatedAt":"2017-10-06T23:22:55","Actor":"BruceForstall","Repository":"dotnet/coreclr","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/coreclr/issues/14372","RelatedDescription":"Opened issue \"[RyuJIT/arm32][JitStressRegs=3] Assertion failed 'currentInterval->assignedReg != nullptr && currentInterval->assignedReg->regNum == assignedRegister && currentInterval->assignedReg->assignedInterval == currentInterval'\" (#14372) at dotnet/coreclr","RelatedBody":"Found in x86_arm_altjit runs. Example:\r\n\r\n```\r\nAssert failure(PID 4144 [0x00001030], Thread: 5392 [0x1510]): Assertion failed 'currentInterval->assignedReg != nullptr && currentInterval->assignedReg->regNum == assignedRegister && currentInterval->assignedReg->assignedInterval == currentInterval' in 'ILGEN_0x5034b2f4:main():int' (IL size 781)\r\n\r\n    File: d:\\j\\workspace\\x86_arm_altji---1b0983aa\\src\\jit\\lsra.cpp Line: 8092\r\n    Image: D:\\j\\workspace\\x86_arm_altji---1b0983aa\\bin\\tests\\Windows_NT.x86.Checked\\Tests\\Core_Root\\CoreRun.exe\r\n```\r\n\r\nTests/configurations:\r\n```\r\nCOMPlus_JitStress=1\r\nCOMPlus_JitStressRegs=3\r\n\r\nJIT\\Methodical\\fp\\exgen\\1000w1d_cs_ro\\1000w1d_cs_ro.cmd\r\n\r\n\r\nCOMPlus_JitStressRegs=3\r\n\r\nJIT\\Regression\\CLR-x86-JIT\\V1-M09.5-PDC\\b25459\\b25459\\b25459.cmd\r\n```"}],"ResultType":"GitHubEvent"},"CLI":{"Events":[{"Id":"6685871949","Type":"PullRequestEvent","CreatedAt":"2017-10-07T02:01:48","Actor":"KevinRansom","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7785","RelatedDescription":"Merged pull request \"Update CoreSetup to preview1-25806-02 (master)\" (#7785) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"6685744185","Type":"IssuesEvent","CreatedAt":"2017-10-07T00:22:51","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7782","RelatedDescription":"Closed issue \"publish command with -o directive creating directories nested recursively\" (#7782) at dotnet/cli","RelatedBody":"@randolfrf commented on [Tue Aug 22 2017](https://github.com/dotnet/core/issues/885)\n\n# Publish command with -o directive creates nested directories at the -o target\r\n\r\nI have a brand new asp.net core 2 mvc web project. When I run: \r\n\r\n`$dotnet publish -c release -o ./app/compiled`\r\n\r\nApp is built in release mode and published to /app/compiled. Everything works fine. I have the following structure:\r\n..\r\n/app\r\n/app/compiled/\r\n/app/wwwroot/\r\n/app/wwwroot/css\r\n/app/wwwroot/images\r\n/app/wwwroot/js\r\n/app/wwwroot/lib\r\n/app/wwwroot/lib/... (a few more inside lib, with lib data)\r\n..\r\n\r\nThis structured is the intended one, but when trying to run again the command:\r\n\r\n`$dotnet publish -c release -o ./app/compiled`\r\n\r\nI end up with this structure:\r\n\r\n..\r\n/app\r\n/app/compiled/\r\n/app/compiled/app\r\n/app/compiled/app/compiled\r\n/app/compiled/app/compiled/wwwroot\r\n/app/compiled/app/compiled/wwwroot/lib\r\n/app/compiled/app/compiled/wwwroot/lib/... (a few more within lib, one for each package BUT WITHOUT CONTENT)\r\n/app/wwwroot/\r\n/app/wwwroot/css\r\n/app/wwwroot/images\r\n/app/wwwroot/js\r\n/app/wwwroot/lib\r\n/app/wwwroot/lib/... (a few more inside lib with lib data)\r\n..\r\n\r\nEvery time I run the publish with output command a new /app/compiled/ directory with partial contents is being created in the previous /app/compiled/ directory. After 4 executions I end up having:\r\n\r\n/app/compiled/app/compiled/app/compiled/app/compiled/\r\n\r\n# General\r\n\r\nI'm running .netCore 2, installed SDK from https://www.microsoft.com/net/download/core, on a fresh new machine running macOS 10.12.6. \r\n\r\nI'm running: \r\n\r\n`dotnet new mvc`\r\n\r\nAs template and that's all. No other nuget package, nor any other extension.\n\n---\n\n@randolfrf commented on [Tue Aug 22 2017](https://github.com/dotnet/core/issues/885#issuecomment-324185318)\n\nJust to be clear, If I try again with another project (of another type) the behavior is the same.\n\n"},{"Id":"6685447062","Type":"PullRequestEvent","CreatedAt":"2017-10-06T22:06:42","Actor":"dotnet-bot","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/pull/7785","RelatedDescription":"Opened pull request \"Update CoreSetup to preview1-25806-02 (master)\" (#7785) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"6685396798","Type":"IssuesEvent","CreatedAt":"2017-10-06T21:49:43","Actor":"Petermarcu","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/cli/issues/7784","RelatedDescription":"Opened issue \"Invalid .csproj.nuget.g.props file generated on dotnet restore on Linux\" (#7784) at dotnet/cli","RelatedBody":"@AnisAli commented on [Mon Sep 11 2017](https://github.com/dotnet/core/issues/960)\n\n# invalid csproj.nuget.g.props file generated by dotnet restore on Linux\r\n\r\nI do have binary zip file and want to pack that zip file in nupkg as content therefore I am adding my binary file as content in csproj file\r\n\r\n**basicmodule.csproj**\r\n\r\n```\r\n <ItemGroup>\r\n    <Content Include=\"package.zip\">\r\n     <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>\r\n     <Pack>True</Pack>\r\n      <BuildAction>Content</BuildAction>\r\n      <PackagePath>contentFiles\\any\\any\\MyPackage\\package.zip</PackagePath>\r\n    </Content>\r\n </ItemGroup>\r\n```\r\n\r\nafter packing basicmodule.csproj  getting nuget package \"basicmodule.1.0.1.nupkg and used this nuget package in another project called advancemodule.csproj\r\n\r\n**basicmodule.1.0.1 nuspec file** after packing basicmodule.csproj\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<package xmlns=\"http://schemas.microsoft.com/packaging/2013/05/nuspec.xsd\">\r\n  <metadata>\r\n    <id>BasicModule</id>\r\n    <version>1.0.1</version>\r\n    <authors>BasicModule</authors>\r\n    <owners>BasicModule</owners>\r\n    <requireLicenseAcceptance>false</requireLicenseAcceptance>\r\n    <description>The BasicModule is a simple example</description>\r\n    <dependencies>\r\n      <group targetFramework=\".NETStandard2.0\">\r\n        <dependency id=\"Contracts\" version=\"1.0.1.2\" exclude=\"Build,Analyzers\" />\r\n      </group>\r\n    </dependencies>\r\n    <contentFiles>\r\n      <files include=\"any/any/MyPackage/package.zip\" buildAction=\"Content\" />\r\n    </contentFiles>\r\n  </metadata>\r\n</package>\r\n```\r\n\r\nWhen I run dotnet restore on advancemodule.csproj in the Linux enviornment, dotnet restore generates the basicmodule.1.0.1.csproj.nuget.g.props file with incorrect XML tag, instead of content tag for package.zip it generates compile tag\r\n\r\n**basicmodule.1.0.1.csproj.nuget.g.props** generated inside obj folder after dotnet restore\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\r\n<Project ToolsVersion=\"14.0\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n  <PropertyGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <RestoreSuccess Condition=\" '$(RestoreSuccess)' == '' \">True</RestoreSuccess>\r\n    <RestoreTool Condition=\" '$(RestoreTool)' == '' \">NuGet</RestoreTool>\r\n    <ProjectAssetsFile Condition=\" '$(ProjectAssetsFile)' == '' \">/build/src/BasicModule/obj/project.assets.json</ProjectAssetsFile>\r\n    <NuGetPackageRoot Condition=\" '$(NuGetPackageRoot)' == '' \">/root/.nuget/packages/</NuGetPackageRoot>\r\n    <NuGetPackageFolders Condition=\" '$(NuGetPackageFolders)' == '' \">/root/.nuget/packages/;/usr/share/dotnet/sdk/NuGetFallbackFolder</NuGetPackageFolders>\r\n    <NuGetProjectStyle Condition=\" '$(NuGetProjectStyle)' == '' \">PackageReference</NuGetProjectStyle>\r\n    <NuGetToolVersion Condition=\" '$(NuGetToolVersion)' == '' \">4.3.0</NuGetToolVersion>\r\n  </PropertyGroup>\r\n  <PropertyGroup>\r\n    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>\r\n  </PropertyGroup>\r\n  <ItemGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n   \r\n <Compile \r\nInclude=\"$(NuGetPackageRoot)basicmodule/1.0.1/contentfiles/any/any/MyPackage/package.zip\" Condition=\"Exists('$(NuGetPackageRoot)basic$\r\n      <NuGetPackageId>BasicModule</NuGetPackageId>\r\n      <NuGetPackageVersion>1.0.1</NuGetPackageVersion>\r\n      **<NuGetItemType>Compile</NuGetItemType>**\r\n      <Private>False</Private>\r\n      <Link>MyPackage/package.zip</Link>\r\n    </Compile>\r\n\r\n  </ItemGroup>\r\n  <ImportGroup Condition=\" '$(ExcludeRestorePackageImports)' != 'true' \">\r\n    <Import Project=\"$(NuGetPackageRoot)xunit.runner.visualstudio/2.2.0/build/netcoreapp1.0/xunit.runner.visualstudio.props\" Condition=\"Exists('$(NuGetPackageRoot)xunit.runner.visualstudio/$\r\n    <Import Project=\"/usr/share/dotnet/sdk/NuGetFallbackFolder/microsoft.netcore.app/2.0.0/build/netcoreapp2.0/Microsoft.NETCore.App.props\" Condition=\"Exists('/usr/share/dotnet/sdk/NuGetFal$\r\n    <Import Project=\"$(NuGetPackageRoot)microsoft.net.test.sdk/15.3.0-preview-20170628-02/build/netcoreapp1.0/Microsoft.Net.Test.Sdk.props\" Condition=\"Exists('$(NuGetPackageRoot)microsoft.n$\r\n  </ImportGroup>\r\n</Project>\r\n```\r\n\r\nBecause of **<Compile>** tag for contentfile in basicmodule.1.0.1.csproj.nuget.g.props getting error during dotnet build\r\n\r\n> `CSC : error CS2015: '/root/localnuget/basicmodule/1.0.1/contentFiles/any/any/MyPackage/package.zip' is a binary file instead of a text file [/build/src/AdvanceModule/AdvanceModule.csproj]`\r\n\r\n\r\n## Expected Behavior should be same as Windows \r\n\r\n - generate csproj.nuget.g.props file with Content tag like\r\n```\r\n<Content Include=\"$(NuGetPackageRoot)basicmodule\\1.0.1\\contentFiles\\any\\any\\MyPackage\\package.zip\" Condition=\"Exists('$(NuGetPackageRoot)basicmodule\\1.0.1\\contentFiles\\any\\any\\MyPackage\\package.zip')\">\r\n      <NuGetPackageId>BasicModule</NuGetPackageId>\r\n      <NuGetPackageVersion>1.0.1</NuGetPackageVersion>\r\n      <NuGetItemType>Content</NuGetItemType>\r\n      <Private>False</Private>\r\n      <Link>MyPackage\\package.zip</Link>\r\n    </Content>\r\n```\r\n## Actual \r\n```\r\n<Compile \r\nInclude=\"$(NuGetPackageRoot)basicmodule/1.0.1/contentfiles/any/any/MyPackage/package.zip\" Condition=\"Exists('$(NuGetPackageRoot)basic$\r\n      <NuGetPackageId>BasicModule</NuGetPackageId>\r\n      <NuGetPackageVersion>1.0.1</NuGetPackageVersion>\r\n      **<NuGetItemType>Compile</NuGetItemType>**\r\n      <Private>False</Private>\r\n      <Link>MyPackage/package.zip</Link>\r\n    </Compile>\r\n``` \r\nbecause of this compiler try to compile package.zip file\r\n\r\n\n\n"},{"Id":"6685291079","Type":"PullRequestEvent","CreatedAt":"2017-10-06T21:17:17","Actor":"eerhardt","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7780","RelatedDescription":"Merged pull request \"Update CoreSetup to preview1-25806-01 (master)\" (#7780) at dotnet/cli","RelatedBody":"/cc @dotnet/dotnet-cli"},{"Id":"6685253373","Type":"PullRequestEvent","CreatedAt":"2017-10-06T21:06:31","Actor":"janvorli","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/cli/pull/7771","RelatedDescription":"Merged pull request \"Update CentOS 6 Dockerfile\" (#7771) at dotnet/cli","RelatedBody":"Replace the base image with an updated one that now contains\r\nclang 3.9 with PGO support and also the new git. So we don't\r\nneed to build it here anymore.\r\n"},{"Id":"6685163249","Type":"IssuesEvent","CreatedAt":"2017-10-06T20:42:43","Actor":"livarcocc","Repository":"dotnet/cli","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/cli/issues/7570","RelatedDescription":"Closed issue \"Enable 'dotnet test' to be run on published output\" (#7570) at dotnet/cli","RelatedBody":"## Steps to reproduce\r\nAfter publishing users should be able to run tests on an already compiled executable.\r\nWould address [dotnet/core #917](https://github.com/dotnet/core/issues/917)\r\nThis is more important with the development of IL Linker [#915](https://github.com/dotnet/core/issues/915). The [Linker Instructions](https://github.com/dotnet/core/blob/master/samples/linker-instructions.md) mention that the final executables need to be tested after linking.\r\n\r\n## Expected  behavior\r\nBe able to run 'dotnet test' on published output.\r\n\r\n## Actual behavior\r\nYou can not today. (Or we need to add documentation if you can!)\r\n\r\n@smalpani-msft\r\n\r\n\r\n\r\n"}],"ResultType":"GitHubEvent"},"Standard":{"Events":[{"Id":"6685680055","Type":"IssuesEvent","CreatedAt":"2017-10-06T23:45:39","Actor":"terrajobst","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/529","RelatedDescription":"Opened issue \".NET Standard and Click Once\" (#529) at dotnet/standard","RelatedBody":"## Summary\r\n\r\nThere is currently a bug that prevents ClickOnce setups from correctly deploying all the necessary .NET Standard support files. But you can work this around by editing your project file.\r\n\r\n## Symptoms and root cause\r\n\r\nRunning the application from inside of Visual Studio succeeds, so does publishing and installing. But when the application is launched, it crashes with with an exception [like this one](https://github.com/dotnet/core/issues/1010):\r\n\r\n> Unable to initialize the application (Could not load file or assembly 'System.Runtime, Version=4.1.1.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The System cannot find the file specified.\r\n\r\nThe root cause is bug in the way ClickOnce discovers and packages dependencies from the application project.\r\n\r\n## Workaround\r\n\r\nIn order to make sure the right files are added to your installer, you need to add a custom target to your project file:\r\n\r\n1. Right click your project and select **Unload Project**.\r\n2. Then, right click your project again and select **Edit \\<your project\\>**.\r\n3. Locate the first `<Import>` element and copy & paste the code from below before the `<Import>` element.\r\n4. Right click your project and select **Reload Project**\r\n\r\n```xml\r\n  <ItemGroup>\r\n    <PublishFile Include=\"netfx.force.conflicts\">\r\n      <Visible>False</Visible>\r\n      <PublishState>Exclude</PublishState>\r\n      <IncludeHash>True</IncludeHash>\r\n      <FileType>Assembly</FileType>\r\n    </PublishFile>\r\n  </ItemGroup>\r\n  <Target Name=\"FixClickOnceDependencies\" BeforeTargets=\"_DeploymentComputeClickOnceManifestInfo\">\r\n    <ItemGroup>\r\n      <_noCopyRefs Include=\"@(ReferencePath)\" Condition=\"'%(ReferencePath.Private)' == 'false'\" />\r\n      <_noCopyRefsByFileName Include=\"@(_noCopyRefs->'%(FileName)')\">\r\n        <OriginalItem>%(Identity)</OriginalItem>\r\n      </_noCopyRefsByFileName>\r\n      <_libByFileName Include=\"@(ReferenceCopyLocalPaths->'%(FileName)')\">\r\n        <OriginalItem>%(Identity)</OriginalItem>\r\n      </_libByFileName>\r\n      <_overlappingRefByFileName Include=\"@(_noCopyRefsByFileName)\" Condition=\"'@(_noCopyRefsByFileName)' == '@(_libByFileName)' AND '%(Identity)' != ''\" />\r\n      <_overlappingLibByFileName Include=\"@(_libByFileName)\" Condition=\"'@(_noCopyRefsByFileName)' == '@(_libByFileName)' AND '%(Identity)' != ''\" />\r\n      <_overlappingRef Include=\"@(_overlappingRefByFileName->'%(OriginalItem)')\" />\r\n      <_overlappingLib Include=\"@(_overlappingLibByFileName->'%(OriginalItem)')\" />\r\n    </ItemGroup>\r\n    <ItemGroup Condition=\"'@(_overlappingRef)' != ''\">\r\n      <ReferencePath Remove=\"@(_overlappingRef)\" />\r\n      <ReferencePath Include=\"@(_overlappingLib)\">\r\n        <Private>True</Private>\r\n      </ReferencePath>\r\n    </ItemGroup>\r\n  </Target>\r\n```"},{"Id":"6685025919","Type":"IssuesEvent","CreatedAt":"2017-10-06T20:06:21","Actor":"Petermarcu","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/528","RelatedDescription":"Opened issue \".Close() on TcpClient & Socket missing for some platforms\" (#528) at dotnet/standard","RelatedBody":"@danielgerlag commented on [Mon Sep 11 2017](https://github.com/dotnet/core/issues/956)\n\n# .Close() on TcpClient & Socket missing for some platforms\r\n\r\n.Close() on TcpClient & Socket (System.Net.Sockets) is available in .net standard 2.0, only if compiling on a Windows machine... if I try compile on a Mac, these methods are missing.\r\nAlso, have to explicitly reference `System.Net.Sockets` when building from the Mac.\r\n\r\n# General\r\n\r\n.NET Standard 2.0\r\nWindows 10 vs. MacOS\r\n\n\n---\n\n@Petermarcu commented on [Thu Oct 05 2017](https://github.com/dotnet/core/issues/956#issuecomment-334622113)\n\n@weshaggard, we use the same ref's in both cases don't we? Any idea what may be going on?\n\n---\n\n@weshaggard commented on [Fri Oct 06 2017](https://github.com/dotnet/core/issues/956#issuecomment-334810208)\n\nYes we use the same ref everywhere when targeting netstandard20. @danielgerlag can you share more of how you are building? \r\n\r\nClose should be available on both of those types when targeting netstandard20\n\n"},{"Id":"6678441453","Type":"IssuesEvent","CreatedAt":"2017-10-05T14:15:42","Actor":"Priya-John","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/527","RelatedDescription":"Opened issue \"HttpCookie class is not present in .netCore\" (#527) at dotnet/standard","RelatedBody":""},{"Id":"6674601934","Type":"PullRequestEvent","CreatedAt":"2017-10-04T19:06:28","Actor":"eerhardt","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/standard/pull/525","RelatedDescription":"Merged pull request \"[dev/release/2.0.0] Move web sources before potentially local sources\" (#525) at dotnet/standard","RelatedBody":"Followup to https://github.com/dotnet/standard/pull/523 (initial API implementation). Adds a workaround to a `--source` bug that I added to the CoreFX repo API PR discussed at https://github.com/dotnet/corefx/pull/24378#discussion_r142285244."},{"Id":"6670813476","Type":"IssuesEvent","CreatedAt":"2017-10-04T02:27:22","Actor":"tmenier","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/issues/526","RelatedDescription":"Opened issue \"Did the term \"portable\" die with PCLs?\" (#526) at dotnet/standard","RelatedBody":"Not sure if this is a good place this question. I have a library that used to be a PCL and has since been updated to target .NET Standard. Should I no longer say the library is \"portable\"? Is there a replacement term I should use? \"Portable\" seems appropriate, yet the term seems to have died with PCLs and I'm not entirely sure why. Thanks!"},{"Id":"6668348275","Type":"PullRequestEvent","CreatedAt":"2017-10-03T15:30:58","Actor":"dagood","Repository":"dotnet/standard","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/standard/pull/525","RelatedDescription":"Opened pull request \"[dev/release/2.0.0] Move web sources before potentially local sources\" (#525) at dotnet/standard","RelatedBody":"Followup to https://github.com/dotnet/standard/pull/523 (initial API implementation). Adds a workaround to a `--source` bug that I added to the CoreFX repo API PR discussed at https://github.com/dotnet/corefx/pull/24378#discussion_r142285244."}],"ResultType":"GitHubEvent"},"CoreFx":{"Events":[{"Id":"6685782564","Type":"PullRequestEvent","CreatedAt":"2017-10-07T00:49:17","Actor":"SimonCropp","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24494","RelatedDescription":"Opened pull request \"add task support to servicebase\" (#24494) at dotnet/corefx","RelatedBody":""},{"Id":"6685696135","Type":"PullRequestEvent","CreatedAt":"2017-10-06T23:54:20","Actor":"safern","Repository":"dotnet/corefx","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corefx/pull/24493","RelatedDescription":"Opened pull request \"Add Configurations.props to performance tests\" (#24493) at dotnet/corefx","RelatedBody":"Fixes: https://github.com/dotnet/corefx/issues/24153\r\n\r\nIf we don't have Configurations.props we get the default build configuration which doesn't match with the bin placing configurations. After chatting with @weshaggard offline we decided to add Configurations.props into performance tests projects.\r\n\r\ncc: @danmosemsft @ericstj @stephentoub "}],"ResultType":"GitHubEvent"},"Roslyn":{"Events":[{"Id":"6685872674","Type":"PullRequestEvent","CreatedAt":"2017-10-07T02:02:26","Actor":"KevinRansom","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22538","RelatedDescription":"Merged pull request \"Merge master to dev15.5.x\" (#22538) at dotnet/roslyn","RelatedBody":"\nThis is an automatically generated pull request from master into dev15.5.x.\n\n``` bash\ngit fetch --all\ngit checkout merges/master-to-dev15.5.x-20171005-070013\ngit reset --hard upstream/dev15.5.x\ngit merge upstream/master\n# Fix merge conflicts\ngit commit\ngit push merges/master-to-dev15.5.x-20171005-070013 --force\n```\n\nOnce all conflicts are resolved and all the tests pass, you are free to merge the pull request."},{"Id":"6685813638","Type":"IssuesEvent","CreatedAt":"2017-10-07T01:12:44","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/20678","RelatedDescription":"Closed issue \"Understand Customer Impact by hiding UseLegacyManagedEE option\" (#20678) at dotnet/roslyn","RelatedBody":"let’s find out why customers are turning on legacy EE instead of using the default.\r\n- Is it because they are carrying over the settings with out knowing\r\n- Is there a feature in legacy that is missing in the new. \r\n\r\n"},{"Id":"6685702576","Type":"IssuesEvent","CreatedAt":"2017-10-06T23:58:03","Actor":"333fred","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22588","RelatedDescription":"Opened issue \"AnonymousTypeCreation initializer IsImplicit is not calculated correctly.\" (#22588) at dotnet/roslyn","RelatedBody":"Currently, we calculate IsImplicit from the operand of the AnonymousTypeCreationInitializer. However, this isn't correct as the operand can be an implicit conversion, but the assignment isn't. https://github.com/dotnet/roslyn/blob/master/src/Compilers/VisualBasic/Portable/Operations/VisualBasicOperationFactory_Methods.vb#L200 is the affected line, see https://github.com/dotnet/roslyn/pull/22056/files/fe06e85039aee67749b13c161eeb39f79586bf96#r143312625."},{"Id":"6685693882","Type":"IssuesEvent","CreatedAt":"2017-10-06T23:53:04","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/8345","RelatedDescription":"Closed issue \"Raise event in VB should represented by an EventReferenceExepression operation\" (#8345) at dotnet/roslyn","RelatedBody":"For this code snippet:\n\n``` vb\nRaiseEvent Mumble(Me, args)\n```\n\nThere should be an EventReferenceExpression for `Mumble`, but currently it is return a FieldReferenceExpression instead.\n\nThere's a testcase `EventAndMethodReferencesVisualBasic` for this bug:\nsrc\\compilers\\visualbasic\\test\\semantic\\diagnostics\\operationanalyzertests.vb\n"},{"Id":"6685681937","Type":"IssuesEvent","CreatedAt":"2017-10-06T23:46:36","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/8567","RelatedDescription":"Closed issue \"Raising-event should be an independent `IOperation`\" (#8567) at dotnet/roslyn","RelatedBody":"Right now it is represented as method invocation.\r\n\r\nProposals:\r\n\r\n```cs\r\npublic interface IRaiseEventExpression : IHasArgumentsExpression\r\n{\r\n    /// <summary>\r\n    /// Reference to the event to be raised.\r\n    /// </summary>\r\n    IEventReferenceExpression EventReference { get; }\r\n}\r\n```\r\n\r\nor\r\n\r\n```cs\r\npublic interface IRaiseEventExpression : IHasArgumentsExpression\r\n{\r\n    /// <summary>\r\n    /// Referenced event.\r\n    /// </summary>\r\n    IEventSymbol Event { get; }\r\n\r\n    IOperation Instance { get; }\r\n}\r\n```"},{"Id":"6685681935","Type":"PullRequestEvent","CreatedAt":"2017-10-06T23:46:36","Actor":"genlu","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22243","RelatedDescription":"Merged pull request \"Add IRaiseEventStatement operation for VB\" (#22243) at dotnet/roslyn","RelatedBody":"```cs\r\npublic interface IRaiseEventStatement : IHasArguments\r\n{\r\n    /// <summary>\r\n    /// Reference to the event to be raised.\r\n    /// </summary>\r\n    IEventReferenceExpression EventReference { get; }\r\n}\r\n```\r\nNote that to accommodate this change, I also changed `IHasArgumentsExpression` to `IHasArguments`.\r\n\r\nFix #8567 and #8345"},{"Id":"6685663979","Type":"IssuesEvent","CreatedAt":"2017-10-06T23:37:21","Actor":"333fred","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22587","RelatedDescription":"Opened issue \"Unexpected Tuple Conversions\" (#22587) at dotnet/roslyn","RelatedBody":"There are some unexpected tuple conversions in the tree. See https://github.com/dotnet/roslyn/pull/22056/files/fe06e85039aee67749b13c161eeb39f79586bf96#r143312179."},{"Id":"6685656611","Type":"PullRequestEvent","CreatedAt":"2017-10-06T23:33:28","Actor":"jinujoseph","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/roslyn/pull/22435","RelatedDescription":"Merged pull request \"enabling more IOperation tests that used to be skipped\" (#22435) at dotnet/roslyn","RelatedBody":"re-enabled skipped IOperation tests that got fixed now.\r\n\r\nthis address this issue - https://github.com/dotnet/roslyn/issues/22395"},{"Id":"6685580146","Type":"IssuesEvent","CreatedAt":"2017-10-06T22:57:37","Actor":"jcouv","Repository":"dotnet/roslyn","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/roslyn/issues/22332","RelatedDescription":"Closed issue \"'dotnet build' produces no useful error messages\" (#22332) at dotnet/roslyn","RelatedBody":"_From @shinmai on August 30, 2017 10:19_\n\n## Steps to reproduce\r\ncreate a new project with `dotnet new console` \r\nbreak project by making Program.cs unbuildable \r\nexecute `dotnet build` \r\n\r\n## Expected  behavior\r\nUseful error message referencing source file names and line numbers.\r\n\r\n## Actual behavior\r\nerror message is basically \"it didn't work\"\r\n\r\n```\r\nC:\\_prj\\a1>dotnet build\r\nMicrosoft (R) Build Engine version 15.3.409.57025 for .NET Core\r\nCopyright (C) Microsoft Corporation. All rights reserved.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.0.0\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): error MSB6006: \"C:\\Program Files\\dotnet\\sdk\\2.0.0\\Roslyn\\RunCsc.cmd\" exited with code 1. [C:\\_prj\\a1\\a1.csproj]\r\n\r\nBuild FAILED.\r\n\r\nC:\\Program Files\\dotnet\\sdk\\2.0.0\\Roslyn\\Microsoft.CSharp.Core.targets(84,5): error MSB6006: \"C:\\Program Files\\dotnet\\sdk\\2.0.0\\Roslyn\\RunCsc.cmd\" exited with code 1. [C:\\_prj\\a1\\a1.csproj]\r\n    0 Warning(s)\r\n    1 Error(s)\r\n\r\nTime Elapsed 00:00:01.46\r\n```\r\n\r\n## Environment data\r\n`dotnet --info` output:\r\n\r\n> .NET Command Line Tools (2.0.0)\r\n> \r\n> Product Information:\r\n>  Version:            2.0.0\r\n>  Commit SHA-1 hash:  cdcd1928c9\r\n> \r\n> Runtime Environment:\r\n>  OS Name:     Windows\r\n>  OS Version:  10.0.15063\r\n>  OS Platform: Windows\r\n>  RID:         win10-x64\r\n>  Base Path:   C:\\Program Files\\dotnet\\sdk\\2.0.0\\\r\n> \r\n> Microsoft .NET Core Shared Framework Host\r\n> \r\n>   Version  : 2.0.0\r\n>   Build    : e8b8861ac7faf042c87a5c2f9f2d04c98b69f28d\r\n\r\n\r\n\r\n\r\n\r\n\n\n_Copied from original issue: dotnet/cli#7556_"}],"ResultType":"GitHubEvent"},"CoreRT":{"Events":[{"Id":"6685911246","Type":"PullRequestEvent","CreatedAt":"2017-10-07T02:38:15","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4688","RelatedDescription":"Merged pull request \"Merge nmirror to master\" (#4688) at dotnet/corert","RelatedBody":""},{"Id":"6685812261","Type":"PullRequestEvent","CreatedAt":"2017-10-07T01:11:36","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4689","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#4689) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6685801949","Type":"PullRequestEvent","CreatedAt":"2017-10-07T01:03:48","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4689","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#4689) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6685796565","Type":"PullRequestEvent","CreatedAt":"2017-10-07T00:59:54","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4688","RelatedDescription":"Opened pull request \"Merge nmirror to master\" (#4688) at dotnet/corert","RelatedBody":""},{"Id":"6685782476","Type":"PullRequestEvent","CreatedAt":"2017-10-07T00:49:12","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4687","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#4687) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6685764218","Type":"PullRequestEvent","CreatedAt":"2017-10-07T00:36:14","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4687","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#4687) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6685469657","Type":"PullRequestEvent","CreatedAt":"2017-10-06T22:14:33","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4686","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#4686) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6684718613","Type":"PullRequestEvent","CreatedAt":"2017-10-06T18:47:55","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4685","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#4685) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6684711395","Type":"PullRequestEvent","CreatedAt":"2017-10-06T18:46:06","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4685","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#4685) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6684578191","Type":"PullRequestEvent","CreatedAt":"2017-10-06T18:14:34","Actor":"stephentoub","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4683","RelatedDescription":"Merged pull request \"Mirror changes from dotnet/coreclr\" (#4683) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"},{"Id":"6684263752","Type":"PullRequestEvent","CreatedAt":"2017-10-06T16:56:59","Actor":"jkotas","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/corert/pull/4684","RelatedDescription":"Merged pull request \"Merge changes from TFS\" (#4684) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6684261922","Type":"PullRequestEvent","CreatedAt":"2017-10-06T16:56:31","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4684","RelatedDescription":"Opened pull request \"Merge changes from TFS\" (#4684) at dotnet/corert","RelatedBody":"When merging, this PR, please ensure a merge commit is created as automation requires the merge commit.  Do not 'Squash and merge' or 'Rebase and merge'!"},{"Id":"6684181471","Type":"PullRequestEvent","CreatedAt":"2017-10-06T16:36:38","Actor":"dotnet-bot","Repository":"dotnet/corert","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/corert/pull/4683","RelatedDescription":"Opened pull request \"Mirror changes from dotnet/coreclr\" (#4683) at dotnet/corert","RelatedBody":"This PR contains mirrored changes from dotnet/coreclr\n\n\n**Please REBASE this PR when merging**"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"912821941706268673","CreatedAt":"2017-09-26T23:31:24+00:00","UserScreenname":"dotnet","Text":"Build a web service with F# and .NET Core 2.0 https://t.co/2jSgo1gbty","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":112,"FavoriteCount":64,"RawContent":null}]}},"RunOn":"2017-10-07T05:30:20.2522999Z","RunDurationInMilliseconds":7224}