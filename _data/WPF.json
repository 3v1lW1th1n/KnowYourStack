{"Data":{"GitHub":{"Issues":[{"Id":"488854074","IsPullRequest":true,"CreatedAt":"2019-09-05T00:11:42","Actor":"vatsan-madhavan","Number":"1763","RawContent":null,"Title":"Update Intellisense XML data ","State":"closed","Body":"#### Description\r\n\r\nUpdates Intellisense XML data from a latest build from https://ops.microsoft.com/#/sites/Docs/docsets/dotnet-api-docs?tabName=builds. \r\n\r\nIntellisense data for `WindowsBase.dll` was not being generated correctly until recently. `WindowsBase.dll` in `Microsoft.NetCore.App` was _hiding_ `WindowsBase.dll` in `Microsoft.WindowsDesktop.App`. \r\n\r\nThis problem was recently fixed in `dotnet/dotnet-api-docs`, and this PR incorporates updated intellisense XML's generated from a recent build from `dotnet/dotnet-api-docs` repo. \r\n\r\n#### Customer impact\r\n\r\nIntellisense XML's for API's exposed through WindowsBase.dll will now be available through the SDK.\r\n\r\n#### Regression? \r\n\r\nNo\r\n\r\n#### Risk\r\n\r\nVery low.\r\n\r\n#### Severity\r\n\r\nMedium - doesn't affect WPF directly, but affects the overall IDE experience.\r\n\r\n#### Workaround\r\n\r\nNone.\r\n\r\nRelated: https://github.com/dotnet/dotnet-api-docs/issues/2602\r\nFixes: https://github.com/dotnet/wpf/issues/1597\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1763","RelatedDescription":"Closed or merged PR \"Update Intellisense XML data \" (#1763)"},{"Id":"489321896","IsPullRequest":true,"CreatedAt":"2019-09-04T18:45:48","Actor":"dotnet-maestro[bot]","Number":"1769","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190904.7\r\n- **Date Produced**: 9/4/2019 6:06 PM\r\n- **Commit**: 6fe1521ba7f0ac95c7b7bee4c512223aa6643bfe\r\n- **Branch**: refs/heads/release/3.1\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.1-preview1.19454.7\r\n\r\n[marker]: <> (End:fd5f4619-cca3-4e12-8f56-08d72a4ce301)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 3.0.0-rc1-19429-05 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1769","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/winforms\" (#1769)"},{"Id":"489269755","IsPullRequest":true,"CreatedAt":"2019-09-04T16:35:17","Actor":"rladuca","Number":"1768","RawContent":null,"Title":"Fixing removal of None from Page under certain conditions","State":"open","Body":"Addresses #1758 \r\n\r\nFixing removal of None from Page under certain conditions (EnableDefaultApplicationDefinition or EnableDefaultPageItems is false).\r\n\r\nFurther adding a fix to ensure this doesn't result in ApplicationDefinition being included in Page as well when EnableDefaultApplicationDefinition is false.\r\n\r\n@nguerrera Can you take a look at this as well?  Thanks!","Url":"https://github.com/dotnet/wpf/pull/1768","RelatedDescription":"Open PR \"Fixing removal of None from Page under certain conditions\" (#1768)"},{"Id":"489123369","IsPullRequest":true,"CreatedAt":"2019-09-04T12:15:27","Actor":"dotnet-maestro[bot]","Number":"1767","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190904.1\r\n- **Date Produced**: 9/4/2019 11:55 AM\r\n- **Commit**: 9862e6917247b80edaef72f1e08f7bc059d5c482\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19454.1\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1767","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1767)"},{"Id":"488891622","IsPullRequest":false,"CreatedAt":"2019-09-04T04:27:46","Actor":"omariom","Number":"1766","RawContent":null,"Title":"Is PresentationCore built with Debug configuration? ","State":"closed","Body":"* .NET Core Version: 3.0.0-preview8-28405-07, 3.0.0-preview6-27804-01\r\n* Windows version: 1903\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n \r\n **Problem description:**\r\n\r\nWhile looking at the jitted code of PresentationCore, found that the code was not optimized.\r\nTurned out the assembly has optimizations explicitly disabled.\r\n\r\n![image](https://user-images.githubusercontent.com/1781701/64218473-b4da7c80-ceb9-11e9-9074-d81ed788edba.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/1766","RelatedDescription":"Closed issue \"Is PresentationCore built with Debug configuration? \" (#1766)"},{"Id":"488871624","IsPullRequest":true,"CreatedAt":"2019-09-04T00:00:48","Actor":"dotnet-maestro[bot]","Number":"1765","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190903.3\r\n- **Date Produced**: 9/3/2019 11:20 PM\r\n- **Commit**: dc6297c0fb269c3a78ce36333012753c6555aeb9\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19453.3\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.Win32.Registry** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.App** -> 3.0.0-rc1-19453-06 (parent: Microsoft.Private.Winforms)\r\n- **System.CodeDom** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.Configuration.ConfigurationManager** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.Diagnostics.EventLog** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.DirectoryServices** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.Drawing.Common** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.Emit** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.Reflection.MetadataLoadContext** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.AccessControl** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Cryptography.Xml** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Permissions** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.Security.Principal.Windows** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.Windows.Extensions** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.Platforms** -> 3.0.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n- **System.IO.Packaging** -> 4.6.0-rc1.19453.4 (parent: Microsoft.NETCore.App)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1765","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1765)"},{"Id":"488856466","IsPullRequest":false,"CreatedAt":"2019-09-03T22:39:36","Actor":"janvorli","Number":"1764","RawContent":null,"Title":"Add support for unloading Assembly with WPF control in .NET Core","State":"open","Body":"The .NET Core 3.0 has a new feature to enable unloading assemblies from memory, called unloadable AssemblyLoadContext. This feature is useful e.g. for implementing unloadable plugins.\r\n\r\nIn WPF, the `MS.Internal.Resources.ResourceManagerWrapper` holds on the assemblies containing controls forever (the assemblies are added to an internal container in the `AppDomain.CurrentDomain.AssemblyLoad` event handler and never removed).\r\nSo when the assembly is loaded into an unloadable `AssemblyLoadContext`, the resource container prevents the assembly from ever being unloaded, as the `AssemblyLoadContext` unloadability relies on GC and all references to the assembly need to go away before it can be unloaded.\r\n\r\nTo make WPF unloadability friendly, adding an ability to remove an assembly from the resource container would be needed. \r\n\r\nIt seems the following changes should be sufficient:\r\n* In the existing `AppDomain.CurrentDomain.AssemblyLoad` event handler in the `ResourceContainer` , the resource manager hooks the `AssemblyLoadContext.Unloading` event for all assemblies that have `IsCollectible` property true. The `AssemblyLoadEvent.GetLoadContext(Assembly)` would be used to get the context to hook the event handler on from the assembly.\r\n* When the `Unloading` event fires, the resource container removes the assembly from its cache \r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/1764","RelatedDescription":"Open issue \"Add support for unloading Assembly with WPF control in .NET Core\" (#1764)"},{"Id":"488849618","IsPullRequest":true,"CreatedAt":"2019-09-03T22:35:41","Actor":"dotnet-maestro[bot]","Number":"1762","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190903.2\r\n- **Date Produced**: 9/3/2019 9:58 PM\r\n- **Commit**: dcc9ebf00f88ad7d7e6254b60bd84d285a176725\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19453.2\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1762","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1762)"},{"Id":"488511062","IsPullRequest":true,"CreatedAt":"2019-09-03T10:04:23","Actor":"Simon-IT","Number":"1761","RawContent":null,"Title":"Hit testing by geometry fails if more than one matrix trasformation is applied to a geometry.","State":"open","Body":"This is related to my issue [642](https://github.com/dotnet/wpf/issues/642).  In the hit testing by geometry algotithm, the order in which the transformations are crosses is wrong. In the issue [642](https://github.com/dotnet/wpf/issues/642) there is a project to test in very simple manner the problem.","Url":"https://github.com/dotnet/wpf/pull/1761","RelatedDescription":"Open PR \"Hit testing by geometry fails if more than one matrix trasformation is applied to a geometry.\" (#1761)"},{"Id":"488166993","IsPullRequest":false,"CreatedAt":"2019-09-02T12:31:08","Actor":"GeraudFabien","Number":"1760","RawContent":null,"Title":"Nested MultiBinding(s)","State":"open","Body":"hello,\r\nI would like to have this Feature resolved https://stackoverflow.com/questions/10280463/nested-multibindings.\r\n\r\nI won't explain it again because they explain well better than me. In a nutshell i want to be able to make multibing inside a multibinding.\r\nFeel free to ask me more detail if you want.\r\n\r\nThanks in advance.","Url":"https://github.com/dotnet/wpf/issues/1760","RelatedDescription":"Open issue \"Nested MultiBinding(s)\" (#1760)"},{"Id":"487771389","IsPullRequest":true,"CreatedAt":"2019-08-31T14:45:57","Actor":"dotnet-maestro[bot]","Number":"1759","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190831.2\r\n- **Date Produced**: 8/31/2019 1:21 PM\r\n- **Commit**: 8724b81dad3790a8e0ef54fd0cf448fc88d8cf8f\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19431.2\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1759","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1759)"},{"Id":"487766551","IsPullRequest":false,"CreatedAt":"2019-08-31T12:43:24","Actor":"onovotny","Number":"1758","RawContent":null,"Title":"EnableDefaultApplicationDefinition to false prevents Page's from working","State":"open","Body":"* .NET Core Version: (e.g. 3.0 Preview1, or daily build number, use `dotnet --info`) 3.0 preview 8\r\n\r\n <!-- Read https://github.com/dotnet/wpf/blob/master/Documentation/issue-guide.md -->\r\n \r\n **Problem description:**\r\n\r\nIf you set `EnableDefaultApplicationDefinition` to `false`, the other page XAML items get set to None instead of Page.\r\n \r\n **Actual behavior:** <!-- callstack for crashes / exceptions -->\r\n \r\n **Expected behavior:**\r\nPage items should still be working \r\n\r\n **Minimal repro:**\r\n \r\nNew WPF app, add a page.\r\n\r\nSet `EnableDefaultApplicationDefinition` to `false`.\r\n","Url":"https://github.com/dotnet/wpf/issues/1758","RelatedDescription":"Open issue \"EnableDefaultApplicationDefinition to false prevents Page's from working\" (#1758)"},{"Id":"487714553","IsPullRequest":true,"CreatedAt":"2019-08-31T01:36:03","Actor":"dotnet-maestro[bot]","Number":"1757","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190830.7\r\n- **Date Produced**: 8/31/2019 12:54 AM\r\n- **Commit**: 49f00cea3d7c4290a446795de2af9bd9073615aa\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19430.7\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 3.0.0-rc1-19430-09 (parent: Microsoft.Private.Winforms)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-rc1.19430.3 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-rc1.19430.3 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-rc1.19430.3 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1757","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1757)"},{"Id":"487676540","IsPullRequest":true,"CreatedAt":"2019-08-30T21:45:46","Actor":"dotnet-maestro[bot]","Number":"1756","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190830.6\r\n- **Date Produced**: 8/30/2019 9:06 PM\r\n- **Commit**: 13b3f492f9dc664ef80c7de649d6bbddc55a482d\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19430.6\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 3.0.0-rc1-19430-05 (parent: Microsoft.Private.Winforms)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-rc1.19430.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-rc1.19430.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-rc1.19430.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1756","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1756)"},{"Id":"487480565","IsPullRequest":true,"CreatedAt":"2019-08-30T14:01:21","Actor":"dotnet-maestro[bot]","Number":"1755","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190830.2\r\n- **Date Produced**: 8/30/2019 1:04 PM\r\n- **Commit**: 618bb3c5a893fc20cbde1cba112e2a58dc3b9b61\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19430.2\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1755","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1755)"},{"Id":"487403471","IsPullRequest":false,"CreatedAt":"2019-08-30T10:10:11","Actor":"hez2010","Number":"1754","RawContent":null,"Title":".NET Core 3.0 embedded resources weren't compiled into executable","State":"open","Body":"* .NET Core Version: 3.0 preview 8\r\n* Windows version: 1903 (18362.295)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n\r\n **Problem description:**\r\nEmbedded resources weren't compiled into executable.\r\nI added an image to a resx file Resource1.resx, and add the resource file to project file:\r\n```xml\r\n  <ItemGroup>\r\n    <Compile Update=\"Resources\\Resource1.Designer.cs\">\r\n      <DesignTime>True</DesignTime>\r\n      <AutoGen>True</AutoGen>\r\n      <DependentUpon>Resource1.resx</DependentUpon>\r\n    </Compile>\r\n  </ItemGroup>\r\n\r\n  <ItemGroup>\r\n    <EmbeddedResource Update=\"Resources\\Resource1.resx\">\r\n      <Generator>ResXFileCodeGenerator</Generator>\r\n      <LastGenOutput>Resource1.Designer.cs</LastGenOutput>\r\n    </EmbeddedResource>\r\n  </ItemGroup>\r\n```\r\nThen I use this image in WPF `<Image Source=\"...\" />`\r\n\r\n **Actual behavior:**\r\nThe image should display in my WPF app.\r\n \r\n **Expected behavior:**\r\nThe image can only display in Visual Studio XAML Designer.\r\n \r\n **Minimal repro:**\r\n \r\n[WpfTest.zip](https://github.com/dotnet/wpf/files/3559450/WpfTest.zip)\r\n\r\n\r\n**Update**\r\nNot only WPF projects, all kinds of projects in .NET Core 3.0 cannot correctly use resource files.","Url":"https://github.com/dotnet/wpf/issues/1754","RelatedDescription":"Open issue \".NET Core 3.0 embedded resources weren't compiled into executable\" (#1754)"},{"Id":"487212932","IsPullRequest":true,"CreatedAt":"2019-08-29T23:36:10","Actor":"dotnet-maestro[bot]","Number":"1753","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190829.6\r\n- **Date Produced**: 8/29/2019 10:48 PM\r\n- **Commit**: 15462886e36f55fbcdb77ce2c9379904fc7b24bc\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19429.6\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 3.0.0-rc1-19429-07 (parent: Microsoft.Private.Winforms)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-rc1.19429.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-rc1.19429.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-rc1.19429.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1753","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1753)"},{"Id":"487191559","IsPullRequest":true,"CreatedAt":"2019-08-29T21:48:54","Actor":"vatsan-madhavan","Number":"1752","RawContent":null,"Title":"Enable sourcelink and symbol validation","State":"open","Body":"Enable sourcelink and symbol validation\r\n\r\nRelated: https://dev.azure.com/dnceng/internal/_build/results?buildId=331210","Url":"https://github.com/dotnet/wpf/pull/1752","RelatedDescription":"Open PR \"Enable sourcelink and symbol validation\" (#1752)"},{"Id":"487169912","IsPullRequest":true,"CreatedAt":"2019-08-29T21:10:48","Actor":"dotnet-maestro[bot]","Number":"1751","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190829.3\r\n- **Date Produced**: 8/29/2019 8:35 PM\r\n- **Commit**: 7e2a0e25ba4c23fc7c3e63e081b753eff11da554\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19429.3\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 3.0.0-rc1-19429-05 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1751","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1751)"},{"Id":"486746045","IsPullRequest":true,"CreatedAt":"2019-08-29T19:14:36","Actor":"rladuca","Number":"1745","RawContent":null,"Title":"Fix DebuggableAttribute in InjectModuleInitializer post-build targets","State":"closed","Body":"Addresses #1549\r\n\r\nIn the ReconstituteDll target, we call ILAsm to merge a module constructor into the assembly we previously disassembled. We need to enable JIT optimizations here so that we get an appropriate DebuggableAttribute on the assembly and don't cause perf problems.\r\n\r\n@vatsan-madhavan who helped debug and find this fix.\r\n\r\n----\r\n\r\nIssue: https://github.com/dotnet/wpf/issues/1549  \r\nPR:https://github.com/dotnet/wpf/pull/1745 \r\n\r\n### Description \r\n\r\n  **Fix DebuggableAttribute in PresentationCore.dll**  \r\n\r\n#### Background:  \r\n\r\nIn .NET Core 3.0 Preview 6 and .NET Framework 4.x, PresentationCore was a single assembly that consisted of C# and C++/CLI components merged together by link.exe (using netmodules as inputs).  \r\n\r\nIn Preview 2, PresentationCore was split into C# and C++/CLI component assemblies (PresentationCore and DirectWriteForwarder, respectively) to work around bugs in the new C++/CLI toolsets that prevented them from being merged into a single DLL effectively. \r\n\r\nDue to this split, a module constructor implemented (#741) on the C++/CLI side was no longer running in the same initialization order with respect to the rest of WPF.  This caused regressions in WPF’s high DPI support (#334)\r\n \r\n#### Issue Details: \r\n\r\nThe fix for the high DPI issue (#741) introduced a regression where the `DebuggableAttribute `on PresentationCore was not being correctly set and was disabling JIT optimizations (by setting `DebuggingModes.DisableOptimizations` on PresentationCore.dll) \r\n \r\nThis is causing a 30% perf regression in warmed up repro applications and close to 50% in cold start scenarios.  These regressions mainly revolve around text rendering and layout code which is the main set of code that was split off in the aforementioned Preview 2 change. \r\n\r\nAfter investigation across WPF and the JIT teams, WPF was alerted to the incorrect attribute and we root caused it to a missing parameter in ILAsm (used to inject a module constructor into PresentationCore) to enable JIT optimizations. \r\n\r\nAfter this change, PresentationCore will have` DebuggingModes.Default | DebuggingModes.IgnoreSymbolStoreSequencePoints`, which is functionally identical to all other “Release” configuration assemblies.  \r\n \r\n ### Customer Impact \r\n\r\n \r\n**Severity:**  \r\n\r\nAll text rendering is at least 30% slower across the board in WPF.   \r\n\r\nWe tested this via several applications that render large amounts of text via different methods: \r\n\r\n- Generate and render random strings into a TextBox \r\n- Generate a large DataGrid of strings and scroll through it many times \r\n- Generate a large ListView of strings and scroll through it many times \r\n\r\nWhen testing without warm-up, the regression is more than 30% (50%-ish).  \r\n\r\n**Applicability:** \r\n\r\n- These are main line scenarios for WPF, esp. LoB applications.   \r\n- Apps that show any kind of text (`DataGrid`, for e.g., in an LoB app) will be affected immediately.  \r\n- Quantity of text being shown doesn’t matter – whether the text is likely to change affects performance.  \r\n For e.g., if text is shown in a `ListBox `or `DataGrid`, and a user interacts with it to look at data, the changes in the text will immediately affect performance.  \r\n\r\n \r\n#### Regression? \r\n\r\nYes, from .NET Framework 4.8 and .NET Core 3 Preview 5 \r\n\r\n#### Risk\r\n\r\n\r\n- Low \r\n- Mitigations: \r\n  - We’ve done a full test passes using the new binary \r\n  - The change is incredibly small in scope and does not affect reconstitution of PresentationCore apart from changing the `DebuggableAttribute `configuration. \r\n  - This configuration of `DebuggableAttribute `is generally used across all other managed WPF binaries. \r\n- Validations \r\n  - We’ve verified the perf impact is no longer present when swapping in the fixed binary \r\n  - We’ve provided self-contained published applications to customers to test the performance \r\n  - Full test pass is completed with no issues ","Url":"https://github.com/dotnet/wpf/pull/1745","RelatedDescription":"Closed or merged PR \"Fix DebuggableAttribute in InjectModuleInitializer post-build targets\" (#1745)"},{"Id":"487088745","IsPullRequest":true,"CreatedAt":"2019-08-29T18:59:42","Actor":"vatsan-madhavan","Number":"1750","RawContent":null,"Title":"Update Versions.props for release/3.1","State":"closed","Body":"Update Versions.props for release/3.1","Url":"https://github.com/dotnet/wpf/pull/1750","RelatedDescription":"Closed or merged PR \"Update Versions.props for release/3.1\" (#1750)"},{"Id":"486699653","IsPullRequest":true,"CreatedAt":"2019-08-29T17:55:20","Actor":"rladuca","Number":"1744","RawContent":null,"Title":"Fix DebuggableAttribute in InjectModuleInitializer post-build targets","State":"closed","Body":"Addresses #1549 \r\n\r\nIn the `ReconstituteDll` target, we call ILAsm to merge a module constructor into the assembly we previously disassembled.  We need to enable JIT optimizations here so that we get an appropriate `DebuggableAttribute` on the assembly and don't cause perf problems.\r\n\r\n@vatsan-madhavan who helped debug and find this fix.","Url":"https://github.com/dotnet/wpf/pull/1744","RelatedDescription":"Closed or merged PR \"Fix DebuggableAttribute in InjectModuleInitializer post-build targets\" (#1744)"},{"Id":"486960310","IsPullRequest":true,"CreatedAt":"2019-08-29T14:01:15","Actor":"dotnet-maestro[bot]","Number":"1749","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190829.2\r\n- **Date Produced**: 8/29/2019 1:05 PM\r\n- **Commit**: 969b80a2dd168c333612895ec109ba1a2b792dcf\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19429.2\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1749","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1749)"},{"Id":"486925809","IsPullRequest":false,"CreatedAt":"2019-08-29T12:24:10","Actor":"AlexChuev","Number":"1748","RawContent":null,"Title":"ReadyToRun images are not as efficient for .NET Core 3 as NGen for .NET Framework","State":"open","Body":"* .NET Core Version: 3.0 Preview 8\r\n* Windows version: 1809\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: No\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? No\r\n\r\n **Problem description:**  \r\nSince Ngen.exe and Native Image Task are not available in .NET Core 3, ReadyToRun images are the only way to reduce the application startup time and avoid delays caused by JIT compilation. However, our tests show that for the same WPF application that initializes three times faster after using Ngen.exe, ReadyToRun images provide the difference of only 25%.  \r\nThis is a huge hit for our users, since with many libraries and theme resources, JIT compilation is one of the main factors affecting load times. For some real-life applications, the use of Ngen.exe allowed our users to shave up to 6 seconds (half) off the initial start time.\r\n \r\n **Minimal repro:**  \r\n You can find samples for .NET Core 3 and .NET Framework here: https://github.com/AlexChuev/ReadyToRunPerformanceTest  \r\n These samples use DevExpress WPF assemblies to demonstrate how Ngen.exe and ReadyToRun images affect projects with many classes and theme resources. If you need published apps or other samples for your tests, please let me know.\r\n\r\nP.S. I'm posting this in the WPF repo because the difference between Ngen.exe and ReadyToRun images highly affects WPF applications. Normally, the JIT compiler processes classes and methods only when they are needed for the program execution. However, when WPF loads theme resources for a control, this causes all classes referenced in these resources (including classes referenced in currently unused or invisible parts) to be processed by the JIT compiler. In addition, static constructors of many WPF classes contain the DependencyProperty registration code that may cause even more classes and methods to be JITted.","Url":"https://github.com/dotnet/wpf/issues/1748","RelatedDescription":"Open issue \"ReadyToRun images are not as efficient for .NET Core 3 as NGen for .NET Framework\" (#1748)"},{"Id":"486799709","IsPullRequest":false,"CreatedAt":"2019-08-29T07:57:18","Actor":"PDostalek","Number":"1747","RawContent":null,"Title":" [loc][Query][wpf] Localizability of 0; \"ToStringFormatString_GridViewRowPresenter\"","State":"open","Body":"Hi,\r\nplease help localization team to answer question from translator.\r\nIn case translator is not sure about context/meaning/localizability of string we raise a question.\r\n\r\nSource:\r\n{0} The source code won't be available via Source Link.\r\n\r\nFile Name:\r\nStrings.de.xlf\r\n\r\n==========================================\r\nQuery:\r\n\r\nAre these strings localizable? \r\nSeveral in scope:\r\n{0} Columns.Count:\\{1\\}\r\n{0} Header:\\{1\\}\r\n{0} Content:\\{1\\} Columns.Count:\\{2\\}\r\n{0} Header:\\{1\\} Content:\\{2\\}\r\n{0} Header:\\{1\\} Items.Count:\\{2\\}\r\n{0} Minimum:\\{1\\} Maximum:\\{2\\} Value:\\{3\\}\r\n{0} Content:\\{1\\} IsChecked:\\{2\\}\r\n\r\n\r\nAssuming that camel case words are not translatable, but can Content be localized, and can we insert punctuation?\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/1747","RelatedDescription":"Open issue \" [loc][Query][wpf] Localizability of 0; \"ToStringFormatString_GridViewRowPresenter\"\" (#1747)"},{"Id":"486767509","IsPullRequest":true,"CreatedAt":"2019-08-29T07:00:47","Actor":"dotnet-maestro[bot]","Number":"1746","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190828.7\r\n- **Date Produced**: 8/29/2019 6:20 AM\r\n- **Commit**: e5ec6b98b29f98e0936e7cabe530f1d5330b732c\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19428.7\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 3.0.0-rc1-19428-14 (parent: Microsoft.Private.Winforms)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-rc1.19428.6 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-rc1.19428.6 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-rc1.19428.6 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1746","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1746)"},{"Id":"486646486","IsPullRequest":true,"CreatedAt":"2019-08-28T23:11:14","Actor":"dotnet-maestro[bot]","Number":"1742","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190828.6\r\n- **Date Produced**: 8/28/2019 10:31 PM\r\n- **Commit**: 5ce84261d3c849e16348823def55dd266059d6c4\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19428.6\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 3.0.0-rc1-19428-08 (parent: Microsoft.Private.Winforms)\r\n- **Microsoft.NETCore.ILDAsm** -> 3.0.0-rc1.19428.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n- **Microsoft.NETCore.Runtime.CoreCLR** -> 3.0.0-rc1.19428.2 (parent: Microsoft.NETCore.App)\r\n- **Microsoft.NETCore.ILAsm** -> 3.0.0-rc1.19428.2 (parent: Microsoft.NETCore.Runtime.CoreCLR)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1742","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1742)"},{"Id":"486651753","IsPullRequest":false,"CreatedAt":"2019-08-28T23:09:08","Actor":"deepakG86","Number":"1743","RawContent":null,"Title":"FlowDirection RightToLeft in TextBox with text c:\\ when language is Arabic","State":"open","Body":"I am trying to create a WPF textbox that can take user input for a folder/network path. The textbox needs to support other languages including Arabic.\r\n\r\nThe flowdirection for the textbox gets set based on the language, so for Arabic the flow direction of text box is right to left.\r\n\r\nNow, the issue is when I enter \"c:\\\". This gets displayed as \"/:c\". \r\nBut when we enter the next character, it switches correctly for example : \"c:\\a\" is displayed correctly as \"c:\\a\".\r\n\r\nSame think when we have \"(\" or \")\".\r\n\r\nWhat is the best solution to handle this behavior?\r\nI have tried to detect neutral characters in the text and inserting a LTR character but that has weird consequence:\r\nc\r\nc:\r\nc:\\ --- here i enter the special LTR marker\r\nthe next typed character goes to the other end:\r\nac:\\?\r\n\r\n","Url":"https://github.com/dotnet/wpf/issues/1743","RelatedDescription":"Open issue \"FlowDirection RightToLeft in TextBox with text c:\\ when language is Arabic\" (#1743)"},{"Id":"486606772","IsPullRequest":true,"CreatedAt":"2019-08-28T21:21:12","Actor":"dotnet-maestro[bot]","Number":"1741","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190828.5\r\n- **Date Produced**: 8/28/2019 8:43 PM\r\n- **Commit**: 35ce5eef95e9583a7fcf5e132fea433ab7433624\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19428.5\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 3.0.0-rc1-19428-07 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1741","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1741)"},{"Id":"486556944","IsPullRequest":true,"CreatedAt":"2019-08-28T19:25:50","Actor":"dotnet-maestro[bot]","Number":"1740","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/winforms","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n## From https://github.com/dotnet/winforms\r\n- **Build**: 20190828.4\r\n- **Date Produced**: 8/28/2019 6:45 PM\r\n- **Commit**: 3fc86f2880510b4dcab1c7824a471d26991a873b\r\n- **Branch**: refs/heads/release/3.0\r\n- **Updates**:\r\n  - **Microsoft.Private.Winforms** -> 4.8.0-rc1.19428.4\r\n\r\n[marker]: <> (End:07c1f64b-2232-48be-3da4-08d6ba11e0be)\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n- **Microsoft.NETCore.App** -> 3.0.0-rc1-19428-05 (parent: Microsoft.Private.Winforms)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n","Url":"https://github.com/dotnet/wpf/pull/1740","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/winforms\" (#1740)"}],"ResultType":"GitHubIssue"}},"RunOn":"2019-09-05T05:30:55.0524162Z","RunDurationInMilliseconds":886}