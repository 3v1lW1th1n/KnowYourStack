{"Data":{"Blog":{"FeedItems":[{"Title":"Podcast: Android 8.1, Xamarin Device Manager, and Visual Studio versions 15.5 & 15.6","PublishedOn":"2018-01-12T20:59:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In this episode of the Xamarin Podcast, James Montemagno and I cover Android 8.1, the new Xamarin Device Manager Preview, what&#8217;s new for mobile developers in Visual Studio versions 15.5/15.6,...","Href":"https://blog.xamarin.com/podcast-android-8-1-xamarin-device-manager-visual-studio-versions-15-5-15-6/","RawContent":null},{"Title":"Xamarin.Android Now Double Stuffed with Oreo 8.1","PublishedOn":"2018-01-11T19:55:09+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Android Oreo 8.1 introduces new features, including Android Go, Neural Networks API, Autofill framework enhancements, SharedMemory API, and many more. We&#8217;re excited to announce Xamarin.Android...","Href":"https://blog.xamarin.com/xamarin-android-now-double-stuffed-with-oreo-8-1/","RawContent":null},{"Title":"Upcoming Webinar | Xamarin University Presents: Ship Better Apps with Visual Studio App Center","PublishedOn":"2018-01-11T14:55:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Join Mark Smith, Director of Xamarin University, on Thursday, January 25 at 9 am PT / 12 pm ET / 5 pm GMT to learn how to automate your app development pipeline with Visual Studio App Center. You’ll...","Href":"https://blog.xamarin.com/upcoming-webinar-xamarin-university-presents-ship-better-apps-visual-studio-app-center/","RawContent":null},{"Title":"Visual Studio 2017 Version 15.6 Preview Available Today!","PublishedOn":"2018-01-10T19:16:10+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Last month, we released Visual Studio 2017 version 15.5, which came with awesome new features, including the iOS Remoted Simulator becoming available to all developers, live XAML previewing in Android...","Href":"https://blog.xamarin.com/visual-studio-2017-version-15-6-preview-available-today/","RawContent":null},{"Title":"Delivering Rich Media Experiences with the Xamarin.Forms Video Player","PublishedOn":"2018-01-09T18:42:15+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post from Adam Fisher. Adam is the founder of Octane Software, focused on the creation of consumer Internet products. You can find Adam on Twitter at @adamgfisher and on Github at...","Href":"https://blog.xamarin.com/delivering-rich-media-experiences-xamarin-forms-video-player/","RawContent":null},{"Title":"Colonial Life Drives Field Sales Productivity with .NET, Mobile, and DevOps","PublishedOn":"2018-01-05T19:59:24+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The .NET community is millions of developers strong, with people around the world turning ideas into apps across web, mobile, desktop, and the newest connected device platforms. Colonial Life’s...","Href":"https://blog.xamarin.com/colonial-life-drives-field-sales-productivity-net-mobile-devops/","RawContent":null},{"Title":"CoreML Programming with Xamarin.Mac and F#","PublishedOn":"2018-01-04T18:08:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Although Xamarin technologies are most commonly used to develop mobile applications, Xamarin.Mac makes it easy to use your preferred .NET language to develop desktop Mac apps. There are many C#...","Href":"https://blog.xamarin.com/coreml-programming-xamarin-mac-f/","RawContent":null},{"Title":"Xamarin Developer Events This January","PublishedOn":"2018-01-03T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s only the beginning of the year, but there are already many opportunities to get out and start building on your mobile app development education! Network with local user groups to learn...","Href":"https://blog.xamarin.com/xamarin-developer-events-january/","RawContent":null},{"Title":"The Top 12 Xamarin Blog Posts of 2017","PublishedOn":"2018-01-02T20:36:59+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"2017 marked our first full year as part of the Microsoft family. Along the way, we saw new operating systems, new devices, and updates to the tools we use every day, and the many authors behind the...","Href":"https://blog.xamarin.com/top-12-xamarin-blog-posts-2017/","RawContent":null},{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7093678136","Type":"PullRequestEvent","CreatedAt":"2018-01-12T21:34:51","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1192","RelatedDescription":"Opened pull request \"[Mono.Android] API-27/v8.1 is stable\" (#1192) at xamarin/xamarin-android","RelatedBody":"The API-27 binding has been considered stable (-ish) since commit\r\n914f95fc, give or take a few problems (c2811327, 9cc80d7a, etc.).\r\n\r\nEnsure that the generated `AndroidApiInfo.xml` files (8942eca0)\r\nstate that API-27 is stable."},{"Id":"7091688329","Type":"PullRequestEvent","CreatedAt":"2018-01-12T14:03:57","Actor":"dellis1972","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1190","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] Ignore AndroidAsset items which are folders.\" (#1190) at xamarin/xamarin-android","RelatedBody":"When adding a new subfolder in the IDE (VSForMac) we end up\r\nwith a folder which has a build action of AndroidAsset.\r\nThis causes the copy task to fail with\r\n\r\n\tCannot copy <folder> to <destfolder>, as the source file doesn't exist\",\r\n\r\nThis is because we assume that all items in AndroidAsset (and\r\nAndroidResource) and files. It looks like this is not the case.\r\nWhile a work around is easy .. simply remove the item. It does\r\nrequire that the user manually update the csproj.\r\n\r\nSo this commit uses `Directory.Exists` to check to see if the\r\nitem is a directory or not. If it is we skip over it. Otherwise\r\nits a file so we should copy.\r\n\r\nWe do this in `Files.cs` but also in `AndroidUpdateResDir.cs`.\r\nThe latter has been changed to output a list of the \"Resolved\"\r\nfiles which will not include any folders."},{"Id":"7091093395","Type":"IssuesEvent","CreatedAt":"2018-01-12T11:34:33","Actor":"ctrl-shift","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1189","RelatedDescription":"Opened issue \"Generic RecyclerView.Adapter crashes\" (#1189) at xamarin/xamarin-android","RelatedBody":"Xamarin android version included in latest VS Preview does not handle generic RecyclerView Adapters.\r\nCheck attached test project. Everything runs fine from current stable version of VS.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create generic RecyclerView.Adapter\r\n2. Set it as adapter to RecyclerView\r\n3. Observe crash on runtime without stacktrace\r\n\r\n[TestApp.zip](https://github.com/xamarin/xamarin-android/files/1625843/TestApp.zip)\r\n\r\n### Expected Behavior\r\nEverything runs fine\r\n### Actual Behavior\r\nApp crashes without output or catching exception in debug\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Community 2017 Preview (2)\r\nVersion 15.6.0 Preview 2.0\r\nVisualStudio.15.Preview/15.6.0-pre.2.0+27309.0\r\nMicrosoft .NET Framework\r\nVersion 4.7.02556\r\n\r\nInstalled Version: Community"},{"Id":"7090981651","Type":"IssuesEvent","CreatedAt":"2018-01-12T11:05:39","Actor":"Belorus","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1188","RelatedDescription":"Opened issue \"Random NullRef crashes in SSL/TLS stack\" (#1188) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nWe have a big game that communicates with server via HTTP.\r\n<AndroidLinkMode>SdkOnly</AndroidLinkMode>\r\n<AotAssemblies>True</AotAssemblies>\r\n<EnableLLVM>True</EnableLLVM>\r\n <AndroidEnableSGenConcurrent>**false**</AndroidEnableSGenConcurrent>\r\n\r\n\r\n### Actual Behavior\r\n\r\nCrashes on Androids:\r\n\r\n1. \r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\n  at (wrapper remoting-invoke-with-check) Mono.Security.Protocol.Tls.SslStreamBase:set_CheckCertRevocationStatus (bool)\r\n```\r\n2.\r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\n  at Mono.Security.Protocol.Tls.SslClientStream.add_ServerCertValidation2 (Mono.Security.Protocol.Tls.CertificateValidationCallback2 value) <0x9d0ee038 + 0x0005c> in <cdde401f4fc64c87a9a513ce5f60d5ad>:0 \r\n  at (wrapper remoting-invoke-with-check) Mono.Security.Protocol.Tls.SslClientStream:add_ServerCertValidation2 (Mono.Security.Protocol.Tls.CertificateValidationCallback2)\r\n```\r\n3.\r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'SslStream'.\r\nSystem.Net.Security.SslStream.get_Impl()\r\nSystem.Net.Security.SslStream.get_Impl()(wrapper remoting-invoke-with-check)\r\n```\r\n4.\r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\nSystem.Net.HttpWebRequest.get_ClientCertificates()\r\nSystem.Net.HttpWebRequest.get_ClientCertificates()(wrapper remoting-invoke-with-check)\r\n```\r\n5.\r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\nSystem.Net.HttpWebRequest.get_ServerCertValidationCallback()\r\nSystem.Net.HttpWebRequest.get_ServerCertValidationCallback()(wrapper remoting-invoke-with-check)\r\n```\r\n6.\r\n```\r\nXamarin caused by: android.runtime.JavaProxyThrowable: System.NullReferenceException: Object reference not set to an instance of an object\r\nMono.Security.Protocol.Tls.TlsStream.ToArray()\r\nMono.Security.Protocol.Tls.TlsStream.ToArray()(wrapper remoting-invoke-with-check)\r\n```\r\n\r\nAn so on. \r\n\r\n### Version Information\r\n\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.5.2\r\nVisualStudio.15.Release/15.5.2+27130.2010\r\nMicrosoft .NET Framework\r\nVersion 4.7.02053\r\n\r\nInstalled Version: Professional\r\n\r\nXamarin   4.8.0.753 (6575bd113)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin.Android SDK   8.1.0.25 (HEAD/d8c6e504f)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n"},{"Id":"7090937516","Type":"IssuesEvent","CreatedAt":"2018-01-12T10:55:10","Actor":"alanmcgovern","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1187","RelatedDescription":"Opened issue \"Java invocation failure with master/15.6\" (#1187) at xamarin/xamarin-android","RelatedBody":"With the latest master/15.6 builds of X.A i am triggering this issue inside the forms previewer:\r\n```\r\nJava.Lang.InstantiationException: android.view.ViewGroup\r\n  at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw () [0x0000c] in <808e27c157614d6b865c43847235b62d>:0 \r\n  at Java.Interop.JniEnvironment+Object.AllocObject (Java.Interop.JniObjectReference type) [0x0003c] in <8e80eb3ca41f4c3eb745bd7c73458796>:0 \r\n  at Java.Interop.JniType.AllocObject () [0x0000c] in <8e80eb3ca41f4c3eb745bd7c73458796>:0 \r\n  at Java.Interop.JniPeerMembers+JniInstanceMethods.StartCreateInstance (System.String constructorSignature, System.Type declaringType, Java.Interop.JniArgumentValue* parameters) [0x0003e] in <8e80eb3ca41f4c3eb745bd7c73458796>:0 \r\n  at Android.Views.ViewGroup..ctor (Android.Content.Context context) [0x0005b] in <9ca7528089f0437883d939fbe90c65ab>:0 \r\n  at Xamarin.Forms.Platform.Android.PlatformRenderer..ctor (Android.Content.Context context, Xamarin.Forms.Platform.Android.IPlatformLayout canvas) [0x00000] in C:\\Users\\hartez\\Documents\\Xamarin\\Xamarin.Forms\\Xamarin.Forms.Platform.Android\\PlatformRenderer.cs:16\r\n```\r\n\r\nThe code in question is the chaining to the base constructor here https://github.com/xamarin/Xamarin.Forms/blob/master/Xamarin.Forms.Platform.Android/PlatformRenderer.cs#L16\r\n\r\nThe latest stable release of X.A works fine, so this looks like a regression between then and now."},{"Id":"7088618869","Type":"IssuesEvent","CreatedAt":"2018-01-11T22:12:26","Actor":"grendello","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1186","RelatedDescription":"Opened issue \"MonoTests.System.Reflection.Emit.SaveTest.Save test fails in Release configuration with BCL linking on\" (#1186) at xamarin/xamarin-android","RelatedBody":"A test from the Mono BCL test suite ([MonoTests.System.Reflection.Emit.SaveTest.Save](https://github.com/mono/mono/blob/master/mcs/class/corlib/Test/System.Reflection.Emit/SaveTest.cs#L321)) fails when the tests are built in Release mode with linking set to SdkOnly.\r\nIt seems that the linker somehow changes the order of interfaces in emitted code since turning BCL linking off makes the test work again. The test also works fine in Debug configuration (with the linker off)\r\n\r\n### Steps to Reproduce\r\n\r\n1. Comment out [this line](https://github.com/xamarin/xamarin-android/blob/master/tests/BCL-Tests/Xamarin.Android.Bcl-Tests/nunit-excluded-tests.txt#L7)\r\n2. Run `make CONFIGURATION=Release run-apk-tests` from the top Xamarin.Android dir\r\n3. Wait patiently\r\n4. Find the failure in the NUnit tests result file (`TestResult-Xamarin.Android.Bcl_Tests.nunit-Release.xml` in the top Xamarin.Android directory)\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nThe test should run fine with BCL linking on\r\n\r\n### Actual Behavior\r\nThe test fails when executed with BCL linking on\r\n\r\n### Version Information\r\nXamarin.Android/master (`c4e81655ac22b06806e732e9dd0bc729e8d2c1d7`)\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Test failure\r\n```\r\nMESSAGE:\r\n  Expected: <iface1>\r\n  But was:  <System.IComparable>\r\n\r\n  +++++++++++++++++++\r\n  STACK TRACE:\r\n  at MonoTests.System.Reflection.Emit.SaveTest.CheckAssembly (System.Reflection.Assembly a) [0x000a0] in <1e30aff9165c427db5bedc42c5906861>:0 \r\n  at MonoTests.System.Reflection.Emit.SaveTest.Save () [0x00b6d] in <1e30aff9165c427db5bedc42c5906861>:0 \r\n  at (wrapper managed-to-native) System.Reflection.MonoMethod.InternalInvoke(System.Reflection.MonoMethod,object,object[],System.Exception&)\r\n  at System.Reflection.MonoMethod.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x00032] in <0a3e31ed05774b07957e0b91c5cab789>:0\r\n```\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7088466379","Type":"PullRequestEvent","CreatedAt":"2018-01-11T21:38:20","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1075","RelatedDescription":"Merged pull request \"New unit test runner\" (#1075) at xamarin/xamarin-android","RelatedBody":"This is a rewrite of our (very old) NUnit test runner to support tests using\r\nother test suites. The reason for this is that Mono BCL tests are starting to\r\nuse xUnit tests and we want to be able to run all of them.\r\n\r\nAt the same time this code drops support for the \"GUI\" we previously had to run\r\ntests (not maintained, makes the actual runner code messy) and restructures the\r\nrunner infrastructure so that it's possible to add any number of runners in the\r\nfuture without rewriting any base code. We now use only Android instrumentations\r\nto execute the code.\r\n\r\nA few changes to the test running code were necessary since we now support more\r\nthan one instrumentation per apk, with different result outputs, options etc.\r\nSupport for granting Android permissions on apk install time was added as\r\nwell (might be necessary when running tests on devices with Oreo)"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7094591807","Type":"IssuesEvent","CreatedAt":"2018-01-13T05:29:18","Actor":"breyed","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1574","RelatedDescription":"Opened issue \"Edit and Continue doesn't work with .NET Standard\" (#1574) at xamarin/Xamarin.Forms","RelatedBody":"When a Xamarin.Forms cross-platform library uses .NET Standard, Edit and Continue doesn't work on UWP. (I didn't try other ways of incorporating the cross-platform code, so I don't know whether this is specific to .NET Standard.)\r\n\r\nRepro:\r\n1. Create a new UWP project.\r\n2. Verify that Edit and Continue works. (Start the app. Debug > Break All. Edit some code. Continue.)\r\n3. Add a .NET Standard class library.\r\n4. Add Xamarin.Forms to the class library and UWP project. Add a page to the class library. Add the standard startup code to the UWP project.\r\n5. Test whether Edit and Continue works. Notice that it doesn't.\r\n\r\n[Repro project](https://github.com/breyed/repro-xamarin.forms-edit-and-continue)"},{"Id":"7093816919","Type":"IssuesEvent","CreatedAt":"2018-01-12T22:13:51","Actor":"owlstack","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1573","RelatedDescription":"Opened issue \"Xamarin.Forms 2.5.0.122\" (#1573) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\n\r\n### Steps to Reproduce\r\n\r\n1. Upgrade Xamarin.Forms project from 2.4.0.282 to 2.5.0.122 (With .NET standard 1.4 for shared logic class) \r\n2. Build solution with device connected (in my case UWP device)\r\n3. Get the error \r\n\r\nOddly, it happens frequently intermittently-- that is, it happens and then I try to build my solution again by clicking on the run button several times. After several times, my solution builds just fine but I still get the error. \r\n\r\n### Expected Behavior\r\nNo error and I can run my app just fine \r\n\r\n### Actual Behavior\r\n\r\nError: \r\n\r\nThe \"Xamarin.Forms.Build.Tasks.GetTasksAbi\" task could not be loaded from the assembly C:\\Users\\parallels\\.nuget\\packages\\xamarin.forms\\2.5.0.122203\\build\\netstandard1.0\\Xamarin.Forms.Build.Tasks.dll.  Confirm that the <UsingTask> declaration is correct, that the assembly and all its dependencies are available, and that the task contains a public class that implements Microsoft.Build.Framework.ITask.\r\n\r\nAnd I can't build my solution. \r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.122\r\n- Last known good version: 2.4.0 (not sure about \"last\" but this is the version I upgraded from)\r\n- IDE: Visual Studio 2017\r\n- Platform Target Frameworks: \r\n  - UWP: 10.0.14393.0\r\n- Nuget Packages: Xamarin.Forms 2.5.0.122, Xamarin 4.8.0\r\n- Affected Devices:\r\nUWP Windows 10 device \r\n\r\n### Screenshots\r\n\r\n<!-- If the issue is a visual issue, please include screenshots showing the problem if possible -->\r\n\r\n### Reproduction Link\r\n\r\n<!-- Please upload or provide a link to a reproduction case -->\r\n"},{"Id":"7093769970","Type":"IssuesEvent","CreatedAt":"2018-01-12T22:00:20","Actor":"ceblanda","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1572","RelatedDescription":"Opened issue \"TitleIcon Aspect Ratio not maintained on iPhone X MasterDetail in Landscape \" (#1572) at xamarin/Xamarin.Forms","RelatedBody":"Bug report best practices: https://github.com/xamarin/Xamarin.Forms/wiki/Submitting-Issues\r\n\r\n### Description\r\nThe aspect ratio of the image used as the TitleIcon is not maintained on the iPhone X when rotation to landscape, it is stretched lengthwise.  The image is not stretched on other versions of the iPhone.\r\n### Steps to Reproduce\r\n\r\n1. run the attached project on the iPhoneX in landscape\r\n2. \r\n3. \r\n\r\n### Expected Behavior\r\nThe image height and width should shrink to maintain the aspect ratio\r\n### Actual Behavior\r\nThe height is reduced by a higher percentage than the width\r\n### Basic Information\r\n\r\n- Version with issue:\r\n- Last known good version: none\r\n- IDE: VS2017\r\n- Platform Target Frameworks:\r\n- Forms: 2.5.0\r\n\r\n\r\n  - iOS:  11.2\r\n- Nuget Packages:\r\n- Affected Devices:\r\n\r\n### Screenshots\r\nIPhone 8:\r\n![iphone8_landscape](https://user-images.githubusercontent.com/1641428/34895749-0a5bc2f0-f7b5-11e7-9ab9-026e17ee3713.png)\r\n\r\n\r\niPhone X:\r\n![iphonex_landscape](https://user-images.githubusercontent.com/1641428/34895743-055baba8-f7b5-11e7-95eb-f48320d4b406.png)\r\n\r\n\r\n### Reproduction Link\r\n\r\n[HeaderTest.zip](https://github.com/xamarin/Xamarin.Forms/files/1627617/HeaderTest.zip)\r\n\r\n"},{"Id":"7093516715","Type":"PullRequestEvent","CreatedAt":"2018-01-12T20:51:46","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1571","RelatedDescription":"Merged pull request \"[Xaml] do not check PropertyName on Obsolete BPs\" (#1571) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[Xaml] do not check PropertyName on Obsolete BPs\r\n\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #1566\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense"},{"Id":"7093516704","Type":"IssuesEvent","CreatedAt":"2018-01-12T20:51:46","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1566","RelatedDescription":"Closed issue \"`Frame.OutlineColor` causes exceptions if it's ever used\" (#1566) at xamarin/Xamarin.Forms","RelatedBody":"If you have xaml like this:\r\n```\r\n<Frame OutlineColor=\"Green\">\r\n\t<Style TargetType=\"Frame\">\r\n\t\t<Setter Property=\"Frame.OutlineColor\" Value=\"Red\" />\r\n\t</Style>\r\n\t<StackLayout Padding=\"10\">\r\n\t\t<Label Text=\"test 1\" />\r\n\t\t<Label Text=\"test 2\" />\r\n\t</StackLayout>\r\n</Frame>\r\n```\r\nthen you will get this exception at runtime:\r\n```\r\nXamarin.Forms.Xaml.XamlParseException: Position 7:26. The PropertyName of Frame.OutlineColorProperty is not OutlineColor\r\n  at Xamarin.Forms.BindablePropertyConverter.ConvertFrom (System.Type type, System.String propertyName, System.Xml.IXmlLineInfo lineinfo) [0x00073] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Core\\BindablePropertyConverter.cs:107 \r\n  at Xamarin.Forms.BindablePropertyConverter.Xamarin.Forms.IExtendedTypeConverter.ConvertFromInvariantString (System.String value, System.IServiceProvider serviceProvider) [0x0022a] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Core\\BindablePropertyConverter.cs:75 \r\n  at Xamarin.Forms.Xaml.TypeConversionExtensions.ConvertTo (System.Object value, System.Type toType, System.Func`1[TResult] getConverter, System.IServiceProvider serviceProvider) [0x00051] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Core\\Xaml\\TypeConversionExtensions.cs:116 \r\n  at Xamarin.Forms.Xaml.TypeConversionExtensions.ConvertTo (System.Object value, System.Type toType, System.Func`1[TResult] minfoRetriever, System.IServiceProvider serviceProvider) [0x00022] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Core\\Xaml\\TypeConversionExtensions.cs:76 \r\n  at Xamarin.Forms.Xaml.ApplyPropertiesVisitor.TrySetProperty (System.Object element, System.String localName, System.Object value, System.Xml.IXmlLineInfo lineInfo, Xamarin.Forms.Xaml.Internals.XamlServiceProvider serviceProvider, Xamarin.Forms.Xaml.HydrationContext context, System.Exception& exception) [0x000c2] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\ApplyPropertiesVisitor.cs:526 \r\n  at Xamarin.Forms.Xaml.ApplyPropertiesVisitor.SetPropertyValue (System.Object xamlelement, Xamarin.Forms.Xaml.XmlName propertyName, System.Object value, System.Object rootElement, Xamarin.Forms.Xaml.INode node, Xamarin.Forms.Xaml.HydrationContext context, System.Xml.IXmlLineInfo lineInfo) [0x00103] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\ApplyPropertiesVisitor.cs:332 \r\n  at Xamarin.Forms.Xaml.ApplyPropertiesVisitor.Visit (Xamarin.Forms.Xaml.ValueNode node, Xamarin.Forms.Xaml.INode parentNode) [0x00093] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\ApplyPropertiesVisitor.cs:55 \r\n  at Xamarin.Forms.Xaml.ValueNode.Accept (Xamarin.Forms.Xaml.IXamlNodeVisitor visitor, Xamarin.Forms.Xaml.INode parentNode) [0x00001] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\XamlNode.cs:86 \r\n  at Xamarin.Forms.Xaml.ElementNode.Accept (Xamarin.Forms.Xaml.IXamlNodeVisitor visitor, Xamarin.Forms.Xaml.INode parentNode) [0x00058] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\XamlNode.cs:143 \r\n  at Xamarin.Forms.Xaml.ElementNode.Accept (Xamarin.Forms.Xaml.IXamlNodeVisitor visitor, Xamarin.Forms.Xaml.INode parentNode) [0x00094] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\XamlNode.cs:145 \r\n  at Xamarin.Forms.Xaml.ElementNode.Accept (Xamarin.Forms.Xaml.IXamlNodeVisitor visitor, Xamarin.Forms.Xaml.INode parentNode) [0x00094] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\XamlNode.cs:145 \r\n  at Xamarin.Forms.Xaml.ElementNode.Accept (Xamarin.Forms.Xaml.IXamlNodeVisitor visitor, Xamarin.Forms.Xaml.INode parentNode) [0x00094] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\XamlNode.cs:145 \r\n  at Xamarin.Forms.Xaml.RootNode.Accept (Xamarin.Forms.Xaml.IXamlNodeVisitor visitor, Xamarin.Forms.Xaml.INode parentNode) [0x00058] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\XamlNode.cs:201 \r\n  at Xamarin.Forms.Xaml.XamlLoader.Visit (Xamarin.Forms.Xaml.RootNode rootnode, Xamarin.Forms.Xaml.HydrationContext visitorContext) [0x00083] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\XamlLoader.cs:142 \r\n  at Xamarin.Forms.Xaml.XamlLoader.Load (System.Object view, System.String xaml) [0x000ab] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\XamlLoader.cs:88 \r\n  at Xamarin.Forms.Xaml.XamlLoader.Load (System.Object view, System.Type callingType) [0x00029] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\XamlLoader.cs:66 \r\n  at Xamarin.Forms.Xaml.Extensions.LoadFromXaml[TXaml] (TXaml view, System.Type callingType) [0x00001] in C:\\agent\\_work\\2\\s\\Xamarin.Forms.Xaml\\ViewExtensions.cs:36 \r\n  at FormsTester.ItemsPage.InitializeComponent () [0x00001] in /Users/alan/Projects/FormsTester/iOS/obj/iPhoneSimulator/Debug/Views/ItemsPage.xaml.g.cs:21 \r\n  at FormsTester.ItemsPage..ctor () [0x00008] in /Users/alan/Projects/FormsTester/FormsTester/Views/ItemsPage.xaml.cs:15 \r\n  at FormsTester.MainPage..ctor () [0x0001f] in /Users/alan/Projects/FormsTester/FormsTester/Views/MainPage.cs:16 \r\n  at FormsTester.App..ctor () [0x00039] in /Users/alan/Projects/FormsTester/FormsTester/App.xaml.cs:22 \r\n  at FormsTester.iOS.AppDelegate.FinishedLaunching (UIKit.UIApplication app, Foundation.NSDictionary options) [0x00007] in /Users/alan/Projects/FormsTester/iOS/AppDelegate.cs:16 \r\n  at (wrapper managed-to-native) UIKit.UIApplication.UIApplicationMain(int,string[],intptr,intptr)\r\n  at UIKit.UIApplication.Main (System.String[] args, System.IntPtr principal, System.IntPtr delegate) [0x00005] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.9.0.30/src/Xamarin.iOS/UIKit/UIApplication.cs:79 \r\n  at UIKit.UIApplication.Main (System.String[] args, System.String principalClassName, System.String delegateClassName) [0x00038] in /Library/Frameworks/Xamarin.iOS.framework/Versions/11.9.0.30/src/Xamarin.iOS/UIKit/UIApplication.cs:63 \r\n  at FormsTester.iOS.Application.Main (System.String[] args) [0x00001] in /Users/alan/Projects/FormsTester/iOS/Main.cs:17 \r\n```"},{"Id":"7093434899","Type":"PullRequestEvent","CreatedAt":"2018-01-12T20:29:47","Actor":"StephaneDelcroix","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/1571","RelatedDescription":"Opened pull request \"[Xaml] do not check PropertyName on Obsolete BPs\" (#1571) at xamarin/Xamarin.Forms","RelatedBody":"### Description of Change ###\r\n\r\n[Xaml] do not check PropertyName on Obsolete BPs\r\n\r\n\r\n### Bugs Fixed ###\r\n\r\n- fixes #1566\r\n\r\n### API Changes ###\r\n\r\n/\r\n\r\n### Behavioral Changes ###\r\n\r\n/\r\n\r\n### PR Checklist ###\r\n\r\n- [ ] Has tests (if omitted, state reason in description)\r\n- [ ] Rebased on top of master at time of PR\r\n- [ ] Changes adhere to coding standard\r\n- [ ] Consolidate commits as makes sense"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7093903682","Type":"IssuesEvent","CreatedAt":"2018-01-12T22:39:44","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/3200","RelatedDescription":"Closed issue \"Incorrect debug symbols should warn (not error) during builds\" (#3200) at xamarin/xamarin-macios","RelatedBody":"### Steps to Reproduce\r\n\r\nThe issue can be seen with the (unmerged) tests from https://github.com/xamarin/xamarin-macios/pull/3079 or bugzilla [61142](https://bugzilla.xamarin.com/show_bug.cgi?id=61142)\r\n\r\n### Expected Behavior\r\n\r\nA **warning** reporting that the debugging symbols are incorrect (e.g. out of date) and that it might affect how the application can be debugged.\r\n\r\n### Actual Behavior\r\n\r\nAn `MT0009` **error**. Beside the details being non-obvious (to solve) the workarounds are not ideal, e.g. deleting a .pdb from nuget would need to be done overtime it's cloned/refreshed and _maybe_ updated (until fixed)\r\n\r\nnote: in 15.6 and earlier this was ignored.\r\n\r\n### Additional information\r\n\r\nThe reason for the error comes from fixing https://bugzilla.xamarin.com/show_bug.cgi?id=60277\r\nSo this needs to still work after the move to a warning."},{"Id":"7093903402","Type":"PullRequestEvent","CreatedAt":"2018-01-12T22:39:39","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3203","RelatedDescription":"Merged pull request \"[mtouch][mmp] Report invalid debug symbols files. Fixes #3200\" (#3203) at xamarin/xamarin-macios","RelatedBody":"Try to read the assembly with symbols and, if that fails, warn and\nfallback to loading them without symbols.\n\nThis fixes cases were it's not easy to update or delete (e.g. nuget)\nbad symbols files - so this cannot be an error without causing a lot\nof pain.\n\nHowever it needs to be reported, otherwise it wont be fixed (by the\npublisher) and it can limit the debugability of the application and\nthe usefulness of the stacktraces.\n\nFinally merge most of the resolver's code between mtouch and mmp so\nwe don't have to fix such issue twice anymore.\n\nnote: this needs to be slightly updated once we get a version of cecil\nthat can give us a more precise error message.\n\nAlso bring Rolf's tests from\nhttps://github.com/xamarin/xamarin-macios/pull/3079\n\nreference:\nhttps://github.com/xamarin/xamarin-macios/issues/3200"},{"Id":"7093849254","Type":"PullRequestEvent","CreatedAt":"2018-01-12T22:23:15","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3079","RelatedDescription":"Closed pull request \"[tests] Add tests to verify that out-of-date symbols don't cause problems.\" (#3079) at xamarin/xamarin-macios","RelatedBody":"https://bugzilla.xamarin.com/show_bug.cgi?id=60923"},{"Id":"7093814558","Type":"PullRequestEvent","CreatedAt":"2018-01-12T22:13:09","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3218","RelatedDescription":"Merged pull request \"[msbuild] DetectSigningIdentity fix for Mac when RequireProvisioningP…\" (#3218) at xamarin/xamarin-macios","RelatedBody":"…rofile is false\r\n\r\n* [msbuild] DetectSigningIdentity fix for Mac when RequireProvisioningProfile is false\r\n\r\nFixes https://github.com/xamarin/maccore/issues/612\r\n\r\n* Disable some tests since they don't make correct assumptions anymore\r\n\r\n* Added comment to explain why tests are disabled"},{"Id":"7093511126","Type":"PullRequestEvent","CreatedAt":"2018-01-12T20:50:17","Actor":"jstedfast","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3218","RelatedDescription":"Opened pull request \"[msbuild] DetectSigningIdentity fix for Mac when RequireProvisioningP…\" (#3218) at xamarin/xamarin-macios","RelatedBody":"…rofile is false\r\n\r\n* [msbuild] DetectSigningIdentity fix for Mac when RequireProvisioningProfile is false\r\n\r\nFixes https://github.com/xamarin/maccore/issues/612\r\n\r\n* Disable some tests since they don't make correct assumptions anymore\r\n\r\n* Added comment to explain why tests are disabled"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"951923977278164992","CreatedAt":"2018-01-12T21:08:56+00:00","UserScreenname":"xamarinhq","Text":"Start your weekend on a high note with this week's episode of the @XamarinPodcast, covering Android 8.1, the new… https://t.co/nyDaQnMQOM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":10,"FavoriteCount":10,"RawContent":null},{"Id":"951862087931789312","CreatedAt":"2018-01-12T17:03:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with Android Oreo Notification Channels: https://t.co/1XmtfYAaLv https://t.co/Drj1AHQYPg","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":23,"FavoriteCount":11,"RawContent":null},{"Id":"951544245466423296","CreatedAt":"2018-01-11T20:00:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with the exciting new features in Android Oreo 8.1 with updated support in #Xamarin.Android:… https://t.co/7RaFvwrg4V","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":35,"FavoriteCount":17,"RawContent":null},{"Id":"951505598268563456","CreatedAt":"2018-01-11T17:26:27+00:00","UserScreenname":"xamarinhq","Text":"Ready to start building better apps, faster? Learn how to get started with #VSAppCenter in our upcoming @XamarinU w… https://t.co/zkJdTZ6JTX","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":47,"FavoriteCount":26,"RawContent":null},{"Id":"951487872753946625","CreatedAt":"2018-01-11T16:16:01+00:00","UserScreenname":"xamarinhq","Text":"Simplified app signing with secure files in #VSTS: https://t.co/O5XooxuL40 https://t.co/TGqFOONLio","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":20,"FavoriteCount":9,"RawContent":null},{"Id":"951172797337866240","CreatedAt":"2018-01-10T19:24:01+00:00","UserScreenname":"xamarinhq","Text":"The #VisualStudio 2017 version 15.6 Preview is now available! Get started today: https://t.co/KG2CJ20AHH https://t.co/e5VR78hTLT","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":49,"FavoriteCount":28,"RawContent":null},{"Id":"951133533246025738","CreatedAt":"2018-01-10T16:48:00+00:00","UserScreenname":"xamarinhq","Text":"Get the most out of Binding in #XamarinForms with this overview of the powerful features that you should be using: https://t.co/VpucH7m8z9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":22,"RawContent":null},{"Id":"950803363595243521","CreatedAt":"2018-01-09T18:56:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to deliver rich media experiences with the #XamarinForms Video Player: https://t.co/ndy3yvDDNk https://t.co/V8JfqCj42s","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":89,"FavoriteCount":40,"RawContent":null},{"Id":"950774673335341058","CreatedAt":"2018-01-09T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Add a little 3D to your #Xamarin iOS apps with #ARKit and F#: https://t.co/0UXY2Lk1XB https://t.co/G6BluXZvLM","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":25,"FavoriteCount":11,"RawContent":null},{"Id":"950410272363163649","CreatedAt":"2018-01-08T16:54:01+00:00","UserScreenname":"xamarinhq","Text":"Add cross-platform charts to any app the easy way with #MicroCharts: https://t.co/VeqfS1vfIL https://t.co/k8IzINY3SW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":136,"FavoriteCount":64,"RawContent":null},{"Id":"950049897843105792","CreatedAt":"2018-01-07T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Bring 3D Models to life in augmented reality with #UrhoSharp: https://t.co/0c8YDfY3Ep https://t.co/6yNTVxdVbh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":50,"FavoriteCount":18,"RawContent":null},{"Id":"949688768231104512","CreatedAt":"2018-01-06T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"Add Augmented Reality to your #XamarinAndroid apps with #ARCore: https://t.co/TwpBAAMyUJ https://t.co/EvDnR69pjy","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":105,"FavoriteCount":48,"RawContent":null},{"Id":"949372052758302723","CreatedAt":"2018-01-05T20:08:30+00:00","UserScreenname":"xamarinhq","Text":"Learn how Colonial Life drives field sales productivity with #dotNET and #DevOps using #XamarinForms:… https://t.co/Y1wBTN0TJA","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":26,"FavoriteCount":13,"RawContent":null},{"Id":"949323858972233734","CreatedAt":"2018-01-05T16:57:00+00:00","UserScreenname":"xamarinhq","Text":"Learn how ActivityTask makes async/await easier to use in your #Xamarin Android mobile apps: https://t.co/drhcfIy4ht","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":56,"FavoriteCount":21,"RawContent":null},{"Id":"948981959132368901","CreatedAt":"2018-01-04T18:18:24+00:00","UserScreenname":"xamarinhq","Text":"CoreML Programming with Xamarin.Mac and F#: https://t.co/vI7JuxjkWa https://t.co/VAkrZo84pP","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":69,"FavoriteCount":39,"RawContent":null},{"Id":"948961974766972934","CreatedAt":"2018-01-04T16:59:00+00:00","UserScreenname":"xamarinhq","Text":"Add native Android Facebook Authentication to your app using #Azure App Service in this guide from @jamesmontemagno: https://t.co/DAcKpYLHe5","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":16,"RawContent":null},{"Id":"948635192490590211","CreatedAt":"2018-01-03T19:20:29+00:00","UserScreenname":"xamarinhq","Text":"https://t.co/sV84us2Np4 https://t.co/tduUDgg9oS","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":30,"FavoriteCount":6,"RawContent":null},{"Id":"948604119945760768","CreatedAt":"2018-01-03T17:17:01+00:00","UserScreenname":"xamarinhq","Text":"Take advantage of #ARKit, an augmented-reality mode on iOS 11 for 6S and up iPhones + 2017 iPads and iPad Pros:… https://t.co/tuqMBJJWpq","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":38,"FavoriteCount":18,"RawContent":null},{"Id":"948294578192437248","CreatedAt":"2018-01-02T20:47:00+00:00","UserScreenname":"xamarinhq","Text":"Did your favorite make the cut? Get the full list of the top #Xamarin blog posts of 2017, and see the top post of t… https://t.co/dVcXEnCo7o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":57,"FavoriteCount":27,"RawContent":null}]}},"RunOn":"2018-01-13T05:30:37.9302044Z","RunDurationInMilliseconds":3833}