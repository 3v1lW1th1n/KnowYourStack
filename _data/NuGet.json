{"Data":{"Blog":{"FeedItems":[{"Title":"New and improved NuGet Search is here!","PublishedOn":"2019-08-23T03:31:26+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Itâ€™s been a long time coming, and today we are excited to announce the new and improved search on NuGet.org leveraging Azure Search. We want to start this post with a huge thanks to you, the NuGet...","Href":"https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/","RawContent":null},{"Title":"Surfacing GitHub Usage for packages on NuGet.org","PublishedOn":"2019-07-17T20:00:23+00:00","CommentsCount":3,"FacebookCount":0,"Summary":"There are several criteria you can use today to evaluate NuGet packages. We received feedback that you would like even more information to help choose the right packages. We&#8217;re excited to...","Href":"https://devblogs.microsoft.com/nuget/surfacing-github-usage-for-packages-on-nuget-org/","RawContent":null},{"Title":"NuGet Spring 2019 Roadmap","PublishedOn":"2019-04-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We published our last NuGet roadmap in June last year. Many of the features announced were major additions to NuGet and we have been hard at work to implement those over the last few months. In this...","Href":"https://devblogs.microsoft.com/nuget/nuget-spring-2019-roadmap/","RawContent":null},{"Title":"Enable repeatable package restores using a lock file","PublishedOn":"2018-12-17T08:00:00+00:00","CommentsCount":1,"FacebookCount":0,"Summary":"With PackageReference, NuGet always tries to produce the same closure of package dependencies if the input package reference list has not changed. However, there are a few scenarios where it may not...","Href":"https://devblogs.microsoft.com/nuget/enable-repeatable-package-restores-using-a-lock-file/","RawContent":null},{"Title":"Lock down your dependencies using configurable trust policies","PublishedOn":"2018-12-05T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"For the past several months we have focused on various features to improve package security and trust. Around a year back, we had announced our plans on various signing functionalities that we have...","Href":"https://devblogs.microsoft.com/nuget/lock-down-your-dependencies-using-configurable-trust-policies/","RawContent":null},{"Title":"Improved package debugging experience with the NuGet.org symbol server","PublishedOn":"2018-11-16T08:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Starting today, you can publish symbol packages to the NuGet.org symbol server. With NuGet.org as a single service provider for libraries and symbols, package authors and consumers will have a...","Href":"https://devblogs.microsoft.com/nuget/improved-package-debugging-experience-with-the-nuget-org-symbol-server/","RawContent":null},{"Title":"Introducing Source Code Link for NuGet packages","PublishedOn":"2018-08-27T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"NuGet.org now supports surfacing source code repository link for NuGet packages. This will enable package authors to surface both the project&#8217;s website and the source repository using the...","Href":"https://devblogs.microsoft.com/nuget/introducing-source-code-link-for-nuget-packages/","RawContent":null},{"Title":"NuGet.org starts repo-signing packages","PublishedOn":"2018-08-10T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In May, we implemented Stage 1 and enabled support for any NuGet.org user to submit signed packages to NuGet.org. Today, we are announcing Stage 2 of our NuGet package signing journey &#8211; tamper...","Href":"https://devblogs.microsoft.com/nuget/introducing-repository-signatures/","RawContent":null},{"Title":"NuGet Summer 2018 Roadmap","PublishedOn":"2018-07-02T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This blog post provides insights into the NuGet team plans for the upcoming quarter (July &#8211; Sep 2018). In the March 2018 NuGet Spring 2018 Roadmap, we had outlined Package Signing,...","Href":"https://devblogs.microsoft.com/nuget/nuget-summer-2018-roadmap/","RawContent":null},{"Title":"Introducing signed package submissions to NuGet.org","PublishedOn":"2018-05-22T07:00:00+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"In September 2017, we announced our plans to improve the security of the NuGet ecosystem by introducing the ability for package authors to sign packages. Today, we want to announce support for any...","Href":"https://devblogs.microsoft.com/nuget/introducing-signed-package-submissions/","RawContent":null}],"ResultType":"Feed"},"Gallery":{"Events":[{"Id":"10358414470","Type":"PullRequestEvent","CreatedAt":"2019-09-05T23:09:07","Actor":"shishirx34","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7511","RelatedDescription":"Opened pull request \"Add site admin check for tenant\" (#7511) at NuGet/NuGetGallery","RelatedBody":"As part of getting rid of old AAD/MSA configs, we want to bolster the site admin check. https://github.com/NuGet/Engineering/issues/2567\r\n\r\nThis PR needs the new configs, will send that PR out separately.\r\n\r\n![image](https://user-images.githubusercontent.com/1646506/64389418-7054fb00-cff7-11e9-8cae-7ee7ff3680eb.png)\r\n"},{"Id":"10358407966","Type":"PullRequestEvent","CreatedAt":"2019-09-05T23:07:28","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7508","RelatedDescription":"Merged pull request \"[ReleasePrep] RI dev to master\" (#7508) at NuGet/NuGetGallery","RelatedBody":"Apparently, previous dev -> master was squash-merged, so there is more things here than should be."},{"Id":"10358197642","Type":"PullRequestEvent","CreatedAt":"2019-09-05T22:21:18","Actor":"scottbommarito","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7510","RelatedDescription":"Opened pull request \"Add abbr tags to hidden column headers in display package version history table\" (#7510) at NuGet/NuGetGallery","RelatedBody":"https://devdiv.visualstudio.com/DevDiv/_workitems/edit/905742\r\n\r\nAlthough we are compliant with `aria-label` alone, according to one of our accessibility contacts, we should add `abbr` as well."},{"Id":"10357708801","Type":"PullRequestEvent","CreatedAt":"2019-09-05T20:56:41","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7505","RelatedDescription":"Merged pull request \"Order by created ascending by default in FindPackagesById()\" (#7505) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/NuGetGallery/issues/5432.\r\n\r\nFor `/api/v2/FindPackagesById()`, if no `$orderby` is specified, use order by Created timestamp (ascending) by default. The previous behavior was to use relevance ordering which makes no sense on such an API. This code can ship immediately because both old search and Azure Search default unrecognized sort orders to `Relevance`. In other words, this will begin to work when both a) we move hijack queries over to Azure Search and b) Azure Search supports order by created.\r\n\r\nThe `/api/v2/Search()` endpoint still defaults to ordering by relevance."},{"Id":"10357519494","Type":"IssuesEvent","CreatedAt":"2019-09-05T20:27:52","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7509","RelatedDescription":"Opened issue \"[Deployment] Week of 2019-09-02\" (#7509) at NuGet/NuGetGallery","RelatedBody":"- [ ] INT\r\n  - [ ] Merge Gallery: https://github.com/NuGet/NuGetGallery/pull/7508\r\n  - [ ] Gallery\r\n- [ ] PROD\r\n  - [ ] Gallery"},{"Id":"10357359601","Type":"PullRequestEvent","CreatedAt":"2019-09-05T20:03:58","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7508","RelatedDescription":"Opened pull request \"[ReleasePrep] RI dev to master\" (#7508) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10357310362","Type":"PullRequestEvent","CreatedAt":"2019-09-05T19:56:49","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7507","RelatedDescription":"Merged pull request \"[ReleasePrep] master to dev FI\" (#7507) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10357284331","Type":"PullRequestEvent","CreatedAt":"2019-09-05T19:53:00","Actor":"agr","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7507","RelatedDescription":"Opened pull request \"[ReleasePrep] master to dev FI\" (#7507) at NuGet/NuGetGallery","RelatedBody":""},{"Id":"10355972512","Type":"IssuesEvent","CreatedAt":"2019-09-05T16:42:37","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/issues/7506","RelatedDescription":"Opened issue \"[Azure Search] Documents with null isExcludedByDefault are excluded from default search\" (#7506) at NuGet/NuGetGallery","RelatedBody":"This is not a big deal right now since the default search is dominated by documents initialized by `Db2AzureSearch`, but theoretically a new package ID can could be introduced by `Catalog2AzureSearch` that has a null `isExcludedByDefault` and will therefore never appear in the default search results.\r\n\r\n`Db2AzureSearch` is the only job that sets `isExcludedByDefault` so package IDs introduced (or relisted) after the index rebuild will never appear in the default search because the Azure Search services looks for `isExcludedByDefault eq false`. We can easily fix this by switching to `isExcludedByDefault ne true` to include both the `false` and the `null` case.\r\n\r\n/cc @shishirx34 "},{"Id":"10355692244","Type":"PullRequestEvent","CreatedAt":"2019-09-05T16:05:50","Actor":"joelverhagen","Repository":"NuGet/NuGetGallery","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/NuGetGallery/pull/7505","RelatedDescription":"Opened pull request \"Order by created ascendung by default in FindPackagesById()\" (#7505) at NuGet/NuGetGallery","RelatedBody":"Progress on https://github.com/NuGet/NuGetGallery/issues/5432.\r\n\r\nFor `/api/v2/FindPackagesById()`, if no `$orderby` is specified, use order by Created timestamp (ascending) by default. The previous behavior was to use relevance ordering which makes no sense on such an API. This code can ship immediately because both old search and Azure Search default unrecognized sort orders to `Relevance`. In other words, this will begin to work when both a) we move hijack queries over to Azure Search and b) Azure Search supports order by created.\r\n\r\nThe `/api/v2/Search()` endpoint still defaults to ordering by relevance."}],"ResultType":"GitHubEvent"},"Home":{"Events":[{"Id":"10358730959","Type":"IssuesEvent","CreatedAt":"2019-09-06T00:32:37","Actor":"mbranscomb","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8556","RelatedDescription":"Opened issue \"Provide option to upload packages for verification and be staged but unpublished.\" (#8556) at NuGet/Home","RelatedBody":"## Details\r\n\r\nWe would like to be able to upload packages to NuGet.org for signature validation / virus scanning / verification but such that they could be deleted if necessary before publishing and listing. Effectively we would like to stage the NuGet packages ready for release but know that we could take them down if any last minute showstopper issues were discovered.\r\n\r\nWe want to do this because we have a coordinated release of multiple products across different platforms and wherever possible we want these all to go live within the same time window. \r\n\r\nThe proposed workflow would be:\r\n1. Upload/push updated packages\r\n2. Signature validation, virus scanning, verification\r\n3. Stage (but can delete at this point)\r\n4. Publish (with option not to list)\r\n5. List (publicly visible)"},{"Id":"10358046435","Type":"IssuesEvent","CreatedAt":"2019-09-05T21:52:11","Actor":"scottbommarito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8490","RelatedDescription":"Closed issue \"Add test for NuGet/NuGet.Client#3024 change\" (#8490) at NuGet/Home","RelatedBody":"NuGet/NuGet.Client#3024 code change added quickly to meet shipping schedule. Need to add test."},{"Id":"10357423501","Type":"IssuesEvent","CreatedAt":"2019-09-05T20:13:21","Actor":"dotMorten","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8555","RelatedDescription":"Opened issue \"Nuget command line parameters are inconsistent\" (#8555) at NuGet/Home","RelatedBody":"## Details about Problem\r\nWhen using nuget.exe I was looking for help. So I naturally tried the various common ways to get the help output:\r\n```\r\nnuget /?\r\nnuget -?\r\nnuget --?\r\nnuget -help\r\nnuget /help\r\nnuget --help\r\n```\r\nAll of them returned:\r\n```\r\nUnknown command: '/?'\r\nNuGet.CommandLine.CommandLineException: Unknown command: '/?'\r\n   at NuGet.CommandLine.CommandManager.GetCommand(String commandName)\r\n   at NuGet.CommandLine.CommandLineParser.ParseCommandLine(IEnumerable`1 commandLineArgs)\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n```\r\nInstead it turns out the command is\r\n`nuget help`\r\nThis is a bit against common convention.\r\nHowever it gets weirder. I needed help for the `nuget config` command, so now having learned you add `help` without a dash, I entered this:\r\n```\r\nc:\\>nuget config help\r\nKey 'help' not found.\r\n```\r\n\r\nIt turns out that in this specific case, you must use a dash in front of the command: `nuget config -help`\r\n\r\nThis is rather inconsistent. The quick fix would allow `nuget -help`  and `nuget -?` (or forward slash on Windows) to be the common documented approach, as it's in alignment with common conventions, and also aligns with other help commands in the nuget cli.\r\n\r\nI later realized you can also do `nuget help config`, but again I've found it more common you ask for help after the command you want help with, and not the other way around.\r\n\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe):\r\n\r\nNuGet version (x.x.x.xxx):  5.1.0.6013\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): Win10 v1809 17763.529\r\n\r\n"},{"Id":"10356992035","Type":"IssuesEvent","CreatedAt":"2019-09-05T19:09:10","Actor":"nkolev92","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8554","RelatedDescription":"Opened issue \"NU5048 is a warning in the error range\" (#8554) at NuGet/Home","RelatedBody":"NU code from 5000-5099 are errors.\r\n5100-5199 are warnings. \r\n\r\nThe root cause that the warning in question was originally an error and was never fixed. \r\n\r\nWe should discuss how we want to address this, given that this has shipped in previews already. \r\n\r\n//cc @dominoFire @rrelyea "},{"Id":"10356529626","Type":"IssuesEvent","CreatedAt":"2019-09-05T18:02:24","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8553","RelatedDescription":"Closed issue \"Build:  ShouldSkipOptimize is hard-coded in YAML\" (#8553) at NuGet/Home","RelatedBody":"[`ShouldSkipOptimize` is currently hard-coded to `false` in build\\vsts_build.yaml](https://github.com/NuGet/NuGet.Client/blob/4b312015695f580eb307791a4544d0ec81292d05/build/vsts_build.yaml#L72).  The impact of this is that if sufficient time should pass between successive builds such that previous optimization data has been deleted due to retention limits, the next build will fail.  Resolving this would require a commit to change `ShouldSkipOptimize` to `true`, allowing the build and its corresponding release to complete and then another change to return `ShouldSkipOptimize` back to `false`.\r\n\r\n`ShouldSkipOptimize` should be settable at build queue time."},{"Id":"10356025715","Type":"IssuesEvent","CreatedAt":"2019-09-05T16:50:17","Actor":"scottbommarito","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8518","RelatedDescription":"Closed issue \"[Accessibility] Installed tab with a warning icon due to deprecation is not announced\" (#8518) at NuGet/Home","RelatedBody":"Install a deprecated package and go to the PM/Solution PM UI. \r\n\r\nNavigate to installed tab and notice that the deprecation warning is not announced. \r\n\r\nNote that if you have a number in the updates tab it is announced, so there is precedent for this. "},{"Id":"10355961541","Type":"IssuesEvent","CreatedAt":"2019-09-05T16:40:59","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8553","RelatedDescription":"Opened issue \"Build:  ShouldSkipOptimize is hard-coded in YAML\" (#8553) at NuGet/Home","RelatedBody":"[`ShouldSkipOptimize` is currently hard-coded to `false` in build\\vsts_build.yaml](https://github.com/NuGet/NuGet.Client/blob/4b312015695f580eb307791a4544d0ec81292d05/build/vsts_build.yaml#L72).  The impact of this is that if sufficient time should pass between successive builds such that previous optimization data has been deleted due to retention limits, the next build will fail.  Resolving this would require a commit to change `ShouldSkipOptimize` to `true`, allowing the build and its corresponding release to complete and then another change to return `ShouldSkipOptimize` back to `false`.\r\n\r\n`ShouldSkipOptimize` should be settable at build queue time."},{"Id":"10355228102","Type":"IssuesEvent","CreatedAt":"2019-09-05T15:12:15","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8303","RelatedDescription":"Closed issue \"nuget pack Illegal characters in path.\" (#8303) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): nuget.exe\r\n\r\nNuGet version (x.x.x.xxx): NuGet Version: 5.0.2.5988\r\n\r\ndotnet.exe --version (if appropriate):\r\n\r\nVS version (if appropriate): 2013\r\n\r\nOS version (i.e. win10 v1607 (14393.321)):  Windows 7\r\n\r\nWorked before? If so, with which NuGet version: NuGet Version: 4.8.1.5435\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1.    Use attached zipped project.  Note that on my machine, the project was located in C:\\dev\\NugetTest\r\n\r\n2.   nuget pack NugetTest.csproj\r\n\r\nOutput is:\r\nc:\\dev\\NugetTest>nuget pack\r\nAttempting to build package from 'NugetTest.csproj'.\r\nIllegal characters in path.\r\n...\r\n\r\n## Other suggested things\r\n\r\n### Verbose Logs\r\n\r\nPlease include verbose logs (NuGet.exe <COMMAND> -verbosity detailed | dotnet.exe <COMMAND> --verbosity diag | etc...)\r\n\r\nNuGet Version: 5.0.2.5988\r\nAttempting to build package from 'NugetTest.csproj'.\r\nIllegal characters in path.\r\nSystem.ArgumentException: Illegal characters in path.\r\n   at System.IO.Path.CheckInvalidPathChars(String path, Boolean checkAdditional)\r\n   at System.IO.Path.Combine(String path1, String path2)\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)\r\n   at NuGet.CommandLine.MsBuildUtility.GetMSBuild()\r\n   at NuGet.CommandLine.MsBuildUtility.GetMsBuildToolset(String userVersion, IConsole console)\r\n   at System.Lazy`1.CreateValue()\r\n   at System.Lazy`1.LazyInitValue()\r\n   at NuGet.CommandLine.PackCommand.<ExecuteCommand>b__80_0()\r\n   at System.Lazy`1.CreateValue()\r\n   at System.Lazy`1.LazyInitValue()\r\n   at NuGet.Commands.PackCommandRunner.BuildFromProjectFile(String path)\r\n   at NuGet.Commands.PackCommandRunner.BuildPackage()\r\n   at NuGet.CommandLine.PackCommand.ExecuteCommand()\r\n   at NuGet.CommandLine.Command.ExecuteCommandAsync()\r\n   at NuGet.CommandLine.Command.Execute()\r\n   at NuGet.CommandLine.Program.MainCore(String workingDirectory, String[] args)\r\n\r\nNote: there is no error when running with previous version of Nuget (as noted above).\r\n\r\n### Sample Project\r\n\r\n[NugetTest.zip](https://github.com/NuGet/Home/files/3361741/NugetTest.zip)\r\n\r\n\r\nVery helpful if you can zip a project and paste into this issue!\r\n\r\n"},{"Id":"10354669281","Type":"IssuesEvent","CreatedAt":"2019-09-05T14:11:09","Actor":"dtivel","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8552","RelatedDescription":"Opened issue \"VS:  add additional telemetry for package install/restore\" (#8552) at NuGet/Home","RelatedBody":""},{"Id":"10349975606","Type":"IssuesEvent","CreatedAt":"2019-09-05T00:45:32","Actor":"ilatypov","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8551","RelatedDescription":"Opened issue \"nuget.exe ignores packageSourceCredentials in nuget.config when downloading a package\" (#8551) at NuGet/Home","RelatedBody":"Our poorly coded pipeline uploaded public xunit packages to a local (password-protected) jFrog artifactory.  Attempts to download them using nuget.exe's packageSourceCredentials with a clear-text (encrypted) jFrog user name and password failed showing 403 Forbidden messages.  Proxying the traffic through BURP showed that nuget.exe ignored the credentials supplied in nuget.config.\r\n\r\n## Details about Problem\r\n\r\nNuGet product used (NuGet.exe | VS UI | Package Manager Console | dotnet.exe): `nuget.exe`\r\n\r\nNuGet version (x.x.x.xxx): `4.9.4.5839 and 5.2.0.6090`\r\n\r\nVS version (if appropriate): `2019 Enterprise with both the above Nuget.exe versions and 2017 (15.0) with Nuget 4.9.4`\r\n\r\nOS version (i.e. win10 v1607 (14393.321)): \r\n```\r\n$ wmic os get Caption,CSDVersion /value\r\nCaption=Microsoft Windows Server 2008 R2 Enterprise\r\nCSDVersion=Service Pack 1\r\n```\r\n\r\nWorked before? If so, with which NuGet version: `it did a day ago but stopped (I installed a dotnet 4.7 devpack using choco in between)`.\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Run CMD as an administrator (with High Mandatory Level).  Change to a top-level directory of the drive to work around nuget.exe's failure to handle long file names.  Set up a BURP proxy in Internet Options, install the BURP cert into the Certification Authorities store.\r\nCreate a `nuget.config`, delete other nuget.config's such as in %userprofile%\\appdata\\nuget\\nuget.config.\r\n```\r\n<configuration>\r\n   <packageSources>\r\n     <add key=\"example-nuget\" value=\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\" />\r\n   </packageSources>\r\n   <disabledPackageSources>\r\n     <add key=\"nuget.org\" value=\"true\" />\r\n   </disabledPackageSources>\r\n   <packageSourceCredentials>\r\n     <example-nuget>\r\n       <add key=\"Username\" value=\"USER\" />\r\n       <add key=\"ClearTextPassword\" value=\"ENCRYPTEDPASS\" />\r\n     </example-nuget>\r\n   </packageSourceCredentials>\r\n   <config>\r\n     <add key=\"repositoryPath\" value=\"d:/packages\" />\r\n   </config>\r\n</configuration>\r\n```\r\n2. Set up a password-protected local repo in a jFrog artifactory, upload an external package such as xunit console runner 2.3.1 into it (to reproduce mistakes in pipelines).  Set up a virtual repo that includes both the local repo and the remote one (Microsoft gallery).  This results in artifactory allowing anonymous FindByPackageIds() calls but requiring authentication to download the above public package (xunit console runner).\r\n\r\n3. Have a Visual Studio \"classic\" solution with a dependent project containing the reference to the above package in its `packages.config`.\r\n```\r\n$ grep console DotNetClassic_Library.Tests/packages.config\r\n  <package id=\"xunit.runner.console\" version=\"2.3.1\" targetFramework=\"net472\" developmentDependency=\"true\" />\r\n```\r\n4. Run `nuget restore` with the created `nuget.config` and verbose diagnostics.\r\n```\r\nD:\\temp\\jgp_classic>nuget restore -configfile nuget.config -v d -DisableParallelProcessing -NonInteractive\r\nNuGet Version: 5.2.0.6090\r\nRestoring NuGet packages for solution D:\\temp\\jgp_classic\\DotNetClassic_Library.sln.\r\nMSBuild auto-detection: using msbuild version '16.0.461.62831' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nMSBuild P2P timeout [ms]: 120000\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin\\msbuild.exe \"C:\\Users\\a-CIUSER\\AppData\\Local\\Temp\\NuGetScratch\\x450xxfy.v0w.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\Users\\a-CIUSER\\AppData\\Local\\Temp\\NuGetScratch\\wydlma2h.u5h.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:Restor\r\neTaskAssemblyFile=\"C:\\ProgramData\\chocolatey\\lib\\NuGet.CommandLine\\tools\\nuget.exe\" /p:RestoreSolutionDirectory=\"D:\\temp\\jgp_classic\\\\\" /p:RestoreConfigFile=\"nuget.config\" /p:SolutionDir=\"D:\\temp\\jgp_classic\\\\\" /p:SolutionName=\"DotNetClassic_Library\"\r\n\r\nRestoring NuGet package xunit.runner.console.2.3.1.\r\nMissing C:\\Users\\a-CIUSER\\.nuget\\packages\\xunit.runner.console\\2.3.1\\xunit.runner.console.2.3.1.nupkg\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Packages(Id='xunit.runner.console',Version='2.3.1')\r\n  OK https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Packages(Id='xunit.runner.console',Version='2.3.1') 158ms\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\nUsing C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\CommonExtensions\\Microsoft\\NuGet\\Plugins\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.exe as a credential provider plugin.\r\nUsing credentials from config. UserName: USER\r\n    [CredentialProvider.202447]Running in plug-in mode\r\n    [CredentialProvider.202447]Command-line v0.1.11: \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\Common7\\IDE\\C\r\nommonExtensions\\Microsoft\\NuGet\\Plugins\\CredentialProvider.Microsoft\\CredentialProvider.Microsoft.exe\" -Plugin\r\n    [CredentialProvider.202447]Handling 'Request' 'GetOperationClaims' - {}\r\n    [CredentialProvider.202447]Handling 'Request' 'SetLogLevel' - {\"LogLevel\":\"Debug\"}\r\n    [CredentialProvider]Handling 'Request' 'SetCredentials' - {\"PackageSourceRepository\":\"/artifactory/api/nuget/example-nuget\"}\r\n    [CredentialProvider.202447]Handling 'Request' 'Initialize' - {\"ClientVersion\":\"5.2.0\",\"Culture\":\"en-US\",\"RequestTimeout\":\"00:0\r\n0:05\"}\r\n    [CredentialProvider]Handling 'Request' 'GetAuthenticationCredentials' - {\"Uri\":\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\",\"IsRetry\":false,\"IsNonInteractive\":true,\"CanShowDialog\":true}\r\n    [CredentialProvider]Creating a progress reporter with interval: 00:00:02\r\n    [CredentialProvider]Handling auth request, Uri: https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget,\r\nIsRetry: False, IsNonInteractive: True, CanShowDialog: True\r\n    [CredentialProvider]URI: https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n    [CredentialProvider]Skipping NuGetCredentialProvider.CredentialProviders.VstsBuildTaskServiceEndpoint.VstsBuildTaskServiceEndpointCredentialProvider, cannot provide credentials for https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n    [CredentialProvider]VstsBuildTaskCredentialProvider - This credential provider must be run under the Team Build tasks for NuGet. Appropriate environment variables must be set.\r\n    [CredentialProvider]VstsBuildTaskServiceEndpointCredentialProvider - This credential provider must be run under the Team Build\r\n tasks for NuGet with external endpoint credentials. Appropriate environment variable needs to be set.\r\n    [CredentialProvider]Skipping NuGetCredentialProvider.CredentialProviders.VstsBuildTask.VstsBuildTaskCredentialProvider, cannot\r\n provide credentials for https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n    [CredentialProvider]GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n    [CredentialProvider]Skipping NuGetCredentialProvider.CredentialProviders.Vsts.VstsCredentialProvider, cannot provide credentials for https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\nWARNING: The plugin credential provider could not acquire credentials. Authentication may require manual action. Consider re-running the command with --interactive for `dotnet`, /p:NuGetInteractive=\"true\" for MSBuild or removing the -NonInteractive switch for\r\n`NuGet`\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 2810ms\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/examp\r\nle-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 182ms\r\n\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 177ms\r\n\r\nWARNING: Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n  C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\packages\\'.\r\n  https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n  Response status code does not indicate success: 403 (Forbidden).\r\n\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\nWARNING: Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n  C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\packages\\'.\r\n  https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n  Response status code does not indicate success: 403 (Forbidden).\r\n\r\n\r\nErrors in packages.config projects\r\n    Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n      C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\packages\\'.\r\n      https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1'\r\n from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n      Response status code does not indicate success: 403 (Forbidden).\r\n\r\nNuGet Config files used:\r\n    D:\\temp\\jgp_classic\\nuget.config\r\n\r\nFeeds used:\r\n    C:\\Users\\a-CIUSER\\.nuget\\packages\\\r\n    https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n```\r\n5. Observe passwordless requests and responses in BURP.\r\n```\r\nGET /artifactory/api/nuget/example-nuget HTTP/1.1\r\nX-NuGet-Session-Id: a2887b9a-63b7-44b2-b22a-bb567837bec6\r\nuser-agent: NuGet Command Line/5.2.0 (Microsoft Windows NT 6.1.7601 Service Pack 1)\r\nX-NuGet-Client-Version: 5.2.0\r\nAccept-Language: en-US\r\nHost: artifactory.COMPANY.TLD\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\n\r\nHTTP/1.1 200 OK\r\nServer: Artifactory/6.11.1\r\nX-Artifactory-Id: 5b8f5b39d030c37a5292a71d537d8b510050617f\r\nX-Artifactory-Node-Id: Artifactory1\r\nDataServiceVersion: 1.0\r\nContent-Type: application/xml;charset=utf-8\r\nDate: Thu, 05 Sep 2019 00:25:00 GMT\r\nConnection: close\r\nStrict-Transport-Security: max-age=31536000;\r\nContent-Length: 577\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--\r\n  ~\r\n  ~ Copyright 2016 JFrog Ltd. All rights reserved.\r\n  ~ JFROG PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\r\n  -->\r\n\r\n<service xmlns=\"http://www.w3.org/2007/app\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:app=\"http://www.w3.org/2007/app\" xml:base=\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\">\r\n    <workspace>\r\n        <atom:title>Default</atom:title>\r\n        <collection href=\"Packages\">\r\n            <atom:title>Packages</atom:title>\r\n        </collection>\r\n    </workspace>\r\n</service>\r\n\r\nGET /artifactory/api/nuget/example-nuget/Packages(Id='xunit.runner.console',Version='2.3.1') HTTP/1.1\r\nAccept: application/atom+xml, application/xml\r\nX-NuGet-Session-Id: 056977a0-ec9f-4cdc-8506-f4e32fe3c089\r\nuser-agent: NuGet Command Line/5.2.0 (Microsoft Windows NT 6.1.7601 Service Pack 1)\r\nX-NuGet-Client-Version: 5.2.0\r\nAccept-Language: en-US\r\nHost: artifactory.COMPANY.TLD\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\n\r\nHTTP/1.1 200 OK\r\nServer: Artifactory/6.11.1\r\nX-Artifactory-Id: 5b8f5b39d030c37a5292a71d537d8b510050617f\r\nX-Artifactory-Node-Id: Artifactory1\r\nDataServiceVersion: 2.0\r\nContent-Type: application/atom+xml;charset=utf-8\r\nDate: Thu, 05 Sep 2019 00:25:00 GMT\r\nConnection: close\r\nStrict-Transport-Security: max-age=31536000;\r\nContent-Length: 3279\r\n\r\n<?xml version='1.0' encoding='UTF-8'?>\r\n<entry xmlns=\"http://www.w3.org/2005/Atom\" xmlns:d=\"http://schemas.microsoft.com/ado/2007/08/dataservices\" xmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\" xml:base=\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/nuget-local/\">\r\n  <id>https://artifactory.COMPANY.TLD/artifactory/api/nuget/nuget-local/Packages(Id='xunit.runner.console',Version='2.3.1')</id>\r\n  <lowerCaseId>https://artifactory.COMPANY.TLD/artifactory/api/nuget/nuget-local/packages(id='xunit.runner.console',version='2.3.1')</lowerCaseId>\r\n  <title type=\"text\">xunit.runner.console</title>\r\n  <summary type=\"text\">Console runner for the xUnit.net framework. Capable of running xUnit.net v1.9.2 and v2.0+ tests. Supports .NET 4.5.2 or later, .NET Core 1.x, and .NET Core 2.x.</summary>\r\n  <updated>2018-10-29T15:28:21Z</updated>\r\n  <author>\r\n    <name>James Newkirk,Brad Wilson</name>\r\n  </author>\r\n  <link rel=\"edit\" title=\"V2FeedPackage\" href=\"Packages(Id='xunit.runner.console',Version='2.3.1')\"/>\r\n  <link rel=\"self\" title=\"V2FeedPackage\" href=\"Packages(Id='xunit.runner.console',Version='2.3.1')\"/>\r\n  <category term=\"NuGetGallery.OData.V2FeedPackage\" scheme=\"http://schemas.microsoft.com/ado/2007/08/dataservices/scheme\"/>\r\n  <content type=\"application/zip\" src=\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\"/>\r\n  <m:properties xmlns:m=\"http://schemas.microsoft.com/ado/2007/08/dataservices/metadata\" xmlns:d=\"http://schemas.microsoft.com/ado/2007/08/dataservices\">\r\n    <d:lastUpdated>2018-10-29T15:28:21</d:lastUpdated>\r\n    <d:Version>2.3.1</d:Version>\r\n    <d:Created m:type=\"Edm.DateTime\">2018-10-29T15:28:21</d:Created>\r\n    <d:Dependencies></d:Dependencies>\r\n    <d:Description>Console runner for the xUnit.net framework. Capable of running xUnit.net v1.9.2 and v2.0+ tests. Supports .NET 4.5.2 or later, .NET Core 1.x, and .NET Core 2.x.</d:Description>\r\n    <d:DownloadCount m:type=\"Edm.Int32\">2</d:DownloadCount>\r\n    <d:IconUrl>https://raw.githubusercontent.com/xunit/media/master/logo-512-transparent.png</d:IconUrl>\r\n    <d:IsLatestVersion m:type=\"Edm.Boolean\">true</d:IsLatestVersion>\r\n    <d:IsAbsoluteLatestVersion m:type=\"Edm.Boolean\">true</d:IsAbsoluteLatestVersion>\r\n    <d:IsPrerelease m:type=\"Edm.Boolean\">false</d:IsPrerelease>\r\n    <d:Language m:null=\"true\"/>\r\n    <d:Published m:type=\"Edm.DateTime\">2018-10-29T15:28:21</d:Published>\r\n    <d:LicenseUrl>https://raw.githubusercontent.com/xunit/xunit/master/license.txt</d:LicenseUrl>\r\n    <d:PackageHash>nyiBNOCMzszb9eohU1u922RGKY4ZapXUv7niuGMY/8dbH1RSByf4L439txSu4MSo/zdZH+vj7h8zQozQ+7GzWg==</d:PackageHash>\r\n    <d:PackageHashAlgorithm>SHA512</d:PackageHashAlgorithm>\r\n    <d:PackageSize m:type=\"Edm.Int64\">735916</d:PackageSize>\r\n    <d:ProjectUrl>https://github.com/xunit/xunit</d:ProjectUrl>\r\n    <d:RequireLicenseAcceptance m:type=\"Edm.Boolean\">false</d:RequireLicenseAcceptance>\r\n    <d:Title>xUnit.net [Runner: Console]</d:Title>\r\n    <d:VersionDownloadCount m:type=\"Edm.Int32\">2</d:VersionDownloadCount>\r\n    <d:Authors>James Newkirk,Brad Wilson</d:Authors>\r\n    <d:MinClientVersion m:null=\"true\"/>\r\n    <d:Summary>Console runner for the xUnit.net framework.</d:Summary>\r\n  </m:properties>\r\n</entry>\r\n\r\nGET /artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 HTTP/1.1\r\nX-NuGet-Session-Id: af946c0b-07d8-4d2d-a0e2-184682b6aa9c\r\nuser-agent: NuGet Command Line/5.2.0 (Microsoft Windows NT 6.1.7601 Service Pack 1)\r\nX-NuGet-Client-Version: 5.2.0\r\nAccept-Language: en-US\r\nHost: artifactory.COMPANY.TLD\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\n\r\nHTTP/1.1 403 Forbidden\r\nServer: Artifactory/6.11.1\r\nX-Artifactory-Id: fd91a10aaf5e92305bba3b37f8ecc7aa3dcb8dcf\r\nX-Artifactory-Node-Id: art3\r\nContent-Type: application/json\r\nDate: Thu, 05 Sep 2019 00:25:00 GMT\r\nConnection: close\r\nStrict-Transport-Security: max-age=31536000;\r\nContent-Length: 185\r\n\r\n{\r\n  \"errors\" : [ {\r\n    \"status\" : 403,\r\n    \"message\" : \"Download request for repo:path 'example-nuget-local:xunit.runner.console.2.3.1.nupkg' is forbidden for user 'anonymous'.\"\r\n  } ]\r\n}\r\n\r\n\r\n6. Similarly, the older nuget.exe v. 4.9.4 shows 403 Forbidden.\r\n```\r\nD:\\temp\\jgp_classic>d:\\util\\nuget restore -configfile nuget.config -v d -DisableParallelProcessing -NonInteractive\r\nNuGet Version: 4.9.4.5839\r\nRestoring NuGet packages for solution D:\\temp\\jgp_classic\\DotNetClassic_Library.sln.\r\nMSBuild auto-detection: using msbuild version '16.0.461.62831' from 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterpris\r\ne\\MSBuild\\Current\\bin'. Use option -MSBuildVersion to force nuget to use a specific version of MSBuild.\r\nMSBuild P2P timeout [ms]: 120000\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\bin\\msbuild.exe \"C:\\Users\\a-CIUSER\\AppData\\Local\\T\r\nemp\\NuGetScratch\\ihwnphjw.jtt.nugetinputs.targets\" /t:GenerateRestoreGraphFile /nologo /nr:false /v:q /p:NuGetRestoreTargets=\"C:\\U\r\nsers\\a-CIUSER\\AppData\\Local\\Temp\\NuGetScratch\\icpnoxqu.mwn.nugetrestore.targets\" /p:RestoreUseCustomAfterTargets=\"True\" /p:Restor\r\neTaskAssemblyFile=\"d:\\util\\nuget.exe\" /p:RestoreSolutionDirectory=\"D:\\temp\\jgp_classic\\\\\" /p:RestoreConfigFile=\"nuget.config\" /p:S\r\nolutionDir=\"D:\\temp\\jgp_classic\\\\\" /p:SolutionName=\"DotNetClassic_Library\"\r\n\r\nRestoring NuGet package xunit.runner.console.2.3.1.\r\nMissing C:\\Users\\a-CIUSER\\.nuget\\packages\\xunit.runner.console\\2.3.1\\xunit.runner.console.2.3.1.nupkg\r\n  CACHE https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Packages(Id='xunit.runner.console',Version='2.3.1')\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\nUsing credentials from config. UserName: USER\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 919ms\r\n\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/examp\r\nle-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 475ms\r\n\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/examp\r\nle-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\n  GET https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1\r\n  Forbidden https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 313ms\r\n\r\nWARNING: Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n  C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\pack\r\nages\\'.\r\n  https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1' fro\r\nm 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n  Response status code does not indicate success: 403 (Forbidden).\r\n\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/examp\r\nle-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\nWARNING: Error downloading 'xunit.runner.console.2.3.1' from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/examp\r\nle-nuget/Download/xunit.runner.console/2.3.1'.\r\nResponse status code does not indicate success: 403 (Forbidden).\r\nWARNING: Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n  C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\pack\r\nages\\'.\r\n  https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1' fro\r\nm 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n  Response status code does not indicate success: 403 (Forbidden).\r\n\r\n\r\nErrors in packages.config projects\r\n    Unable to find version '2.3.1' of package 'xunit.runner.console'.\r\n      C:\\Users\\a-CIUSER\\.nuget\\packages\\: Package 'xunit.runner.console.2.3.1' is not found on source 'C:\\Users\\a-CIUSER\\.nuget\\\r\npackages\\'.\r\n      https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget: Error downloading 'xunit.runner.console.2.3.1'\r\n from 'https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1'.\r\n      Response status code does not indicate success: 403 (Forbidden).\r\n\r\nNuGet Config files used:\r\n    D:\\temp\\jgp_classic\\nuget.config\r\n\r\nFeeds used:\r\n    C:\\Users\\a-CIUSER\\.nuget\\packages\\\r\n    https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\r\n```\r\n\r\n7. A BURP trace of the 4.9.4 client follows.\r\n```\r\nGET /artifactory/api/nuget/example-nuget HTTP/1.1\r\nX-NuGet-Session-Id: 98d52ea7-b203-46a4-bd5b-fc1c0a2b3d7b\r\nuser-agent: NuGet Command Line/4.9.4 (Microsoft Windows NT 6.1.7601 Service Pack 1)\r\nX-NuGet-Client-Version: 4.9.4\r\nAccept-Language: en-US\r\nHost: artifactory.COMPANY.TLD\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\n\r\nHTTP/1.1 200 OK\r\nServer: Artifactory/6.11.1\r\nX-Artifactory-Id: fd91a10aaf5e92305bba3b37f8ecc7aa3dcb8dcf\r\nX-Artifactory-Node-Id: art3\r\nDataServiceVersion: 1.0\r\nContent-Type: application/xml;charset=utf-8\r\nDate: Thu, 05 Sep 2019 00:36:58 GMT\r\nConnection: close\r\nStrict-Transport-Security: max-age=31536000;\r\nContent-Length: 577\r\n\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<!--\r\n  ~\r\n  ~ Copyright 2016 JFrog Ltd. All rights reserved.\r\n  ~ JFROG PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.\r\n  -->\r\n\r\n<service xmlns=\"http://www.w3.org/2007/app\" xmlns:atom=\"http://www.w3.org/2005/Atom\" xmlns:app=\"http://www.w3.org/2007/app\" xml:base=\"https://artifactory.COMPANY.TLD/artifactory/api/nuget/example-nuget\">\r\n    <workspace>\r\n        <atom:title>Default</atom:title>\r\n        <collection href=\"Packages\">\r\n            <atom:title>Packages</atom:title>\r\n        </collection>\r\n    </workspace>\r\n</service>\r\n\r\nGET /artifactory/api/nuget/example-nuget/Download/xunit.runner.console/2.3.1 HTTP/1.1\r\nX-NuGet-Session-Id: 67175435-7ae7-4b91-b0f9-62d0ecef1370\r\nuser-agent: NuGet Command Line/4.9.4 (Microsoft Windows NT 6.1.7601 Service Pack 1)\r\nX-NuGet-Client-Version: 4.9.4\r\nAccept-Language: en-US\r\nHost: artifactory.COMPANY.TLD\r\nAccept-Encoding: gzip, deflate\r\nConnection: close\r\n\r\nHTTP/1.1 403 Forbidden\r\nServer: Artifactory/6.11.1\r\nX-Artifactory-Id: fd91a10aaf5e92305bba3b37f8ecc7aa3dcb8dcf\r\nX-Artifactory-Node-Id: art3\r\nContent-Type: application/json\r\nDate: Thu, 05 Sep 2019 00:36:58 GMT\r\nConnection: close\r\nStrict-Transport-Security: max-age=31536000;\r\nContent-Length: 185\r\n\r\n{\r\n  \"errors\" : [ {\r\n    \"status\" : 403,\r\n    \"message\" : \"Download request for repo:path 'example-nuget-local:xunit.runner.console.2.3.1.nupkg' is forbidden for user 'anonymous'.\"\r\n  } ]\r\n}\r\n```\r\n\r\n```"},{"Id":"10349899339","Type":"IssuesEvent","CreatedAt":"2019-09-05T00:24:34","Actor":"kartheekp-ms","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8168","RelatedDescription":"Closed issue \"Quote \" characters in PATH cause \"Illegal characters in path\" failure in `nuget restore`\" (#8168) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\n**NuGet product used:** nuget.exe installed from Chocolatey\r\n\r\n**NuGet version:** `NuGet Version: 5.0.2.5988`\r\n\r\n**OS version:** Windows 10 ver. 1903 [Version 10.0.18362.116]\r\n\r\n**Visual Studio version:** 2019 Enterprise ver. 16.1.1\r\n\r\n**Worked before? If so, with which NuGet version:** Yes, with nuget.exe 4.1.0.2450\r\n- More precisely, I believe this regression was caused by the fix for https://github.com/NuGet/Home/issues/7621 (PR https://github.com/NuGet/NuGet.Client/pull/2687 ; commit https://github.com/NuGet/NuGet.Client/commit/21f2b07f2c2e84afd6602c6743d356dae8880c0c )\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Open a cmd.exe command prompt\r\n1. Reset your PATH environment variable using this exact command:\r\n  `path C:\\Windows\\System32;C:\\Windows;C:\\ProgramData\\chocolatey\\lib\\NuGet.CommandLine\\tools;\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Enterprise\\MSBuild\\Current\\Bin\"`\r\n  (if you have a different version or edition of VS, and/or have installed NuGet to another location, you can change appropriately)\r\n1. `cd` to a directory containing a .sln VS solution file\r\n1. Run `msbuild -version`\r\n1. Run `nuget restore`\r\n\r\n**Expected results:** Both the MSBuild and NuGet commands run to completion\r\n**Actual results:** MSBuild successfully prints out its version, but NuGet fails with this message in red: `Illegal characters in path.`\r\n\r\n### Verbose Logs\r\n\r\n```\r\n[nuget restore -verbosity detailed]\r\nNuGet Version: 5.0.2.5988\r\nRestoring NuGet packages for solution D:\\GitHub\\metathinker\\console\\OpenConsole.sln.\r\nIllegal characters in path.\r\nSystem.ArgumentException: Illegal characters in path.\r\n   at System.IO.Path.CheckInvalidPathChars(String path, Boolean checkAdditional)\r\n   at System.IO.Path.Combine(String path1, String path2)\r\n   at System.Linq.Enumerable.WhereSelectArrayIterator`2.MoveNext()\r\n   at System.Linq.Enumerable.FirstOrDefault[TSource](IEnumerable`1 source, Func`2 predicate)\r\n   at NuGet.CommandLine.MsBuildUtility.GetMSBuild()\r\n   at NuGet.CommandLine.MsBuildUtility.GetMsBuildToolset(String userVersion, IConsole console)\r\n   at System.Lazy`1.CreateValue()\r\n   at System.Lazy`1.LazyInitValue()\r\n   at NuGet.CommandLine.RestoreCommand.ProcessSolutionFile(String solutionFileFullPath, PackageRestoreInputs restoreInputs)\r\n   at NuGet.CommandLine.RestoreCommand.<DetermineRestoreInputsAsync>d__46.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at NuGet.CommandLine.RestoreCommand.<ExecuteCommandAsync>d__36.MoveNext()\r\n```"},{"Id":"10349144306","Type":"IssuesEvent","CreatedAt":"2019-09-04T21:34:46","Actor":"heng-liu","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8547","RelatedDescription":"Closed issue \"Bless 5.2.0 NuGet.exe and publish 5.3.0-preview3 NuGet.exe and preview packages\" (#8547) at NuGet/Home","RelatedBody":" The checklist is as following:\r\n- [x]  Change the link https://dist.nuget.org/win-x86-commandline/latest/nuget.exe to point to 5.2\r\n- [x]  Publish https://dist.nuget.org/win-x86-commandline/v5.3.0-preview3/nuget.exe\r\n- [x]  Merge PR : https://github.com/NuGet/NuGet.Services.Index/pull/147\r\n- [x]  Push NuGet.* 5.3.0-preview3 packages to nuget.org  https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=426399\r\n- [x] Push NuGet.Commandline 5.2.0 package to nuget.org https://dev.azure.com/devdiv/DevDiv/_releaseProgress?_a=release-pipeline-progress&releaseId=383159"},{"Id":"10348696853","Type":"IssuesEvent","CreatedAt":"2019-09-04T20:26:15","Actor":"zivkan","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Home/issues/8527","RelatedDescription":"Closed issue \"[PerfWatson] UIDelay: nuget.packagemanagement.visualstudio.dll!NuGet.PackageManagement.VisualStudio.VSSolutionManager+<EnsureInitializeAsync>d__.MoveNext|nuget.packagemanagement.visualstudio.dll\" (#8527) at NuGet/Home","RelatedBody":"From internal bug 959478"},{"Id":"10348003145","Type":"IssuesEvent","CreatedAt":"2019-09-04T18:44:13","Actor":"donnie-msft","Repository":"NuGet/Home","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Home/issues/8550","RelatedDescription":"Opened issue \"NuGet.exe 4.9.x / 5.1.x Pack doesn't increment version from AssemblyInfo\" (#8550) at NuGet/Home","RelatedBody":"## Details about Problem\r\n\r\nWhen incrementing the Assembly Number on a C# Class Library, packing with NuGet.exe 5.4 correctly generates a .nupkg with the new version number. \r\n\r\nHowever, using older versions of nuget.exe (specifically, 5.1.0 and 4.9.4), the `Pack` command generated package version 1.0.0.\r\n\r\nDiscovered this while trying to repro https://github.com/NuGet/Home/issues/8497\r\n\r\nNuGet product used: NuGet.exe\r\nNuGet Version: 5.1.0.6013\r\n\r\nVS version (if appropriate): 16.3.0-pre.3.0+29229.4.d16.3 and 15.9.15+28307.812.\r\nWorked before?: Works on newer NuGet Version: 5.4.0.30492\r\n\r\n## Detailed repro steps so we can see the same problem\r\n\r\n1. Create new C# class library, .NET framework 4.6.2\r\n\r\n2. Build the library and pack it.\r\n\r\n3. Upgrade the library to a newer version, e.g. 1.0.1\r\n\r\n4. Build the library.\r\n\r\n5. Pack the library\r\na. using NuGet Version 5.4.x.\r\nb. using NuGet Version 5.1.x or 4.9.x.\r\n\r\n## Expected result\r\nWith 5a, you should now have a package with the new assembly version (eg, 1.0.1).\r\n\r\n## Actual result\r\nWith 5b, the package is still 1.0.0 and does not honor the Assembly Info changes.\r\n\r\n## Sample project\r\n[Repro8497.zip](https://github.com/NuGet/Home/files/3575969/Repro8497.zip)\r\n"}],"ResultType":"GitHubEvent"},"Announcements":{"Events":[{"Id":"10286366828","Type":"IssuesEvent","CreatedAt":"2019-08-26T13:37:09","Actor":"karann-msft","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/38","RelatedDescription":"Opened issue \"New and improved NuGet Search is live!\" (#38) at NuGet/Announcements","RelatedBody":"Announcing the new and improved search on NuGet.org leveraging Azure Search.\r\n\r\n[Blogpost](https://devblogs.microsoft.com/nuget/new-and-improved-nuget-search/) | [Feedback Issue](https://github.com/NuGet/NuGetGallery/issues/4124)"},{"Id":"10168692521","Type":"IssuesEvent","CreatedAt":"2019-08-07T21:31:54","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/37","RelatedDescription":"Opened issue \"Using OData to query NuGet.org repository is being deprecated\" (#37) at NuGet/Announcements","RelatedBody":"We introduced `V3 APIs` in early 2016. We have made continuous investments to make it more reliable, performant and secure. Going forward, we plan to bring all new features and improvements only to the newer `V3 APIs`. As part of this strategy, we are deprecating the usage of `OData` queries. Subsequently, we plan to **disable the `OData` queries starting Feb 5th, 2020**.\r\n\r\n**Call to Action: Transition to V3 APIs**\r\n\r\nHere are some resources to help you with the migration:\r\n* [NuGet Server `V3 APIs` reference](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n* [Guide to transition from NuGet `V2 API` to `V3 API`](https://docs.microsoft.com/en-us/nuget/guides/api/query-for-all-published-packages). \r\n* [Blog post: Switching from WCF OData to Web API](https://devblogs.microsoft.com/nuget/switching-from-wcf-odata-to-web-api/)\r\n\r\nIf you need further help in moving your use case to `V3 APIs`, do reach out to us at [support@nuget.org](mailto:support@nuget.org).\r\n"},{"Id":"10115721045","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:44:31","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Closed issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10115715827","Type":"IssuesEvent","CreatedAt":"2019-07-30T22:43:23","Actor":"shoter","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/36","RelatedDescription":"Opened issue \"Replace reference to codeplex issue numer 3072\" (#36) at NuGet/Announcements","RelatedBody":"This is copy of codeplex issue number 3072 as it is referenced inside code. I should do a PR shortly to address this one.\r\n\r\nThe place where it is referenced is RuntimeHelper.cs:150\r\n\r\n\r\n---\r\n\r\nWe're hitting an issue with Microsoft.Bcl package where NuGet is adding a binding redirect for a binary that is considered part of the framework, this causes the application to crash because the binding redirect refers to assembly version that is not available at runtime.\r\n\r\n@Repro:\r\n\r\n1. Create a new Console Application targeting 4.5\r\n2. Create a new Portable Library targeting .NET Framework 4.5, Silverlight 4, Windows Phone 7.5 and .NET for Windows Store apps\r\n3. Add a reference to the portable library from the Console Application\r\n4. Install the Microsoft.Bcl package (1.0.16-rc) to both projects\r\n\r\n@Expected: No binding redirect for System.Runtime in the .NET Framework 4.5 project because a ___later version___ is part of the target framework (see C:\\Program Files (x86)\\Reference Assemblies\\Microsoft\\Framework\\.NETFramework\\v4.5\\RedistList\\FrameworkList.xml)\r\n@Actual: Binding redirect\r\n\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Runtime\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-1.5.11.0\" newVersion=\"1.5.11.0\" />\r\n</dependentAssembly>\r\n\r\n\r\nYou can use the IVsFrameworkMultiTargeting to determine if a given assembly version is available as part of a given target framework.\r\nMake sure when you fix this, that you only skip the binding redirect if ___a later or same version___ is available in the framework.  \r\n2013-02-22\r\n\r\n---\r\n\r\nWe'll do this in 2.4 release.  \r\n2013-02-26\r\n\r\n---\r\n\r\nIs IVsFrameworkMultiTargeting.IsReferenceableInTargetFx the method I need to call? What should I pass to pwszAssemblySpec?  \r\n2013-06-08\r\n\r\n---\r\n\r\nIt's the full name of the assembly (mscorlib, Version=[version], PublicKeyToken=[token], Culture=[culture]). It can either contain all the information (key, version, etc), or just the simple name (\"mscorlib\")  \r\n2013-06-10\r\n\r\n---\r\n\r\nSo look like I can only check for the same version of the target framework. Can't check for a later version using this method, because I don't know what future versions will be.  \r\n2013-06-12\r\n\r\n---\r\n\r\nThat's fine. That's exactly the behavior we want. For example, System.Runtime didn't ship in 4.0, but did in 4.5. We still want a binding redirect generated for it in 4.0, but not for 4.5.  \r\n2013-06-13\r\n\r\n---\r\n\r\nI followed the exact same steps above, but there's no binding redirect added to the Console Application. It's only added to the __Portable Library project__. Is that the bug?  \r\n2013-06-13\r\n\r\n---\r\n\r\nThe binding redirects added to the Portable Library project seems to come from the Microsoft.Bcl package itself (from the content folder's app.config.transform file). this looks like a non-bug.\r\n2013-06-13\r\n\r\n  \r\nI'm chasing up the repro with Eric St. John. He walked through the code and figured out where it was broken.\r\n\r\nIt's the not the app.config.tranform, notice how the net45 content is empty, and hence no transforms. We also marked our transforms with a special marker that indicates that we added the redirects . The binding redirects we were seeing were not coming from us.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAre you seeing the binding redirects added to the Console Application or the Portable Library? I don't see binding redirect added to Console Application, only the Portable Library.  \r\n2013-06-13\r\n\r\n---\r\n\r\nYes I'm talking about the ConsoleApplication. The binding redirects in the portable library project are expected, and do not affect runtime behavior (as the app.config is ignored and not copied to the app project), and hence can't cause an application to crash.\r\n\r\nI've found another repro (NuGet has really weird logic around when it decides to add binding redirects so it was hard to find a repro).\r\n\r\nThe repro is instead of using the Microsoft.Bcl package, install the Microsoft.Net.Http, 2.2.3-beta package. Make sure you are targeting __4.5__ from the ConsoleApplication and the exact platforms that I called out above for portable.  \r\n2013-06-13\r\n\r\n---\r\n\r\nAlso, the ConsoleApplication must be referencing the portable project before installing the package.  \r\n2013-06-13\r\n\r\n---\r\n\r\nOK now I can repro  \r\n2013-06-14\r\n\r\n---\r\n\r\nOK, I've got a fix now. It no longer adds the binding redirect for System.Runtime.dll, but still adds one for System.Net.Http.Primitives. I guess it's expected, right? Please confirm.\r\n\r\n```\r\n<assemblyBinding xmlns=\"urn:schemas-microsoft-com:asm.v1\">\r\n<dependentAssembly>\r\n<assemblyIdentity name=\"System.Net.Http.Primitives\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n<bindingRedirect oldVersion=\"0.0.0.0-4.2.3.0\" newVersion=\"4.2.3.0\" />\r\n</dependentAssembly>\r\n</assemblyBinding>\r\n```  \r\n2013-06-14\r\n\r\n---\r\n\r\n\r\nYes that's correct. System.Net.Http.Primitives does not exist in the framework.  \r\n2013-06-14\r\n\r\n---\r\n\r\nFixed in changeset b8d515f6341193b970d2a9d837e580e762d2eb71  \r\n2013-06-19\r\n\r\n---\r\n\r\ni get the same issue with my test project still, runtime being added... if i comment this out the tests run fine... if not i get exceptions thrown from json.net  \r\n2013-08-09\r\n\r\n---\r\n\r\n(or i can change the version up to 4.0.0.0 or something and it works)  \r\n2013-08-09"},{"Id":"10105705706","Type":"IssuesEvent","CreatedAt":"2019-07-29T18:41:10","Actor":"anangaur","Repository":"NuGet/Announcements","Organization":"NuGet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/NuGet/Announcements/issues/35","RelatedDescription":"Opened issue \"Machine readable output for dotnet list package\" (#35) at NuGet/Announcements","RelatedBody":"The spec for 'Machine readable output for dotnet list package' is ready for **review**:\r\n\r\n|Spec wiki|Discussion issue|\r\n|----------|------------------|\r\n|[Machine readable output for dotnet list package](https://github.com/NuGet/Home/wiki/%5BSpec%5D-Machine-readable-output-for-dotnet-list-package) | https://github.com/NuGet/Home/issues/7752 |"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1164220617710686209","CreatedAt":"2019-08-21T17:00:00+00:00","UserScreenname":"nuget","Text":"âš  Restoring packages from https://t.co/KVB7werYQh might fail in some regions. We are investigating the issue. Folloâ€¦ https://t.co/t69YZ9eFo1","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":4,"FavoriteCount":2,"RawContent":null},{"Id":"1162433926578626560","CreatedAt":"2019-08-16T18:40:19+00:00","UserScreenname":"nuget","Text":"Did you check out the new docs landing page? We tried to make it better and more useful. What do you think?â€¦ https://t.co/96nBP0rV5l","Source":"<a href=\"https://about.twitter.com/products/tweetdeck\" rel=\"nofollow\">TweetDeck</a>","RetweetCount":13,"FavoriteCount":3,"RawContent":null},{"Id":"1159229316351197184","CreatedAt":"2019-08-07T22:26:21+00:00","UserScreenname":"nuget","Text":"Using OData to query https://t.co/F9kiKfdOWi repository is being deprecated\n#Announcement \n\nhttps://t.co/dtelctlNOe","Source":"<a href=\"http://twitter.com/download/iphone\" rel=\"nofollow\">Twitter for iPhone</a>","RetweetCount":9,"FavoriteCount":3,"RawContent":null}]}},"RunOn":"2019-09-06T05:30:41.9763262Z","RunDurationInMilliseconds":2556}