{"Data":{"Blog":{"FeedItems":[{"Title":"Contest: Get Started with Xamarin","PublishedOn":"2017-12-15T20:30:07+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"At Xamarin, we pride ourselves on creating and providing great educational tools for developers. Between our extensive developer center, and the interactive classes at Xamarin University,...","Href":"https://blog.xamarin.com/contest-get-started-xamarin/","RawContent":null},{"Title":"Introducing the SmartHotel360 Reference Mobile Apps","PublishedOn":"2017-12-14T20:52:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"If you managed to catch any of Microsoft Connect(); 2017, you probably saw a beautiful suite of apps for a fictitious smart hospitality company called SmartHotel360 that showcases the future of...","Href":"https://blog.xamarin.com/introducing-smarthotel360-reference-mobile-apps/","RawContent":null},{"Title":"Iterate Faster with the Xamarin Live Player and iOS Coded User Interface","PublishedOn":"2017-12-13T17:25:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Live Player is a fantastic tool to rapidly iterate and develop Xamarin applications without ever having to compile. One can easily update an application&#8217;s user interface and business...","Href":"https://blog.xamarin.com/iterate-faster-xamarin-live-player-ios-coded-user-interface/","RawContent":null},{"Title":"Updates to the Xamarin iOS Designer","PublishedOn":"2017-12-12T18:00:52+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Xamarin Designer for iOS is a visual designer that allows you to edit Storyboard and Xib files directly in Visual Studio and Visual Studio for Mac. Crafting your UI with a designer instead of...","Href":"https://blog.xamarin.com/updates-xamarin-ios-designer/","RawContent":null},{"Title":"Introduction to tvOS","PublishedOn":"2017-12-11T20:03:47+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, Apple announced the AppleTV 4K, an improved version of the AppleTV launched in 2015, which brought us a new platform to develop for in tvOS. With the touch-enabled Siri remote, we have a new...","Href":"https://blog.xamarin.com/introduction-to-tvos/","RawContent":null},{"Title":"Native Forms is Polished and Shiny in Xamarin.Forms 2.5.0","PublishedOn":"2017-12-08T20:37:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Since we previewed Native Forms in June, we’ve been working to smooth the rough edges and polish it up for Xamarin.Forms 2.5.0 by fixing bugs and integrating the excellent feedback from the community....","Href":"https://blog.xamarin.com/native-forms-polished-shiny-xamarin-forms-2-5-0/","RawContent":null},{"Title":"Even Easier iOS App Provisioning in Visual Studio for Mac ","PublishedOn":"2017-12-07T19:10:57+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"iOS provisioning is a notoriously hard concept to grasp; even the best developers can be stumped by a signing identity. As a content developer at Xamarin, I’ve created thorough documentation on the...","Href":"https://blog.xamarin.com/even-easier-ios-app-provisioning-visual-studio-mac/","RawContent":null},{"Title":"Get Your Azure Mobile Badge from Xamarin University!","PublishedOn":"2017-12-06T18:38:36+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We’re excited to introduce the Azure Mobile badge, our first non-certification badge, offered exclusively through Xamarin University! Unlock this badge by completing the Xamarin University Azure...","Href":"https://blog.xamarin.com/get-azure-mobile-badge-xamarin-university/","RawContent":null},{"Title":"￼Fidelity Mobile Unites Brazilian Citizens and Elected Officials with Real-Time Chat Apps","PublishedOn":"2017-12-05T20:11:34+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Real-time messaging apps are becoming commonplace, allowing us to communicate immediately or asynchronously with individuals and groups. Inspired by chat apps’ success with consumer businesses,...","Href":"https://blog.xamarin.com/%ef%bf%bcfidelity-mobile-unites-brazilian-citizens-elected-officials-real-time-chat-apps/","RawContent":null},{"Title":"See What’s New in Visual Studio 2017 Version 15.5","PublishedOn":"2017-12-04T19:54:44+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, we&#8217;re releasing Visual Studio 2017 version 15.5 into stable. This release includes many improvements for mobile developers, including enhancements to XAML editing, the Xamarin Live...","Href":"https://blog.xamarin.com/whats-new-visual-studio-2017-version-15-5/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"7041593608","Type":"IssuesEvent","CreatedAt":"2017-12-29T22:23:13","Actor":"Belorus","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1146","RelatedDescription":"Opened issue \"[Android <4.3] AOT + SO_MAX=128 limitation leads to crash on start.\" (#1146) at xamarin/xamarin-android","RelatedBody":"Androids pre 4.3 allowed only 128 .so libraries loaded into one process.\r\n\r\nOS + Runtime normally load about 65 libraries even before first line of code executes.\r\nOther libs like mscorlib, System.Core, System.Net.Http take other ~20.\r\n\r\nIf your solution has ~20 projects (which isn't too much if you have proper architecture), and has another 10 nuget references - app won't load.\r\n\r\n\r\n[Repro project that simply loads hundred of native libs and crashes after 56](https://github.com/xamarin/xamarin-android/files/1593964/lib.zip)\r\n\r\nThere is a cool solution that embeds all .dll files into one app_bundle.so. \r\nIf something like that was implemented for AOT mode, that would be great."},{"Id":"7041133693","Type":"IssuesEvent","CreatedAt":"2017-12-29T18:42:49","Actor":"Belorus","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1145","RelatedDescription":"Opened issue \"Android 4.0.4 crashes after app update from AOT to non-AOT version\" (#1145) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nSpecific to Android 4.0.4 (and probably older)\r\n\r\n1. Build and install AOTed app (attached Artifacts/AOT.LLVM.apk)\r\n2. Update app (for example via adb install -r) to non-AOTed app (attached Artifacts/JIT.apk)\r\n[AOT.zip](https://github.com/xamarin/xamarin-android/files/1593702/AOT.zip)\r\n\r\n### Expected Behavior\r\nApp should work\r\n### Actual Behavior\r\nCrash\r\n\r\n### Version Information\r\nMicrosoft Visual Studio Professional 2017 \r\nVersion 15.5.2\r\nVisualStudio.15.Release/15.5.2+27130.2010\r\nMicrosoft .NET Framework\r\nVersion 4.7.02046\r\n\r\nInstalled Version: Professional\r\n\r\nVisual Basic 2017   00369-60000-00001-AA157\r\nMicrosoft Visual Basic 2017\r\n\r\nVisual C# 2017   00369-60000-00001-AA157\r\nMicrosoft Visual C# 2017\r\n\r\nVisual F# 4.1   00369-60000-00001-AA157\r\nMicrosoft Visual F# 4.1\r\n\r\nApplication Insights Tools for Visual Studio Package   8.10.01106.1\r\nApplication Insights Tools for Visual Studio\r\n\r\nASP.NET and Web Tools 2017   15.0.31125.0\r\nASP.NET and Web Tools 2017\r\n\r\nASP.NET Core Razor Language Services   1.0\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nAzure App Service Tools v3.0.0   15.0.31106.0\r\nAzure App Service Tools v3.0.0\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nJavaScript Language Service   2.0\r\nJavaScript Language Service\r\n\r\nJavaScript Project System   2.0\r\nJavaScript Project System\r\n\r\nJavaScript UWP Project System   2.0\r\nJavaScript UWP Project System\r\n\r\nMerq   1.1.17-rc (cba4571)\r\nCommand Bus, Event Stream and Async Manager for Visual Studio extensions.\r\n\r\nMicrosoft Continuous Delivery Tools for Visual Studio   0.3\r\nSimplifying the configuration of continuous build integration and continuous build delivery from within the Visual Studio IDE.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nMicrosoft Visual Studio VC Package   1.0\r\nMicrosoft Visual Studio VC Package\r\n\r\nMono Debugging for Visual Studio   4.8.4-pre (3fe64e3)\r\nSupport for debugging Mono processes with Visual Studio.\r\n\r\nNuGet Package Manager   4.5.0\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.\r\n\r\nSQL Server Data Tools   15.1.61710.120\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   15.5.11025.1\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Studio Code Debug Adapter Host Package   1.0\r\nInterop layer for hosting Visual Studio Code debug adapters in Visual Studio\r\n\r\nVisual Studio Tools for Universal Windows Apps   15.0.27128.01\r\nThe Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.\r\n\r\nVisualStudio.Mac   1.0\r\nMac Extension for Visual Studio\r\n\r\nXamarin   4.8.0.753 (6575bd113)\r\nVisual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.\r\n\r\nXamarin Designer   4.8.188 (c5813fa34)\r\nVisual Studio extension to enable Xamarin Designer tools in Visual Studio.\r\n\r\nXamarin.Android SDK   8.1.0.25 (HEAD/d8c6e504f)\r\nXamarin.Android Reference Assemblies and MSBuild support.\r\n\r\nXamarin.iOS and Xamarin.Mac SDK   11.6.1.2 (6857dfc)\r\nXamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.\r\n-->\r\n\r\n### Log File\r\n[Issue.txt](https://github.com/xamarin/xamarin-android/files/1593700/Issue.txt)\r\n"},{"Id":"7040204379","Type":"IssuesEvent","CreatedAt":"2017-12-29T12:24:03","Actor":"knocte","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1144","RelatedDescription":"Opened issue \"Throwing FooException makes AppDomain throw JavaProxyThrowable instead of FooException\" (#1144) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Create new XamarinForms projects (template from VSforMac for example).\r\n2. Create class FooException : Exception.\r\n3. Hook into AppDomain.CurrentDomain.UnhandledException with a method Bar(sender, args) that receives the exception in the args.ExceptionObject property.\r\n4. Make the AppPage of the app throw this new FooException.\r\n5. Run the app in iOS: exception received is of type FooException.\r\n6. Run the app in Android. \r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n### Expected Behavior\r\nException received by the Bar() method is of type FooException (or at least contains the FooException in the InnerException chain?)\r\n\r\n### Actual Behavior\r\nException received by the Bar() method is of type JavaProxyThrowable, and its message is \"Exception of type 'Android.Runtime.JavaProxyThrowable' was thrown\". The only bit of \"FooException\" found in this exception object is in the stack trace, however this is not an acceptable way for the callers to find what exception was really thrown, especially because it would need to be platform-specific code (only Android exhibits this behaviour, other platforms don't).\r\n\r\n### Version Information\r\nVisual Studio Community 2017 for Mac\r\nVersion 7.3.2 (build 12)\r\nInstallation UUID: fd06ff65-69de-47ae-8b99-ddf257032b7c\r\nRuntime:\r\n\tMono 5.4.1.7 (2017-06/e66d9abbb27) (64-bit)\r\n\tGTK+ 2.24.23 (Raleigh theme)\r\n\r\n\tPackage version: 504010007\r\n\r\nNuGet\r\nVersion: 4.3.1.4445\r\n\r\n.NET Core\r\nRuntime: /usr/local/share/dotnet/dotnet\r\nRuntime Version: 2.0.0\r\nSDK: /usr/local/share/dotnet/sdk/2.0.0/Sdks\r\nSDK Version: 2.0.0\r\nMSBuild SDKs: /Library/Frameworks/Mono.framework/Versions/5.4.1/lib/mono/msbuild/15.0/bin/Sdks\r\n\r\nXamarin.Profiler\r\nVersion: 1.6.0\r\nLocation: /Applications/Xamarin Profiler.app/Contents/MacOS/Xamarin Profiler\r\n\r\nXamarin.Android\r\nVersion: 8.1.0.25 (Visual Studio Community)\r\nAndroid SDK: /Users/andres/Library/Developer/Xamarin/android-sdk-macosx\r\n\tSupported Android versions:\r\n\t\t7.1 (API level 25)\r\n\r\nSDK Tools Version: 26.1.1\r\nSDK Platform Tools Version: 26.0.2\r\nSDK Build Tools Version: 26.0.3\r\n\r\nJava SDK: /usr\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n\r\nAndroid Designer EPL code available here:\r\nhttps://github.com/xamarin/AndroidDesigner.EPL\r\n\r\nApple Developer Tools\r\nXcode 9.2 (13772)\r\nBuild 9C40b\r\n\r\n### Log File\r\n\r\n(I don't believe there's need for a log file)"},{"Id":"7034589746","Type":"IssuesEvent","CreatedAt":"2017-12-27T17:42:32","Actor":"peteschmitz","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1143","RelatedDescription":"Opened issue \"FormsAppCompatActivity.OnDestroy occasionally throws \"No view found for id\" exception for Android N devices\" (#1143) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\nI could not reproduce this from our development environment. We've received infrequent and non-critical reports from our bug reporting.\r\n\r\n### Expected Behavior\r\n- App gracefully closes\r\n\r\n### Actual Behavior\r\n- App crashes with the below exception\r\n\r\n### Version Information\r\nAffected Form versions:\r\n2.4.0.38779\r\n2.5.0.91635\r\n\r\nAffected Device Platforms:\r\nAndroid N (7.x)\r\n\r\nAffected Devices:\r\nGalaxy S7, S7 Edge, S8, S8+\r\nGalaxy Note 5\r\nLG Aristo, G6, Stylo 3\r\n\r\n### Related\r\n- https://forums.xamarin.com/discussion/104160/issue-with-forms-2-4-0-280-on-an-android-no-view-found-for-id-0x1-unknown-for-fragment (our app only initializes during FormsAppCompatActivity.OnCreate)\r\n\r\n\r\n### Stacktrace \r\nJava.Interop.JniEnvironment No view found for id 0x1 (unknown) for fragment FragmentContainer{460ecc1 #1 id=0x1}\r\nRaw\r\nSystem.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()<b5f2483a551b45a99f04c68f14fc2c14>:0\r\nJava.Interop.JniEnvironment.InstanceMethods.CallNonvirtualVoidMethod(JniObjectReference instance, JniObjectReference type, JniMethodInfo method, JniArgumentValue* args)<eba4edc4e27949518f7bf237cb1196cc>:0\r\nJava.Interop.JniPeerMembers.JniInstanceMethods.InvokeVirtualVoidMethod(string encodedMember, IJavaPeerable self, JniArgumentValue* parameters)<eba4edc4e27949518f7bf237cb1196cc>:0\r\nAndroid.App.Activity.OnDestroy()<bec3773976364d6f966ebdab5e7a8df3>:0\r\nXamarin.Forms.Platform.Android.FormsAppCompatActivity.OnDestroy()<8d6936257ac5419f8be9df07a9bb5129>:0\r\niSurvey.Android.MainActivity.OnDestroy()<8d9b18b497204292ba1e24a705032810>:0\r\nAndroid.App.Activity.n_OnDestroy(IntPtr jnienv, IntPtr native__this)<bec3773976364d6f966ebdab5e7a8df3>:0\r\nat (wrapper dynamic-method) System.Object:ee7a2513-7ba6-47d4-b295-16c9cfe08d94 (intptr,intptr)\r\n--- End of managed Java.Lang.IllegalArgumentException stack trace ---\r\njava.lang.IllegalArgumentException: No view found for id 0x1 (unknown) for fragment FragmentContainer{460ecc1 #1 id=0x1}\r\nat android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1334)\r\nat android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1569)\r\nat android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1636)\r\nat android.support.v4.app.BackStackRecord.executeOps(BackStackRecord.java:758)\r\nat android.support.v4.app.FragmentManagerImpl.executeOps(FragmentManager.java:2415)\r\nat android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2201)\r\nat android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(FragmentManager.java:2155)\r\nat android.support.v4.app.FragmentManagerImpl.execPendingActions(FragmentManager.java:2064)\r\nat android.support.v4.app.FragmentManagerImpl.dispatchDestroy(FragmentManager.java:3026)\r\nat android.support.v4.app.FragmentController.dispatchDestroy(FragmentController.java:262)\r\nat android.support.v4.app.FragmentActivity.onDestroy(FragmentActivity.java:390)\r\nat android.support.v7.app.AppCompatActivity.onDestroy(AppCompatActivity.java:209)\r\niSurvey.Android.MainActivity.n_onDestroy(Native Method)\r\nat iSurvey.Android.MainActivity.onDestroy(MainActivity.java:114)\r\nat android.app.Activity.performDestroy(Activity.java:6959)\r\nat android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1154)\r\nat android.app.ActivityThread.performDestroyActivity(ActivityThread.java:4289)\r\nat android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:4320)\r\nat android.app.ActivityThread.-wrap6(ActivityThread.java)\r\nat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1589)\r\nat android.os.Handler.dispatchMessage(Handler.java:102)\r\nat android.os.Looper.loop(Looper.java:154)\r\nat android.app.ActivityThread.main(ActivityThread.java:6310)\r\njava.lang.reflect.Method.invoke(Native Method)\r\nat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:872)\r\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:762)\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"7025150122","Type":"PullRequestEvent","CreatedAt":"2017-12-23T05:26:47","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1142","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] fix classes-zip inception\" (#1142) at xamarin/xamarin-android","RelatedBody":"Fixes: https://bugzilla.xamarin.com/show_bug.cgi?id=61073\r\nContext: a296784\r\n\r\nWhen we added the new `classes.zip` functionality, there was one oddity\r\npresent. On the first build, everything appears to be normal. On the\r\nsecond build, `classes.zip` appeared to contain itself inside itself???\r\n\r\nTo make things even stranger, I wrote a unit test that contains a\r\n`Java.Lang.Object` subclass in which its type and namespace names change\r\non each write. This worked fine on macOS, even with the oddity of\r\n`classes.zip` continually zipping itself inside itself... The new java\r\nsources would appear at the bottom of the list within the zip file.\r\n\r\nEverything broke down when I tried my unit test on Windows, the case of\r\n`classes.zip` trying to compress itself inside itself was silently\r\nfailing. It was not processing any further files after the failing zip\r\nentry, and so *in theory* this situation would cause many Java stubs to\r\nbe missing from the zip.\r\n\r\nSolution? Let's just put `classes.zip` up one directory.\r\n\r\nSo instead of:\r\n```\r\nobj/Debug/android/bin/classes/classes.zip\r\n```\r\nMove it to:\r\n```\r\nobj/Debug/android/bin/classes.zip\r\n```\r\n\r\nThis prevents the `classes` directory from containing `classes.zip`, and\r\nour strange case of `classes.zip` inception.\r\n\r\nMerry Christmas! I'm going to go play Skylanders now."},{"Id":"7024569616","Type":"PullRequestEvent","CreatedAt":"2017-12-22T21:51:16","Actor":"directhex","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1141","RelatedDescription":"Opened pull request \"Fix MonoAndroid path resolution on Linux\" (#1141) at xamarin/xamarin-android","RelatedBody":"Currently, we indiscriminately set TargetFrameworkRootPath in a way that breaks on Linux, so make that setting Windows-specific and add a more generic one for Linux. As for OSX, it's not clear to me why OSX was never affected by the issue."},{"Id":"7024231749","Type":"IssuesEvent","CreatedAt":"2017-12-22T19:37:31","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1140","RelatedDescription":"Closed issue \"Cannot change TimePicker format\" (#1140) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1. Turn the \"Use 24-hour format\" device setting off on your test device\r\n2. Create a TimePicker\r\n3. Change the format sometime later on (e.g. when the user clicks a button)\r\n\r\n### Expected Behavior\r\nTimePicker displays time in new format\r\n\r\n### Actual Behavior\r\nTimePicker still displays time in original format\r\n\r\n### Version Information\r\nXamarin.Forms 2.5.0.91635\r\n\r\n### Proposed Fix\r\nI can see the problem in Xamarin.Forms.Platform.Android.TimePickerRenderer. The format is cached in OnElementChanged then never gets updated. Presumably, the format just needs to be refreshed in OnElementPropertyChanged if FormatProperty has changed."},{"Id":"7023896102","Type":"IssuesEvent","CreatedAt":"2017-12-22T17:46:41","Actor":"mattavadine","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/1140","RelatedDescription":"Opened issue \"Cannot change TimePicker format\" (#1140) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n1. Create a TimePicker\r\n2. Change the format sometime later on (e.g. when the user clicks a button)\r\n\r\n### Expected Behavior\r\nTimePicker displays time with new format\r\n\r\n### Actual Behavior\r\nTimePicker still displays time with original format\r\n\r\n### Version Information\r\nXamarin.Forms 2.5.0.91635\r\n\r\n### Proposed Fix\r\nI can see the problem in Xamarin.Forms.Platform.Android.TimePickerRenderer. The format is cached in OnElementChanged then never gets updated. Presumably, the format just needs to be refreshed in OnElementPropertyChanged when if FormatProperty has changed."},{"Id":"7023664688","Type":"PullRequestEvent","CreatedAt":"2017-12-22T16:34:07","Actor":"jonathanpeppers","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1139","RelatedDescription":"Opened pull request \"[Xamarin.Android.Build.Tasks] <Aapt /> task showing warnings as errors\" (#1139) at xamarin/xamarin-android","RelatedBody":"Fixes: #1134\r\nContext: 2135856e\r\n\r\nDean’s changes in 2135856e were more accurate at picking out warnings\r\n& errors, but if the `level` value from the `Regex` was blank, it was\r\ncounting the message as an error. The `level` value is matching against\r\nthe words `warning` or `error`, ignoring case.\r\n\r\nI think the fix here is to count the message as a warning if the\r\n`level` is blank.\r\n\r\nI added a Regex test case of what was on #1134. I added another test case\r\nthat verifies a message with a blank `level` comes through the build output\r\nas a `warning`."},{"Id":"7023229946","Type":"PullRequestEvent","CreatedAt":"2017-12-22T14:34:11","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-android/pull/1137","RelatedDescription":"Merged pull request \"[Xamarin.Android.Build.Tasks] ProGuard/MultiDex fix parentheses in path\" (#1137) at xamarin/xamarin-android","RelatedBody":"Fixes: #1135\r\nContext: #1068\r\n\r\nWhen making changes in #1068, I added a unit test that builds an\r\napplication with both spaces and parentheses in its path. However, this\r\nwas not enough to test everything; the test also needed an\r\n`AndroidJavaLibrary` build item with spaces and parentheses in its name!\r\n\r\nChanges:\r\n- Made a `Hello (World).jar` file, that has a single class in it\r\n- Added the jar file as a `AndroidJavaLibrary`, in\r\nthe `BuildApplicationWithSpacesInPath` test\r\n- Reverted `Proguard.cs` and `CreateMultiDexMainDexClassList.cs` from\r\nwhat I did in #1068 -- Dean tried to warn me\r\n- Move the `(!META-INF/MANIFEST.MF)` filter expression outside the\r\nsingle quotes\r\n- For the `-injars` expression to work on *both* macOS and Windows,\r\nI had to enclose the entire expression in double-quotes\r\n\r\nPR #1068 was a good attempt at trying to cleanup the code, but I could\r\nnot get the manifest filter to work along with a path including a\r\nparentheses."}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"7043257955","Type":"IssuesEvent","CreatedAt":"2017-12-31T02:12:53","Actor":"jvlppm","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1480","RelatedDescription":"Opened issue \"_WebTryThreadLock error on WebView with TranslateTo\" (#1480) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nI am receiving a thread error on iOS when animating a WebView (with `TranslateTo`) inside a modal Page.\r\n\r\n### Steps to Reproduce\r\n\r\n1.  Open a page with `Navigation.PushModalAsync`\r\n2. Inside this new Page, use `TranslateTo` on a WebView.\r\n\r\n### Expected Behavior\r\n\r\nWebView animates translation.\r\n\r\n### Actual Behavior\r\n\r\nApp crashes, with the following error:\r\n\r\n> bool _WebTryThreadLock(bool), 0x60400021ae80: Tried to obtain the web lock from a thread other than the main thread or the web thread. This may be a result of calling to UIKit from a secondary thread. Crashing now...\r\n\r\nNo stack trace is provided.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 2.5.0.12.19.34\r\n- IDE: Visual Studio Community 7.3.2\r\n- iOS: 11.6.1.2\r\n\r\n### Reproduction Link\r\n\r\n[ModalWebView.zip](https://github.com/xamarin/Xamarin.Forms/files/1594933/ModalWebView.zip)\r\n"},{"Id":"7042737226","Type":"IssuesEvent","CreatedAt":"2017-12-30T17:27:32","Actor":"Nukepayload2","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1479","RelatedDescription":"Opened issue \"Proposal: SetFieldVisitor.Visit should find a Property to set if the field is missing\" (#1479) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nI want to develop Xamarin.Forms cross-platform apps with Visual Basic instead of C#, and I have implemented [a T4 template version of XamlG](https://github.com/Nukepayload2/XamarinFormsXamlVB) for VB, which will enable runtime Xaml support for VB. But XamlC can't generate `WithEvents` member initialization when `XamlCompilation` is `XamlCompilationOptions.Compile`, because named Xaml elements are fields in C#, but they are virtual properties\r\n(`WithEvents` members) in Visual Basic. \r\n\r\n## API Changes\r\n\r\nNo API Changes.  All changes are inside of `public void Visit(ValueNode node, INode parentNode)`.\r\n\r\nReplace\r\n```C#\r\nif (field == null)\r\n\treturn;\r\nContext.IL.Emit(OpCodes.Ldarg_0);\r\nContext.IL.Emit(OpCodes.Ldloc, Context.Variables[(IElementNode)parentNode]);\r\nContext.IL.Emit(OpCodes.Stfld, field);\r\n```\r\nWith the following code:\r\n\r\n```C#\r\nif (field == null)\r\n{\r\n\tvar withEventsProperty = Context.Body.Method.DeclaringType.Properties.SingleOrDefault(fd => fd.Name == (string)node.Value);\r\n\tif (withEventsProperty != null)\r\n\t{\r\n\t\tContext.IL.Emit(OpCodes.Ldarg_0);\r\n\t\tContext.IL.Emit(OpCodes.Ldloc, Context.Variables[(IElementNode)parentNode]);\r\n\t\tContext.IL.Emit(OpCodes.Callvirt, withEventsProperty.SetMethod);\r\n\t}\r\n}\r\nelse\r\n{\r\n\tContext.IL.Emit(OpCodes.Ldarg_0);\r\n\tContext.IL.Emit(OpCodes.Ldloc, Context.Variables[(IElementNode)parentNode]);\r\n\tContext.IL.Emit(OpCodes.Stfld, field);\r\n}\r\n```\r\n\r\n## Intended Use Case\r\nThis small change will make XamlC compatible with VB.Net . VB users will enjoy both the performance improvement of pre-compiled Xaml and the convenience of `WithEvents` members.\r\n"},{"Id":"7042719701","Type":"IssuesEvent","CreatedAt":"2017-12-30T17:12:19","Actor":"pauldipietro","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1478","RelatedDescription":"Closed issue \"Deleting bin/obj folder hang my visual studio\" (#1478) at xamarin/Xamarin.Forms","RelatedBody":"I have latest vs 2017  and when I delete bin/obj folder from visual studio the software hangs for 5-6 seconds on intel 7200u.\r\n\r\nAnyone have any solution for this. When I do it from disk it's done very fast.  Is deleting bin/obj folder ok.\r\n\r\nThanks"},{"Id":"7042154392","Type":"IssuesEvent","CreatedAt":"2017-12-30T07:39:04","Actor":"anirugu","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1478","RelatedDescription":"Opened issue \"Deleting bin/obj folder hang my visual studio\" (#1478) at xamarin/Xamarin.Forms","RelatedBody":"I have latest vs 2017  and when I delete bin/obj folder from visual studio the software hangs for 5-6 seconds on intel 7200u.\r\n\r\nAnyone have any solution for this. When I do it from disk it's done very fast.  Is deleting bin/obj folder ok.\r\n\r\nThanks"},{"Id":"7042086040","Type":"IssuesEvent","CreatedAt":"2017-12-30T06:19:20","Actor":"seankanderson","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1477","RelatedDescription":"Opened issue \"Listview with a single item loses binding, does not respond to tapped event\" (#1477) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\nHappening under UWP/Android (iOS not tested)\r\n\r\nIn a navigation page I have a listview (data template) bound to an ObservableCollection in a view model.  When there is a single item in the list I can click/tap that item and the viewmodel bound command fires.  When I navigate back to that page with the listview the tap/click no longer fires the command.  \r\nIf I add more items to the list it works as expected.  \r\n\r\n\r\n### Steps to Reproduce\r\nClone and debug in Visual Studio 2017\r\nhttps://github.com/seankanderson/Temp-Xamarin-Bug-Report.git\r\n\r\nApplication uses Sqlite by default.  Suggest running UWP version.  \r\n\r\n1.  Run application\r\n2.  Create test company when prompted\r\n3.  Go to Inventory on hamburger menu\r\n4. Tap New and create a new inventory item using only Short Description and Quantity\r\n5. Navigate back to inventory list\r\n6. Tap/Click newly added item\r\n7. Navigate back to inventory list\r\n8. Tap item again...fails\r\n9. Add another New inventory item, navigate back\r\n10.  At this point everything should work as expected\r\n\r\n- Version with issue: 2.5.0.121934\r\n- Last known good version: \r\n- IDE: Visual Studio 2017 Pro\r\n- Platform Target Frameworks: \r\n  - iOS:  not tested\r\n  - Android: 8.0 \r\n  - UWP:  16299 \r\n- Nuget Packages: Unity 5.5.0, Sqlite, EF Core 2.0...the list goes on\r\n- Affected Devices: Actual Samsung S8 used for testing\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/seankanderson/Temp-Xamarin-Bug-Report.git\r\n"},{"Id":"7040413796","Type":"IssuesEvent","CreatedAt":"2017-12-29T13:50:33","Actor":"cklenk","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/1468","RelatedDescription":"Closed issue \"TestFlight Only Crash DYLD Library not loaded\" (#1468) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nI have seen many other posts about this issue. I have tried all of the solutions I believe that I have seen in other posts. I am running Xamarin.Forms 2.3.4.247 and am using HockeyApp 5.1.1 for crash reporting.  The application launches just fine when I'm in debug mode and deploy it to a device or simulator. \r\n\r\nHere is a link to my log: [Error](https://gist.github.com/cklenk/04074610ba5c6b024731a1b3f5f6ac41)\r\n### Steps to Reproduce\r\n\r\n1. Clean and build solution in AppStore\r\n2. Upload .ipa to TestFlight through Application Loader\r\n3. Download app through TestFlight\r\n\r\n### Expected Behavior\r\nNo crash like when deploy through debug config\r\n### Actual Behavior\r\nApp crashes on splash screen\r\n### Basic Information\r\n\r\n- Version with issue: 2.3.4.247\r\n- Last known good version: 2.3.4.247\r\n- IDE: Visual Studio Professional 2017 15.5.2\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS: 11.2.1\r\n- Nuget Packages:\r\nCarouselView.FormsPlugin            {4.4.3}                                 \r\nHockeySDK.Xamarin                   {5.1.1}                                  \r\nMicrosoft.AspNet.WebApi.Client      {5.2.3}                                  \r\nMicrosoft.Bcl                       {1.1.10}                                 \r\nMicrosoft.Bcl.Build                 {1.0.21}                                                                                                                       \r\nMicrosoft.Net.Http                  {2.2.29}                                 \r\nMicrosoft.VisualStudio.SlowCheetah  {3.0.61}                                                                                                                       \r\nmodernhttpclient                    {2.4.2}                                  \r\nNewtonsoft.Json                     {10.0.3}                                 \r\nPCLCrypto                           {2.0.147}                                \r\nPlugin.InAppBilling                 {1.2.3.107}                              \r\nValidation                          {2.4.18}                                                                                                                       \r\nXam.FormsPlugin.Iconize             {1.0.10}                                                                                                                       \r\nXam.Plugin.Connectivity             {3.0.3}                                                                                                                        \r\nXam.Plugin.DeviceInfo               {3.1.0.55-beta}                          \r\nXam.Plugin.Iconize                  {1.0.10}                                 \r\nXamarin.Auth                        {1.5.0.3}                                                                                                                      \r\nXamarin.Forms                       {2.3.4.247}                              \r\n- Affected Devices: iPhone 6\r\n"},{"Id":"7038864469","Type":"PullRequestEvent","CreatedAt":"2017-12-29T00:19:51","Actor":"hartez","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/pull/661","RelatedDescription":null,"RelatedBody":"### Description of Change ###\r\n\r\nAs of now, when the navigation stack is being navigated back, Fragments are being removed which does not allow for custom transition animations. This change attempts to hide them first and remove them when the transition is done.\r\n\r\n### Bugs Fixed ###\r\n\r\n- https://bugzilla.xamarin.com/show_bug.cgi?id=50787\r\n\r\n### API Changes ###\r\n\r\nAdded:\r\n - `protected virtual int TransitionDuration { get; set; } = 220;`\r\n This seems to be the time interval before the transition timer triggers. By default, it's set to 220ms but the custom animations I provided use 500ms.\r\n\r\n### PR Checklist ###\r\n\r\n- [x] Has tests (if omitted, state reason in description)\r\n- [x] Rebased on top of master at time of PR\r\n- [x] Changes adhere to coding standard\r\n- [x] Consolidate commits as makes sense\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"7041235946","Type":"PullRequestEvent","CreatedAt":"2017-12-29T19:28:45","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3143","RelatedDescription":"Opened pull request \"[tests][xtro] Annotation update\" (#3143) at xamarin/xamarin-macios","RelatedBody":null},{"Id":"7038548451","Type":"PullRequestEvent","CreatedAt":"2017-12-28T21:37:14","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3142","RelatedDescription":"Merged pull request \"[src] Properly annotate designated initializers in many frameworks\" (#3142) at xamarin/xamarin-macios","RelatedBody":"Correspond to xtro `!missing-designated-initializer!` errors"},{"Id":"7038038838","Type":"PullRequestEvent","CreatedAt":"2017-12-28T18:14:24","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/3132","RelatedDescription":"Merged pull request \"[social] Enable SLComposeServiceViewController on macOS and fix other xtro reported issues\" (#3132) at xamarin/xamarin-macios","RelatedBody":"* SLComposeServiceViewController has [Mac] specific stuff but was\nexcluded under a (too large) `#if !MONOMAC`\n\n* SLComposeSheetConfigurationItem::init is a designated initializer\n\n* SLRequest::addMultipartData:withName:type: is macOS-only and missing\n\nxtro results:\n!missing-designated-initializer! SLComposeSheetConfigurationItem::init is missing an [DesignatedInitializer] attribute\n!missing-selector! SLComposeServiceViewController::charactersRemaining not bound\n!missing-selector! SLComposeServiceViewController::contentText not bound\n!missing-selector! SLComposeServiceViewController::placeholder not bound\n!missing-selector! SLComposeServiceViewController::setCharactersRemaining: not bound\n!missing-selector! SLComposeServiceViewController::setPlaceholder: not bound\n!missing-selector! SLComposeServiceViewController::textView not bound\n!missing-selector! SLRequest::addMultipartData:withName:type: not bound\n!missing-type! SLComposeServiceViewController not bound"}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"947216981937319938","CreatedAt":"2017-12-30T21:25:01+00:00","UserScreenname":"xamarinhq","Text":"The countdown is winding down! Post No. 2 in the #12DaysofXamarin walks you through implementing push notifications… https://t.co/uiyyYhL6zW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":32,"FavoriteCount":13,"RawContent":null},{"Id":"946830183532724235","CreatedAt":"2017-12-29T19:48:01+00:00","UserScreenname":"xamarinhq","Text":"Just getting started with #XamarinForms? Let PM @davidortinau show you how to beat the learning curve in post No. 3… https://t.co/0y63QrYo5f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":54,"FavoriteCount":17,"RawContent":null},{"Id":"946788653736583169","CreatedAt":"2017-12-29T17:03:00+00:00","UserScreenname":"xamarinhq","Text":"Curated resources on getting up and started quickly with #XamarinForms from Program Manager @davidortinau: https://t.co/amiCZn15ns","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":44,"FavoriteCount":13,"RawContent":null},{"Id":"946472572895588353","CreatedAt":"2017-12-28T20:07:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with C# 7 with @jamesmontemagno in the 4th post in our #12DaysofXamarin countdown: https://t.co/nWuAmDsr0R","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":64,"FavoriteCount":29,"RawContent":null},{"Id":"946430293401067521","CreatedAt":"2017-12-28T17:19:00+00:00","UserScreenname":"xamarinhq","Text":"Get started with the JobScheduler API to enhance the experience your user has with your applications and update to… https://t.co/VlbopDlbd6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":39,"FavoriteCount":20,"RawContent":null},{"Id":"946110438961541121","CreatedAt":"2017-12-27T20:08:01+00:00","UserScreenname":"xamarinhq","Text":"Our eBook on building \"Enterprise Application Patterns using #XamarinForms\" takes the 5th spot in our… https://t.co/HPidr9WU7g","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":113,"FavoriteCount":52,"RawContent":null},{"Id":"946049788914683905","CreatedAt":"2017-12-27T16:07:01+00:00","UserScreenname":"xamarinhq","Text":"Update your iOS apps to reflect plugin and permission changes in iOS 11: https://t.co/9DXby5Nxsn https://t.co/YpY9vtHgsp","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":36,"FavoriteCount":16,"RawContent":null},{"Id":"945745033117995009","CreatedAt":"2017-12-26T19:56:01+00:00","UserScreenname":"xamarinhq","Text":"\"5 Ways to Boost #XamarinForms App Startup Time\" from David Ortinau marks the halfway point at No. 6 the… https://t.co/ch9JL4J1fe","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":78,"FavoriteCount":36,"RawContent":null},{"Id":"944704928630693888","CreatedAt":"2017-12-23T23:03:01+00:00","UserScreenname":"xamarinhq","Text":"Today in the #12DaysofXamarin, learn how to make your UIs adaptive with #XamarinForms with the 7th most popular… https://t.co/0g7tgzIrEZ","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":116,"FavoriteCount":55,"RawContent":null},{"Id":"944297266629705728","CreatedAt":"2017-12-22T20:03:07+00:00","UserScreenname":"xamarinhq","Text":"Get started with async/await in the 8th post of the #12DaysofXamarin: https://t.co/MgpLPtLd2z https://t.co/Yt2iACcgfI","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":43,"FavoriteCount":13,"RawContent":null},{"Id":"944251690777284608","CreatedAt":"2017-12-22T17:02:01+00:00","UserScreenname":"xamarinhq","Text":"Don't miss your chance to win a three-month @XamarinU subscription just for checking out our new Getting Started Gu… https://t.co/QhYiE3ZQJU","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":14,"FavoriteCount":4,"RawContent":null},{"Id":"943931836278935554","CreatedAt":"2017-12-21T19:51:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to add face tracking and live recognition to your Android apps with this tutorial from @nishanil, coming… https://t.co/hAo63TPY8D","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":51,"FavoriteCount":24,"RawContent":null},{"Id":"943888044314255360","CreatedAt":"2017-12-21T16:57:01+00:00","UserScreenname":"xamarinhq","Text":"Adding sound to a #XamarinForms app using the SimpleAudioPlayer plugin: https://t.co/r8NSFRpl33 https://t.co/hAQHh5mO3t","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":24,"RawContent":null},{"Id":"943570956777414656","CreatedAt":"2017-12-20T19:57:01+00:00","UserScreenname":"xamarinhq","Text":"The #12DaysofXamarin continues, with @pierceboggan explaining how to build #XamarinForms apps with #dotNET Standard… https://t.co/ITkVs5QaQ6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":26,"RawContent":null},{"Id":"943522130012057600","CreatedAt":"2017-12-20T16:43:00+00:00","UserScreenname":"xamarinhq","Text":"Adaptive UI with #XamarinForms: https://t.co/XZYix2Cv0j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":78,"FavoriteCount":37,"RawContent":null},{"Id":"943210078836023297","CreatedAt":"2017-12-19T20:03:01+00:00","UserScreenname":"xamarinhq","Text":"Learn how to \"Build Android Apps with Entity Framework\" in post 11 of our #12DaysofXamarin countdown:… https://t.co/RWQ4wzrunW","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":66,"FavoriteCount":28,"RawContent":null},{"Id":"943165786780258304","CreatedAt":"2017-12-19T17:07:01+00:00","UserScreenname":"xamarinhq","Text":"#dotNET Standard comes to the #XamarinForms project templates: https://t.co/ZSlHPxw0IV https://t.co/N9tLs5p3hh","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":122,"FavoriteCount":58,"RawContent":null},{"Id":"942806196209307649","CreatedAt":"2017-12-18T17:18:08+00:00","UserScreenname":"xamarinhq","Text":"The #12DaysofXamarin is back for the 4th year in a row, counting down the top blog posts of 2017! Will your favorit… https://t.co/pwK3cBUg2s","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":22,"RawContent":null},{"Id":"942789304971091968","CreatedAt":"2017-12-18T16:11:01+00:00","UserScreenname":"xamarinhq","Text":"Get started with Android Oreo Notification Channels: https://t.co/1XmtfYAaLv https://t.co/pXSan0xaif","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":52,"FavoriteCount":20,"RawContent":null},{"Id":"942545953113935872","CreatedAt":"2017-12-18T00:04:01+00:00","UserScreenname":"xamarinhq","Text":"Update your #Xamarin iOS apps for the iPhone X: https://t.co/Yi49G6ijnP https://t.co/GSLirxwKNb","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Prod1</a>","RetweetCount":53,"FavoriteCount":32,"RawContent":null}]}},"RunOn":"2017-12-31T05:30:39.5727779Z","RunDurationInMilliseconds":3726}