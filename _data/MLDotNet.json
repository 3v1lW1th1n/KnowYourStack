{"Data":{"GitHub":{"Issues":[{"Id":"360411152","IsPullRequest":true,"CreatedAt":"2018-09-19T02:39:25","Actor":"Ivanidzo4ka","Number":"917","RawContent":null,"Title":"NAReplace estimator","State":"closed","Body":"Converts NAReplace to estimator\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/917","RelatedDescription":"Closed or merged PR \"NAReplace estimator\" (#917)"},{"Id":"361541130","IsPullRequest":true,"CreatedAt":"2018-09-19T01:20:37","Actor":"jwood803","Number":"943","RawContent":null,"Title":"WIP: Update private and constant variable names","State":"open","Body":"Fix for issue #829 \r\n\r\n@briancylui @safern These are the changes I've found so far. Marked as WIP since I'd like to go through once more to make sure I didn't miss anything.","Url":"https://github.com/dotnet/machinelearning/pull/943","RelatedDescription":"Open PR \"WIP: Update private and constant variable names\" (#943)"},{"Id":"360679901","IsPullRequest":true,"CreatedAt":"2018-09-19T00:40:47","Actor":"zeahmed","Number":"928","RawContent":null,"Title":"Converted WordEmbeddingsTransform into Estimator.","State":"closed","Body":"This PR fixes #927 ","Url":"https://github.com/dotnet/machinelearning/pull/928","RelatedDescription":"Closed or merged PR \"Converted WordEmbeddingsTransform into Estimator.\" (#928)"},{"Id":"360593094","IsPullRequest":false,"CreatedAt":"2018-09-19T00:40:47","Actor":"zeahmed","Number":"927","RawContent":null,"Title":"Convert WordEmbeddingsTransform into Estimator.","State":"closed","Body":"This is the workitem related to #754.","Url":"https://github.com/dotnet/machinelearning/issues/927","RelatedDescription":"Closed issue \"Convert WordEmbeddingsTransform into Estimator.\" (#927)"},{"Id":"361022603","IsPullRequest":true,"CreatedAt":"2018-09-19T00:07:31","Actor":"Zruty0","Number":"931","RawContent":null,"Title":"Transform wrappers and a reference implementation for tokenizers","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/931","RelatedDescription":"Closed or merged PR \"Transform wrappers and a reference implementation for tokenizers\" (#931)"},{"Id":"361527281","IsPullRequest":true,"CreatedAt":"2018-09-19T00:00:47","Actor":"jignparm","Number":"942","RawContent":null,"Title":"[WIP] Add OnnxTransform for scoring Onnx 1.2 models - integrates Microsoft.ML.Scoring/Sonoma Library","State":"open","Body":"Fixes issue #695 \r\nFixes issue #892\r\n\r\nThis adds a new transform  for scoring Onnx v1.2 models, leveraging an updated version of the scoring library at the link below.\r\n\r\nhttps://www.nuget.org/packages/Microsoft.ML.Scoring/\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/942","RelatedDescription":"Open PR \"[WIP] Add OnnxTransform for scoring Onnx 1.2 models - integrates Microsoft.ML.Scoring/Sonoma Library\" (#942)"},{"Id":"361525181","IsPullRequest":true,"CreatedAt":"2018-09-18T23:49:08","Actor":"shmoradims","Number":"941","RawContent":null,"Title":"[WIP] Added Onnx Transform","State":"open","Body":"WIP PR for implementing issue #695.","Url":"https://github.com/dotnet/machinelearning/pull/941","RelatedDescription":"Open PR \"[WIP] Added Onnx Transform\" (#941)"},{"Id":"361517769","IsPullRequest":true,"CreatedAt":"2018-09-18T23:11:27","Actor":"Zruty0","Number":"940","RawContent":null,"Title":"Added the GetColumn functionality to dynamic API","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/940","RelatedDescription":"Open PR \"Added the GetColumn functionality to dynamic API\" (#940)"},{"Id":"361516003","IsPullRequest":true,"CreatedAt":"2018-09-18T23:03:46","Actor":"Anipik","Number":"939","RawContent":null,"Title":"Enabled Multiclass Logistic Regression Tests","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/939","RelatedDescription":"Open PR \"Enabled Multiclass Logistic Regression Tests\" (#939)"},{"Id":"361515350","IsPullRequest":false,"CreatedAt":"2018-09-18T23:00:55","Actor":"artidoro","Number":"938","RawContent":null,"Title":"Find a new regression dataset","State":"open","Body":"Some regression tests rely on a machine generated regression dataset (Gaussian noise on top of a linear function of a vector input). The file was introduced by #937.\r\n\r\nWe should replace this dataset with a real dataset. Justin @justinormont suggested to find something from [data.gov](https://catalog.data.gov/dataset), for example predicting the SF employee pay: https://catalog.data.gov/dataset/employee-compensation-53987\r\n","Url":"https://github.com/dotnet/machinelearning/issues/938","RelatedDescription":"Open issue \"Find a new regression dataset\" (#938)"},{"Id":"361505359","IsPullRequest":true,"CreatedAt":"2018-09-18T22:44:29","Actor":"artidoro","Number":"937","RawContent":null,"Title":"Substituted Wine Quality dataset with machine generated dataset","State":"closed","Body":"Fixes #936.\r\nFixes #889.\r\n\r\nI substituted the UCI Wine Quality dataset with a machine generated regression dataset (linear function of a vector input with added Gaussian noise). I had to update the test outputs for all affected tests.\r\n\r\nNote that this is a temporary change, and that we are looking into finding a real dataset to substitute this machine generated one.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/937","RelatedDescription":"Closed or merged PR \"Substituted Wine Quality dataset with machine generated dataset\" (#937)"},{"Id":"361500432","IsPullRequest":false,"CreatedAt":"2018-09-18T22:44:29","Actor":"artidoro","Number":"936","RawContent":null,"Title":"Substituting UCI Wine Quality dataset with machine generated dataset","State":"closed","Body":"There are two problems with the UCI Wine Quality dataset:\r\n\r\n- it is not reachable (which breaks the build)\r\n- it is intended to be used for research purposes only\r\n\r\nIt should be substituted with another regression dataset.","Url":"https://github.com/dotnet/machinelearning/issues/936","RelatedDescription":"Closed issue \"Substituting UCI Wine Quality dataset with machine generated dataset\" (#936)"},{"Id":"361389167","IsPullRequest":false,"CreatedAt":"2018-09-18T16:37:04","Actor":"Zruty0","Number":"935","RawContent":null,"Title":"Fix separators for word tokenizer","State":"open","Body":"Currently, the separators property for `WordTokenizer` is a string, that is parsed as a comma-separated list of characters. It was appropriate for command-line parsing, but not appropriate for API use.\r\n\r\nA better solution is to have a `char[]`.","Url":"https://github.com/dotnet/machinelearning/issues/935","RelatedDescription":"Open issue \"Fix separators for word tokenizer\" (#935)"},{"Id":"361267055","IsPullRequest":false,"CreatedAt":"2018-09-18T11:52:47","Actor":"lefig","Number":"934","RawContent":null,"Title":"Release 0.5 feedback","State":"open","Body":"Firstly, a very big thank you and congratulations to all involved with the latest release. I am, particularly looking forward to exploring the new API and specifically accessing model feature selection/scores.\r\n\r\nIn the meantime, we have incomplete MI generated and am not sure if this is related to the changes. ..\r\nDisplayng metrics for Momentum Model Regression\r\nNot adding a normalizer.\r\nMaking per-feature arrays\r\nChanging data from row-wise to column-wise\r\nProcessed 423 instances\r\nBinning and forming Feature objects\r\nReserved memory for tree learner: 363168 bytes\r\nStarting to train ...\r\nNot training a calibrator because it is not needed.\r\n*************************************************\r\n*       Metrics for Fast Tree\r\n*------------------------------------------------\r\n*       R2 Score: -1.05\r\n*       Absolute loss:\r\n*       Squared loss:\r\n*       RMS loss:\r\n*************************************************\r\nNot adding a normalizer.\r\nMaking per-feature arrays\r\nChanging data from row-wise to column-wise\r\nProcessed 423 instances\r\nBinning and forming Feature objects\r\nReserved memory for tree learner: 363168 bytes\r\nStarting to train ...\r\nNot training a calibrator because it is not needed.\r\n*************************************************\r\n*       Metrics for Fast Forest\r\n*------------------------------------------------\r\n*       R2 Score: 0.05\r\n*       Absolute loss:\r\n*       Squared loss:\r\n*       RMS loss:\r\n*************************************************\r\n\r\nI have a theory though - that this is related to some data points being not sufficiently linear. Could this be correct?","Url":"https://github.com/dotnet/machinelearning/issues/934","RelatedDescription":"Open issue \"Release 0.5 feedback\" (#934)"},{"Id":"361072980","IsPullRequest":false,"CreatedAt":"2018-09-17T22:49:22","Actor":"TomFinley","Number":"933","RawContent":null,"Title":"De-transformation of samplers, filters","State":"open","Body":"As we transition the code from being exclusively for a tool to being more appropriate for an API, one of the most crucial parts of the work is that summarized in #581 where we take the concept `IDataTransform` and split it into three concepts `IEstimator`/`ITransformer`/`IDataView` -- currently, an [`IDataTranform` fills all three roles](https://github.com/dotnet/machinelearning/blob/4e0800c652e981d12a04099262aadea1181aa76a/src/Microsoft.ML.Data/Data/IDataLoader.cs#L91) (it is both the transforming model and an `IDataView`), which leads to a great deal of confusion when using this as an API.\r\n\r\nThe working assumption is that most things that are `IDataTranform` will transition to being this triad of estimator, transformer, and data-view. There are however some probably desirable exceptions that we do not want to *fully* convert:\r\n\r\n* All row filter transforms (skip, take, NA filter),\r\n* The shuffle transform,\r\n* The bootstrap sampler transform.\r\n\r\nCurrently they are `IDataTransform`, because everything that transforms data in this fashion is an `IDataTransform`. However this means that there is a data model associated with it, and it is serialized just alongside every other transform.\r\n\r\nPeople have historically found this confusing. For example, people want to train and test based on the same dataset, so they apply bootstrap sampling transform in their transform list -- but then the same is done to their test set so the results are all screwed up. Or, they want to train on only some of it, so they apply the `Take` filter -- but then their test set evaluation happens only over the first however many. There are lots of examples like this that I've seen over the years. My belief is that generally this sort of row-wise filtering/sampling being part of the data pipeline really does more harm than good.\r\n\r\nNow that we have the estimator/transformer/data triad of #581, we can make these operations exclusively as `IDataView`s, *not* actual fully blown `ITransformer` implementors (where someone might make the mistake of serializing them to a data pipeline).\r\n\r\nIt does ***technically*** represent a loss of capability, but I am not aware that I have ever seen a valid usecase where any of these entities was used as a data-model component deliberately, and it is very difficult for me to imagine a case where people would want to do so. Every usecase I have ever seen has been accidental and ultimately deeply harmful to the integrity of the user's experiments.\r\n\r\nWe will also need to decide what to do when we deserialize these models, when we deserialize what had been an `IDataTransform` into the new `ITransformer`. My own preference would be that they be replaced with a no-op transformer, since again I've never seen anything valid done with them.\r\n\r\nThis will also incidentally mean less work as we perform the conversion work.","Url":"https://github.com/dotnet/machinelearning/issues/933","RelatedDescription":"Open issue \"De-transformation of samplers, filters\" (#933)"},{"Id":"361069105","IsPullRequest":false,"CreatedAt":"2018-09-17T22:31:34","Actor":"artidoro","Number":"932","RawContent":null,"Title":"ComponentCatalogue: private constructors for estimators","State":"open","Body":"Only one constructor per estimator should be **public** and presented to the end user. The constructor should require the arguments that are needed to initialize the estimator.\r\n\r\nWe also need to have another constructor with arguments (IHostEnvironment env, Arguments args) for MAML to work. This constructor should be **private**, so that it does not appear as an option to the end user.\r\n\r\nCurrently the ComponentCatalogue does not recognize any private constructors. ","Url":"https://github.com/dotnet/machinelearning/issues/932","RelatedDescription":"Open issue \"ComponentCatalogue: private constructors for estimators\" (#932)"},{"Id":"360480977","IsPullRequest":true,"CreatedAt":"2018-09-17T21:15:00","Actor":"Zruty0","Number":"923","RawContent":null,"Title":"Renamed TlcEnvironment to Console. Also introduced LocalEnvironment","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/923","RelatedDescription":"Closed or merged PR \"Renamed TlcEnvironment to Console. Also introduced LocalEnvironment\" (#923)"},{"Id":"360466607","IsPullRequest":true,"CreatedAt":"2018-09-17T20:06:43","Actor":"Zruty0","Number":"920","RawContent":null,"Title":"Rename Microsoft.ML to Microsoft.ML.Legacy","State":"closed","Body":"This is a purely mechanical rename.\r\n- `Microsoft.ML` -> `Microsoft.ML.Legacy`\r\n- Moved to `src/Microsoft.ML.Legacy`\r\n- Updated project references and solution","Url":"https://github.com/dotnet/machinelearning/pull/920","RelatedDescription":"Closed or merged PR \"Rename Microsoft.ML to Microsoft.ML.Legacy\" (#920)"},{"Id":"360579353","IsPullRequest":true,"CreatedAt":"2018-09-17T18:13:23","Actor":"jwood803","Number":"926","RawContent":null,"Title":"Fix duplicate transform friendly name","State":"closed","Body":"Fix for issue #214 \r\n\r\n@TomFinley I'm not sure if this is the right way to go about it, but I took a shot at it. 😄 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/926","RelatedDescription":"Closed or merged PR \"Fix duplicate transform friendly name\" (#926)"},{"Id":"360901380","IsPullRequest":false,"CreatedAt":"2018-09-17T14:40:20","Actor":"eerhardt","Number":"930","RawContent":null,"Title":"PipeBase<TMessage> should implement the Dispose Pattern correctly","State":"open","Body":"The PipeBase class implements IDisposable, but doesn't implement the basic pattern correctly.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/5e08fa1ea7bfb54f28ed0815cb6413e0068e6dd1/src/Microsoft.ML.Core/Environment/HostEnvironmentBase.cs#L205-L213\r\n\r\nSee https://docs.microsoft.com/en-us/dotnet/standard/design-guidelines/dispose-pattern for the basic dispose pattern.\r\n\r\nWe should follow the design guidelines here.","Url":"https://github.com/dotnet/machinelearning/issues/930","RelatedDescription":"Open issue \"PipeBase<TMessage> should implement the Dispose Pattern correctly\" (#930)"},{"Id":"360841297","IsPullRequest":false,"CreatedAt":"2018-09-17T12:16:39","Actor":"TestIprel","Number":"929","RawContent":null,"Title":"Time series and forecasting","State":"open","Body":"Ml.net version 0.5\r\n- When you plan to release a versione that include a Time series forecasting trainer ??\r\n","Url":"https://github.com/dotnet/machinelearning/issues/929","RelatedDescription":"Open issue \"Time series and forecasting\" (#929)"},{"Id":"360407021","IsPullRequest":false,"CreatedAt":"2018-09-15T06:37:37","Actor":"michasacuer","Number":"916","RawContent":null,"Title":"“Score Column” is missing, System.Reflection.TargetInvocationException","State":"closed","Body":"### System information\r\n\r\n- **OS Windows 10**:\r\n- **.NET Version: 2.0.7**: \r\n\r\n### Issue\r\n\r\nI try to build ML.NET app that working on [Wisconsin Prognostic Breast Cancer Dataset](https://www.kaggle.com/sarahvch/breast-cancer-wisconsin-prognostic-data-set). Whatever i do i get \r\n\r\n> ArgumentOutOfRangeException: Score column is missing\r\n\r\nEven if i add `Score` Column. The error showing on `ClassificationMetrics metrics = evaluator.Evaluate(model, testData);` line. \r\n\r\nMy data looks like this:\r\n\r\n```\r\ndiagnosis;radius_mean;texture_mean;perimeter_mean;area_mean;smoothness_mean;compactness_mean;concavity_mean;concave points_mean;symmetry_mean;fractal_dimension_mean;radius_se;texture_se;perimeter_se;area_se;smoothness_se;compactness_se;concavity_se;concave points_se;symmetry_se;fractal_dimension_se;radius_worst;texture_worst;perimeter_worst;area_worst;smoothness_worst;compactness_worst;concavity_worst;concave points_worst;symmetry_worst;fractal_dimension_worst\r\nB;11.62;18.18;76.38;408.8;0.1175;0.1483;0.102;0.05564;0.1957;0.07255;0.4101;1.74;3.027;27.85;0.01459;0.03206;0.04961;0.01841;0.01807;0.005217;13.36;25.4;88.14;528.1;0.178;0.2878;0.3186;0.1416;0.266;0.0927\r\nB;9.667;18.49;61.49;289.1;0.08946;0.06258;0.02948;0.01514;0.2238;0.06413;0.3776;1.35;2.569;22.73;0.007501;0.01989;0.02714;0.009883;0.0196;0.003913;11.14;25.62;70.88;385.2;0.1234;0.1542;0.1277;0.0656;0.3174;0.08524\r\n```\r\n\r\nCode can be pretty long, i posted my question into StackOverflow too: [ML.NET, “Score Column” is missing](https://stackoverflow.com/questions/52335066/ml-net-score-column-is-missing?noredirect=1#comment91619986_52335066)\r\n\r\n### Source code / logs\r\n\r\n**My CancerData.cs looks like this:**\r\n\r\n\r\n```\r\nclass CancerData\r\n{\r\n\r\n    [Column(ordinal: \"0\")]\r\n    public string Diagnosis;\r\n\r\n    [Column(ordinal: \"1\")]\r\n    public float RadiusMean;\r\n\r\n    [Column(ordinal: \"2\")]\r\n    public float TextureMean;\r\n\r\n    [Column(ordinal: \"3\")]\r\n    public float PerimeterMean;\r\n\r\n   //.........\r\n\r\n   [Column(ordinal: \"28\")] \r\n    public float ConcavPointsWorst;\r\n\r\n    [Column(ordinal: \"29\")]\r\n    public float SymmetryWorst;\r\n\r\n    [Column(ordinal: \"30\")]\r\n    public float FractalDimensionWorst;\r\n\r\n    [Column(ordinal: \"31\", name: \"Label\")]\r\n    public string Label;\r\n}\r\n```\r\n\r\n**CancerPrediction.cs**\r\n\r\n```\r\nclass CancerPrediction\r\n{\r\n    [ColumnName(\"PredictedLabel\")]\r\n    public string Diagnosis;\r\n\r\n    [ColumnName(\"Score\")]\r\n    public float Score;\r\n}\r\n```\r\n**Main.cs**\r\n```\r\nclass Program\r\n{\r\n\r\n    static void Main(string[] args)\r\n    {\r\n        PredictionModel<CancerData, CancerPrediction> model = Train();\r\n        Evaluate(model);\r\n    }\r\n\r\n    public static PredictionModel<CancerData, CancerPrediction> Train()\r\n    {\r\n        var pipeline = new LearningPipeline();\r\n        pipeline.Add(new TextLoader(\"Cancer-train.csv\").CreateFrom<CancerData>(useHeader: true, separator: ';'));\r\n        pipeline.Add(new Dictionarizer((\"Diagnosis\", \"Label\")));\r\n        pipeline.Add(new ColumnConcatenator(outputColumn: \"Features\",\r\n            \"RadiusMean\",\r\n            \"TextureMean\",\r\n            \"PerimeterMean\",\r\n            //... all of the features\r\n            \"FractalDimensionWorst\"));\r\n        pipeline.Add(new StochasticDualCoordinateAscentBinaryClassifier());\r\n        pipeline.Add(new PredictedLabelColumnOriginalValueConverter() { PredictedLabelColumn = \"PredictedLabel\" });\r\n        PredictionModel<CancerData, CancerPrediction> model = pipeline.Train<CancerData, CancerPrediction>();\r\n        model.WriteAsync(modelPath);\r\n        return model;\r\n\r\n    }\r\n\r\n    public static void Evaluate(PredictionModel<CancerData, CancerPrediction> model)\r\n    {\r\n        var testData = new TextLoader(\"Cancer-test.csv\").CreateFrom<CancerData>(useHeader: true, separator: ';');\r\n        var evaluator = new ClassificationEvaluator();\r\n        ClassificationMetrics metrics = evaluator.Evaluate(model, testData);\r\n        var accuracy = Math.Round(metrics.AccuracyMicro, 2);\r\n        Console.WriteLine(\"The accuracy is: \" + accuracy);\r\n        Console.ReadLine();\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/916","RelatedDescription":"Closed issue \"“Score Column” is missing, System.Reflection.TargetInvocationException\" (#916)"},{"Id":"360477570","IsPullRequest":true,"CreatedAt":"2018-09-15T00:42:11","Actor":"Ivanidzo4ka","Number":"922","RawContent":null,"Title":"Make Create constructors private and handle that in ComponentCatalog.","State":"closed","Body":"Fixes #921","Url":"https://github.com/dotnet/machinelearning/pull/922","RelatedDescription":"Closed or merged PR \"Make Create constructors private and handle that in ComponentCatalog.\" (#922)"},{"Id":"360467932","IsPullRequest":false,"CreatedAt":"2018-09-15T00:42:11","Actor":"Ivanidzo4ka","Number":"921","RawContent":null,"Title":"ComponentCatalog and public constructors","State":"closed","Body":"In current moment our component catalog looking for constructor methods only if they public which force us to have lot of public constructors and static Create methods, which is bad from API point of view.\r\nWe should change ComponentCatalog to look for private methods as well and change visibility of public constructors.\r\n\r\n```\r\n // Factory method for SignatureDataTransform.\r\n        public static IDataTransform Create(IHostEnvironment env, Arguments args, IDataView input)\r\n```\r\nor \r\n```\r\n // Factory method for SignatureLoadDataTransform.\r\n        public static IDataTransform Create(IHostEnvironment env, ModelLoadContext ctx, IDataView input)\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/921","RelatedDescription":"Closed issue \"ComponentCatalog and public constructors\" (#921)"},{"Id":"360491448","IsPullRequest":false,"CreatedAt":"2018-09-15T00:39:41","Actor":"Ivanidzo4ka","Number":"925","RawContent":null,"Title":"Tests need their own environment implementation","State":"open","Body":"Right now we use TlcEnvironment (or ConsoleEnvironment) which outputs everything to console.\r\nAnd XUnit don't care about console, and if you want to look on output during test execution you need to do something like this:\r\nhttps://github.com/dotnet/machinelearning/blob/4cb7dd9047b4c456e81ba014c664c27efe217351/test/Microsoft.ML.StaticPipelineTesting/StaticPipeTests.cs#L31\r\n\r\nWe should have XUnitEnvironment or TestEnvironment and redirect all output to ITestOutputHelper.","Url":"https://github.com/dotnet/machinelearning/issues/925","RelatedDescription":"Open issue \"Tests need their own environment implementation\" (#925)"},{"Id":"360486115","IsPullRequest":false,"CreatedAt":"2018-09-14T23:52:41","Actor":"Ivanidzo4ka","Number":"924","RawContent":null,"Title":"Significant time difference between linux, macos and windows test executions on build machines","State":"open","Body":"Let's look on this [build](https://dnceng.visualstudio.com/public/_build/results?buildId=21056&view=logs)\r\n\r\nMacOS Release  - tests: 19:08\r\nMacOS Debug  - tests: 22:59\r\nLinux Release - test 17:02\r\nLinux Debug - test 21:02\r\nWindows Release - test 5:00\r\nWindows Debug - test 7:53\r\n\r\nWindows machine:\r\n2018-09-14T22:47:22.5353796Z Results File: D:\\a\\1\\s\\bin/AnyCPU.Debug\\Microsoft.ML.Predictor.Tests\\VssAdministrator_factoryvm-az366_2018-09-14_22_43_12.trx\r\n2018-09-14T22:47:22.5354312Z \r\n2018-09-14T22:47:22.5355746Z Total tests: 105. Passed: 49. Failed: 0. Skipped: 56.\r\n2018-09-14T22:47:22.5356035Z Test Run Successful.\r\n2018-09-14T22:47:22.5357667Z Test execution time: 4.2240 Minutes\r\n\r\nLinux machine:\r\n\r\n2018-09-14T22:59:26.1088812Z Results File: /__w/1/s/bin/AnyCPU.Debug/Microsoft.ML.Predictor.Tests/_5438db60ae8a_2018-09-14_22_41_24.trx\r\n2018-09-14T22:59:26.1096444Z \r\n2018-09-14T22:59:26.1109704Z Total tests: 105. Passed: 49. Failed: 0. Skipped: 56.\r\n2018-09-14T22:59:26.1124041Z Test Run Successful.\r\n2018-09-14T22:59:26.1137781Z Test execution time: 18.0608 Minutes\r\n\r\nIt looks like we run same set of tests but for some reason where is huge difference in execution.\r\nAny one willing to investigate?","Url":"https://github.com/dotnet/machinelearning/issues/924","RelatedDescription":"Open issue \"Significant time difference between linux, macos and windows test executions on build machines\" (#924)"},{"Id":"360232597","IsPullRequest":true,"CreatedAt":"2018-09-14T21:37:29","Actor":"justinormont","Number":"914","RawContent":null,"Title":"TLS Links for Improved Security","State":"closed","Body":"Changes various HTTP links to HTTPS. Links are checked to ensure the HTTPS serves the same content. Not all HTTP links could be converted.\r\n\r\nCloses #911 \r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/914","RelatedDescription":"Closed or merged PR \"TLS Links for Improved Security\" (#914)"},{"Id":"360455082","IsPullRequest":false,"CreatedAt":"2018-09-14T21:06:26","Actor":"wschin","Number":"919","RawContent":null,"Title":"Categorical Feature and FastTree","State":"open","Body":"FastTree has a very powerful mechanism to process categorical features. However, which feature is considered as categorical is not described anywhere in doc. Some questions a data scientist may want to ask:\r\n1. How to make feature categorical if they are stored as floats such as 1.00 and 128.00?\r\n2. How does categorical metadata propagate through the learning pipeline? For example, some transforms may drop those metadata so that categorical features are no longer categorical after them.\r\n3. How to make categorical not considered as categorical in FastTree?\r\n\r\nNote that [LightGBM](https://lightgbm.readthedocs.io/en/latest/Python-API.html) has a nice description for how they handle categorical features. Let me just copy it here.\r\n_categorical_feature (list of strings or int, or 'auto', optional (default=\"auto\")) – Categorical features. If list of int, interpreted as indices. If list of strings, interpreted as feature names (need to specify feature_name as well). If ‘auto’ and data is pandas DataFrame, pandas categorical columns are used._ \r\n\r\nThanks,","Url":"https://github.com/dotnet/machinelearning/issues/919","RelatedDescription":"Open issue \"Categorical Feature and FastTree\" (#919)"},{"Id":"360436709","IsPullRequest":false,"CreatedAt":"2018-09-14T20:03:14","Actor":"Zruty0","Number":"918","RawContent":null,"Title":"Flaky assert failure in SDCA test ","State":"open","Body":"```\r\n2018-09-13T23:25:02.4332634Z Failed   Microsoft.ML.Scenarios.ScenariosTests.TrainAndPredictIrisModelWithStringLabelTest\r\n2018-09-13T23:25:02.4332936Z Error Message:\r\n2018-09-13T23:25:02.4333077Z  Assert failed: longIdx=37, invariants.Length=37\r\n2018-09-13T23:25:02.4333210Z Expected: True\r\n2018-09-13T23:25:02.4333341Z Actual:   False\r\n2018-09-13T23:25:02.4333453Z Stack Trace:\r\n2018-09-13T23:25:02.4333653Z    at Microsoft.ML.Runtime.Internal.Internallearn.Test.GlobalBase.AssertHandler(String msg, IExceptionContext ectx) in D:\\a\\1\\s\\test\\Microsoft.ML.TestFramework\\GlobalBase.cs:line 47\r\n2018-09-13T23:25:02.4333951Z    at Microsoft.ML.Runtime.Contracts.DbgFailCore(String msg, IExceptionContext ctx) in D:\\a\\1\\s\\src\\Microsoft.ML.Core\\Utilities\\Contracts.cs:line 770\r\n2018-09-13T23:25:02.4334183Z    at Microsoft.ML.Runtime.Contracts.DbgFail(String msg) in D:\\a\\1\\s\\src\\Microsoft.ML.Core\\Utilities\\Contracts.cs:line 783\r\n2018-09-13T23:25:02.4334404Z    at Microsoft.ML.Runtime.Contracts.Assert(Boolean f, String msg) in D:\\a\\1\\s\\src\\Microsoft.ML.Core\\Utilities\\Contracts.cs:line 841\r\n2018-09-13T23:25:02.4334962Z    at Microsoft.ML.Runtime.Learners.SdcaTrainerBase`2.TrainCore(IChannel ch, RoleMappedData data, LinearPredictor predictor, Int32 weightSetCount) in D:\\a\\1\\s\\src\\Microsoft.ML.StandardLearners\\Standard\\LinearClassificationTrainer.cs:line 514\r\n2018-09-13T23:25:02.4335278Z    at Microsoft.ML.Runtime.Learners.StochasticTrainerBase`2.TrainModelCore(TrainContext context) in D:\\a\\1\\s\\src\\Microsoft.ML.StandardLearners\\Standard\\StochasticTrainerBase.cs:line 42\r\n2018-09-13T23:25:02.4335567Z    at Microsoft.ML.Runtime.Training.TrainerEstimatorBase`2.Train(TrainContext context) in D:\\a\\1\\s\\src\\Microsoft.ML.Data\\Training\\TrainerEstimatorBase.cs:line 88\r\n2018-09-13T23:25:02.4336480Z    at Microsoft.ML.Runtime.Training.TrainerEstimatorBase`2.Microsoft.ML.Runtime.ITrainer.Train(TrainContext context) in D:\\a\\1\\s\\src\\Microsoft.ML.Data\\Training\\TrainerEstimatorBase.cs:line 154\r\n2018-09-13T23:25:02.4336826Z    at Microsoft.ML.Runtime.Data.TrainUtils.TrainCore(IHostEnvironment env, IChannel ch, RoleMappedData data, ITrainer trainer, RoleMappedData validData, ICalibratorTrainer calibrator, Int32 maxCalibrationExamples, Nullable`1 cacheData, IPredictor inputPredictor) in D:\\a\\1\\s\\src\\Microsoft.ML.Data\\Commands\\TrainCommand.cs:line 260\r\n2018-09-13T23:25:02.4337494Z    at Microsoft.ML.Runtime.Data.TrainUtils.Train(IHostEnvironment env, IChannel ch, RoleMappedData data, ITrainer trainer, ICalibratorTrainerFactory calibrator, Int32 maxCalibrationExamples) in D:\\a\\1\\s\\src\\Microsoft.ML.Data\\Commands\\TrainCommand.cs:line 228\r\n2018-09-13T23:25:02.4337856Z    at Microsoft.ML.Runtime.EntryPoints.LearnerEntryPointsUtils.Train[TArg,TOut](IHost host, TArg input, Func`1 createTrainer, Func`1 getLabel, Func`1 getWeight, Func`1 getGroup, Func`1 getName, Func`1 getCustom, ICalibratorTrainerFactory calibrator, Int32 maxCalibrationExamples) in D:\\a\\1\\s\\src\\Microsoft.ML.Data\\EntryPoints\\InputBase.cs:line 189\r\n2018-09-13T23:25:02.4338176Z    at Microsoft.ML.Runtime.Learners.Sdca.TrainMultiClass(IHostEnvironment env, Arguments input) in D:\\a\\1\\s\\src\\Microsoft.ML.StandardLearners\\Standard\\SdcaMultiClass.cs:line 437\r\n```\r\n\r\nThe data  pipeline has a `TextLoader`, a `Dictionarizer` and `ColumnConcatenator`, then it trains SDCA classifier.\r\n\r\n@TomFinley suggests that it could be related to the difference in ID generation between iterations. \r\nThe fact that the test is not failing every time suggests that either there is a race condition somewhere (in the `TextLoader`?), or somehow the data is sometimes modified mid-run.","Url":"https://github.com/dotnet/machinelearning/issues/918","RelatedDescription":"Open issue \"Flaky assert failure in SDCA test \" (#918)"},{"Id":"360386989","IsPullRequest":false,"CreatedAt":"2018-09-14T17:15:37","Actor":"ftdube","Number":"915","RawContent":null,"Title":"Trying to left-outer join two datasets using a PK/FK","State":"open","Body":"Is there any way to manipulate the input data in order to join two distinct datasets using a primary key/foreign key?  Is the expectation that the input from the TextLoader is always partially pre-processed?","Url":"https://github.com/dotnet/machinelearning/issues/915","RelatedDescription":"Open issue \"Trying to left-outer join two datasets using a PK/FK\" (#915)"}],"ResultType":"GitHubIssue"}},"RunOn":"2018-09-19T05:30:35.4130958Z","RunDurationInMilliseconds":1053}