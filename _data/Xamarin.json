{"Data":{"Blog":{"FeedItems":[{"Title":"Mobile & .NET Developer Community Events in February","PublishedOn":"2019-02-01T17:31:08+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Fall in love with building your next mobile application by networking with local user groups to learn about new and exciting releases, tooling, or updates with Xamarin and .NET related technologies!...","Href":"https://blog.xamarin.com/mobile-net-developer-community-events-in-february/","RawContent":null},{"Title":"Complex UI with FastGrid for Xamarin.Forms","PublishedOn":"2019-01-30T17:56:02+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This guest post was contributed by Slava Chernikoff (Principal Engineer at Binwell,  Microsoft MVP, Xamarin Certified Mobile Developer), Artem Tischenko (Xamarin developer at Binwell) and Kirill...","Href":"https://blog.xamarin.com/complex-ui-with-fastgrid-for-xamarin-forms/","RawContent":null},{"Title":"Android’s D8 dexer and R8 shrinker","PublishedOn":"2019-01-28T18:10:03+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"There is quite a bit of complexity to packaging an Android application. Xamarin.Android has to run through the same build pipeline as Android apps built in Android Studio&#8211;with the addition of...","Href":"https://blog.xamarin.com/androids-d8-dexer-and-r8-shrinker/","RawContent":null},{"Title":"What’s New for Xamarin Developers in Visual Studio 2019 Preview 2","PublishedOn":"2019-01-23T20:22:42+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Today, Visual Studio 2019 Preview 2 was released and includes many improvements for mobile developers in Visual Studio. This release, we focused on key areas to make you more productive when authoring...","Href":"https://blog.xamarin.com/whats-new-for-xamarin-developers-in-visual-studio-2019-preview-2/","RawContent":null},{"Title":"Visual Studio Mobile Developer Podcast: New Year – New Pod!","PublishedOn":"2019-01-18T18:59:30+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"The Visual Studio Mobile Developer Podcast features Matt Soucoup and James Montemagno discussing the latest and greatest in mobile and cloud development. This episode includes a discussion of...","Href":"https://blog.xamarin.com/visual-studio-mobile-developer-podcast-new-year-new-pod/","RawContent":null},{"Title":"Introducing the .NET Community Standup Series","PublishedOn":"2019-01-17T16:57:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"We love our amazing .NET community that is filled with amazing developers writing fantastic blogs, libraries, presentations, and pull requests every week. We are always looking for ways to highlight...","Href":"https://blog.xamarin.com/introducing-the-net-community-standup-series/","RawContent":null},{"Title":"Xamarin.Forms 3.5: A Little Bindable Love","PublishedOn":"2019-01-11T18:06:39+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"This is a guest post contributed by Andrei Nitescu, a mobile developer since 2013 and frequent contributor to Xamarin.Forms. He shares about his experiences with other developers on his blog, and...","Href":"https://blog.xamarin.com/xamarin-forms-3-5-a-little-bindable-love/","RawContent":null},{"Title":"Hackathon Superweapon: F# and Fabulous","PublishedOn":"2019-01-10T20:27:58+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Recently, I participated in Hack for the Sea, a weekend devoted to applying tech to marine conservation. One of our local challenges was a “cross-platform mobile app for reporting marine debris.” A...","Href":"https://blog.xamarin.com/hackathon-superweapon-f-and-fabulous/","RawContent":null},{"Title":"Xamarin and .NET Community Events in January","PublishedOn":"2019-01-02T19:00:12+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"It&#8217;s a new year with tons of new and awesome community-run events scheduled this month. Get the full list of mobile developer engagements happening all over the world through our Community page....","Href":"https://blog.xamarin.com/xamarin-and-net-community-events-in-january/","RawContent":null},{"Title":"Accessing Native Features the Cross-Platform Way with Xamarin.Essentials","PublishedOn":"2018-12-19T22:46:18+00:00","CommentsCount":0,"FacebookCount":0,"Summary":"Every mobile application requires access to native functionality. When developing native mobile apps with Xamarin, developers are able to integrate deeply into iOS and Android since Xamarin exposes...","Href":"https://blog.xamarin.com/accessing-native-features-xamarin-essentials/","RawContent":null}],"ResultType":"Feed"},"Android":{"Events":[{"Id":"8998943343","Type":"IssuesEvent","CreatedAt":"2019-02-03T03:44:26","Actor":"erikpowa","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2687","RelatedDescription":"Opened issue \"Support ManifestMerger from the Android SDK\" (#2687) at xamarin/xamarin-android","RelatedBody":"Currently hitting invalid/unmerged `<service>` in merged manifest. (firebase-auth + firebase-firestore)\r\n```xml\r\n  <service\r\n                android:name=\"com.google.firebase.components.ComponentDiscoveryService\"\r\n                android:exported=\"false\" >\r\n            <meta-data\r\n                    android:name=\"com.google.firebase.components:com.google.firebase.auth.FirebaseAuthRegistrar\"\r\n                    android:value=\"com.google.firebase.components.ComponentRegistrar\" />\r\n        </service>\r\n\r\n        <service android:name=\"com.google.firebase.components.ComponentDiscoveryService\">\r\n            <meta-data\r\n                    android:name=\"com.google.firebase.components:com.google.firebase.firestore.FirestoreRegistrar\"\r\n                    android:value=\"com.google.firebase.components.ComponentRegistrar\"/>\r\n        </service>\r\n```\r\n\r\nIs there any plan to support the tool from Android SDK? (The current implementation is kinda like [this](https://github.com/xamarin/xamarin-android/blob/master/src/Xamarin.Android.Build.Tasks/Utilities/ManifestDocument.cs#L441)).\r\n\r\n\r\n\r\n<details>\r\n  <summary>Manifest Merger CLI</summary>\r\n\r\n```\r\nAndroid Manifest Merger Tool Version 2\r\n\r\nUsage:\r\nMerger --main mainAndroidManifest.xml\r\n        --log [VERBOSE, INFO, WARNING, ERROR]\r\n        --libs [path separated list of lib's manifests]\r\n        --overlays [path separated list of overlay's manifests]\r\n        --property [PACKAGE | VERSION_CODE | VERSION_NAME | MIN_SDK_VERSION | TARGET_SDK_VERSION | MAX_SDK_VERSION | NAME | TARGET_PACKAGE | FUNCTIONAL_TEST | HANDLE_PROFILING | LABEL=value]\r\n        --placeholder [name=value]\r\n        --out [path of the output file]\r\n```\r\n\r\n</details>\r\n``` ```\r\n\r\nTested it where\r\n`--main` pointed to `\\Properties\\AndroidManifest.xml`\r\n`--libs` to `\\90\\lp\\....\\jl\\AndroidManifest.xml`\r\n`--overlays` to a custom overlay.xml with XA/mono stuph\r\n\r\n\r\n<details>\r\n<summary>main.xml</summary>\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\"\r\n          android:installLocation=\"auto\" android:versionCode=\"1\" package=\"com.example\"\r\n          android:versionName=\"1.0.0-alpha1\">\r\n    <uses-sdk android:largeHeap=\"true\" android:minSdkVersion=\"24\" android:targetSdkVersion=\"28\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-feature android:glEsVersion=\"0x00020000\" android:required=\"true\" />\r\n    <application android:allowBackup=\"false\" android:hardwareAccelerated=\"true\" android:label=\"Example\" android:theme=\"@style/AppTheme.NoActionBar\" android:icon=\"@mipmap/ic_launcher\">\r\n        <meta-data android:name=\"com.google.android.geo.API_KEY\" android:value=\"REMOVED\" />\r\n        <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />\r\n        <meta-data android:name=\"com.google.android.gms.ads.APPLICATION_ID\" android:value=\"REMOVED\" />\r\n        <uses-library android:name=\"org.apache.http.legacy\" android:required=\"true\" />\r\n    </application>\r\n</manifest>\r\n```\r\n\r\n</details>\r\n`\r\n<details>\r\n  <summary>overlay.xml</summary>\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n          xmlns:tools=\"http://schemas.android.com/tools\"\r\n          package=\"com.example\"\r\n          android:installLocation=\"auto\"\r\n          android:versionCode=\"1\"\r\n          android:versionName=\"1.0.0-alpha1\" >\r\n\r\n    <application\r\n            android:name=\"android.support.multidex.MultiDexApplication\"\r\n            android:allowBackup=\"false\"\r\n            android:debuggable=\"true\"\r\n            android:hardwareAccelerated=\"true\"\r\n            android:icon=\"@mipmap/ic_launcher\"\r\n            android:label=\"Example\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" >\r\n        <activity\r\n                android:name=\"md5f22321f9cba4497f650f54fd718a2a9b.MainActivity\"\r\n                android:configChanges=\"density|orientation\"\r\n                android:label=\"@string/app_name\"\r\n                android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity\r\n                android:name=\"md5f22321f9cba4497f650f54fd718a2a9b.ServicePickerActivity\"\r\n                android:label=\"@string/app_name\"\r\n                android:theme=\"@style/AppTheme\" />\r\n        <activity\r\n                android:name=\"md5f22321f9cba4497f650f54fd718a2a9b.SettingsChangerActivity\"\r\n                android:label=\"@string/app_name\"\r\n                android:theme=\"@style/AppTheme\" />\r\n\r\n        <provider\r\n                android:name=\"mono.android.MultiDexLoader\"\r\n                android:authorities=\"com.example.mono.android.MultiDexLoader.__mono_init__\"\r\n                android:exported=\"false\"\r\n                android:initOrder=\"1999999999\" />\r\n        <provider\r\n                android:name=\"mono.MonoRuntimeProvider\"\r\n                android:authorities=\"com.example.mono.MonoRuntimeProvider.__mono_init__\"\r\n                android:exported=\"false\"\r\n                android:initOrder=\"1999999998\" />\r\n        <!-- suppress ExportedReceiver -->\r\n        <receiver android:name=\"mono.android.Seppuku\" >\r\n            <intent-filter>\r\n                <action android:name=\"mono.android.intent.action.SEPPUKU\" />\r\n\r\n                <category android:name=\"mono.android.intent.category.SEPPUKU.com.example\" />\r\n            </intent-filter>\r\n        </receiver>\r\n    </application>\r\n</manifest>\r\n```\r\n</details>\r\n`\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\" xmlns:tools=\"http://schemas.android.com/tools\"\r\n          android:installLocation=\"auto\" android:versionCode=\"1\" package=\"com.example\"\r\n          android:versionName=\"1.0.0-alpha1\">\r\n    <uses-sdk android:largeHeap=\"true\" android:minSdkVersion=\"24\" android:targetSdkVersion=\"28\" />\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-feature android:glEsVersion=\"0x00020000\" android:required=\"true\" />\r\n    <application android:allowBackup=\"false\" android:hardwareAccelerated=\"true\" android:label=\"Example\" android:theme=\"@style/AppTheme.NoActionBar\" android:icon=\"@mipmap/ic_launcher\">\r\n        <meta-data android:name=\"com.google.android.geo.API_KEY\" android:value=\"REMOVED\" />\r\n        <meta-data android:name=\"com.google.android.gms.version\" android:value=\"@integer/google_play_services_version\" />\r\n        <meta-data android:name=\"com.google.android.gms.ads.APPLICATION_ID\" android:value=\"REMOVED\" />\r\n        <uses-library android:name=\"org.apache.http.legacy\" android:required=\"true\" />\r\n    </application>\r\n</manifest>\r\n`\r\n<details>\r\n  <summary>valid_output.xml</summary>\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.example\"\r\n    android:installLocation=\"auto\"\r\n    android:versionCode=\"1\"\r\n    android:versionName=\"1.0.0-alpha1\" >\r\n\r\n    <uses-sdk\r\n        android:largeHeap=\"true\"\r\n        android:minSdkVersion=\"24\"\r\n        android:targetSdkVersion=\"28\" />\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n\r\n    <uses-feature\r\n        android:glEsVersion=\"0x00020000\"\r\n        android:required=\"true\" />\r\n\r\n    <application\r\n        android:name=\"android.support.multidex.MultiDexApplication\"\r\n        android:allowBackup=\"false\"\r\n        android:appComponentFactory=\"androidx.core.app.CoreComponentFactory\"\r\n        android:debuggable=\"true\"\r\n        android:hardwareAccelerated=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"Example\"\r\n        android:theme=\"@style/AppTheme.NoActionBar\" >\r\n        <activity\r\n            android:name=\"md5f22321f9cba4497f650f54fd718a2a9b.MainActivity\"\r\n            android:configChanges=\"density|orientation\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/AppTheme.NoActionBar\" />\r\n        <activity\r\n            android:name=\"md5f22321f9cba4497f650f54fd718a2a9b.ServicePickerActivity\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/AppTheme\" />\r\n        <activity\r\n            android:name=\"md5f22321f9cba4497f650f54fd718a2a9b.SettingsChangerActivity\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/AppTheme\" />\r\n\r\n        <provider\r\n            android:name=\"mono.android.MultiDexLoader\"\r\n            android:authorities=\"com.example.mono.android.MultiDexLoader.__mono_init__\"\r\n            android:exported=\"false\"\r\n            android:initOrder=\"1999999999\" />\r\n        <provider\r\n            android:name=\"mono.MonoRuntimeProvider\"\r\n            android:authorities=\"com.example.mono.MonoRuntimeProvider.__mono_init__\"\r\n            android:exported=\"false\"\r\n            android:initOrder=\"1999999998\" />\r\n        <!-- suppress ExportedReceiver -->\r\n        <receiver android:name=\"mono.android.Seppuku\" >\r\n            <intent-filter>\r\n                <action android:name=\"mono.android.intent.action.SEPPUKU\" />\r\n\r\n                <category android:name=\"mono.android.intent.category.SEPPUKU.com.example\" />\r\n            </intent-filter>\r\n        </receiver>\r\n\r\n        <meta-data\r\n            android:name=\"com.google.android.geo.API_KEY\"\r\n            android:value=\"REMOVED\" />\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.version\"\r\n            android:value=\"@integer/google_play_services_version\" />\r\n        <meta-data\r\n            android:name=\"com.google.android.gms.ads.APPLICATION_ID\"\r\n            android:value=\"REMOVED\" />\r\n\r\n        <uses-library\r\n            android:name=\"org.apache.http.legacy\"\r\n            android:required=\"true\" />\r\n\r\n        <activity\r\n            android:name=\"com.google.firebase.auth.internal.FederatedSignInActivity\"\r\n            android:excludeFromRecents=\"true\"\r\n            android:exported=\"true\"\r\n            android:launchMode=\"singleTask\"\r\n            android:permission=\"com.google.firebase.auth.api.gms.permission.LAUNCH_FEDERATED_SIGN_IN\"\r\n            android:theme=\"@android:style/Theme.Translucent.NoTitleBar\"\r\n            tools:replace=\"android:launchMode\" />\r\n\r\n        <service\r\n            android:name=\"com.google.firebase.components.ComponentDiscoveryService\"\r\n            android:exported=\"false\" >\r\n            <meta-data\r\n                android:name=\"com.google.firebase.components:com.google.firebase.auth.FirebaseAuthRegistrar\"\r\n                android:value=\"com.google.firebase.components.ComponentRegistrar\" />\r\n            <meta-data\r\n                android:name=\"com.google.firebase.components:com.google.firebase.firestore.FirestoreRegistrar\"\r\n                android:value=\"com.google.firebase.components.ComponentRegistrar\" />\r\n        </service>\r\n\r\n        <provider\r\n            android:name=\"com.google.firebase.provider.FirebaseInitProvider\"\r\n            android:authorities=\"com.example.firebaseinitprovider\"\r\n            android:exported=\"false\"\r\n            android:initOrder=\"100\" />\r\n        <provider\r\n            android:name=\"androidx.lifecycle.ProcessLifecycleOwnerInitializer\"\r\n            android:authorities=\"com.example.lifecycle-process\"\r\n            android:exported=\"false\"\r\n            android:multiprocess=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.facebook.sdk.ApplicationId\"\r\n            android:value=\"@string/facebook_application_id\" />\r\n\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.KickoffActivity\"\r\n            android:exported=\"false\"\r\n            android:label=\"\"\r\n            android:theme=\"@style/FirebaseUI.Transparent\" />\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.ui.idp.SingleSignInActivity\"\r\n            android:exported=\"false\"\r\n            android:label=\"\"\r\n            android:theme=\"@style/FirebaseUI.Transparent\" />\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.ui.credentials.CredentialSaveActivity\"\r\n            android:exported=\"false\"\r\n            android:label=\"\"\r\n            android:theme=\"@style/FirebaseUI.Transparent\" />\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.ui.email.RecoverPasswordActivity\"\r\n            android:exported=\"false\"\r\n            android:label=\"@string/fui_title_recover_password_activity\"\r\n            android:windowSoftInputMode=\"adjustResize\" />\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.ui.email.EmailActivity\"\r\n            android:exported=\"false\"\r\n            android:label=\"@string/fui_sign_in_default\"\r\n            android:windowSoftInputMode=\"adjustResize\" />\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.ui.phone.PhoneActivity\"\r\n            android:exported=\"false\"\r\n            android:label=\"@string/fui_sign_in_with_phone_number\"\r\n            android:windowSoftInputMode=\"adjustResize|stateAlwaysVisible\" />\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.ui.idp.WelcomeBackIdpPrompt\"\r\n            android:exported=\"false\"\r\n            android:label=\"@string/fui_title_welcome_back_idp_prompt\"\r\n            android:windowSoftInputMode=\"adjustResize\" />\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.ui.email.WelcomeBackPasswordPrompt\"\r\n            android:exported=\"false\"\r\n            android:label=\"@string/fui_title_welcome_back_password_prompt\"\r\n            android:windowSoftInputMode=\"adjustResize\" />\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.ui.email.WelcomeBackEmailLinkPrompt\"\r\n            android:exported=\"false\"\r\n            android:label=\"@string/fui_title_welcome_back_password_prompt\"\r\n            android:windowSoftInputMode=\"adjustResize\" />\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.ui.email.EmailLinkCatcherActivity\"\r\n            android:exported=\"false\"\r\n            android:label=\"\"\r\n            android:theme=\"@style/FirebaseUI.Transparent\"\r\n            android:windowSoftInputMode=\"adjustResize\" />\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.ui.email.EmailLinkErrorRecoveryActivity\"\r\n            android:exported=\"false\"\r\n            android:label=\"@string/fui_sign_in_default\"\r\n            android:windowSoftInputMode=\"adjustResize\" />\r\n        <activity\r\n            android:name=\"com.firebase.ui.auth.ui.idp.AuthMethodPickerActivity\"\r\n            android:exported=\"false\"\r\n            android:label=\"@string/fui_default_toolbar_title\" />\r\n        <activity\r\n            android:name=\"com.facebook.FacebookActivity\"\r\n            android:configChanges=\"keyboard|keyboardHidden|screenLayout|screenSize|orientation\"\r\n            android:label=\"@string/app_name\"\r\n            tools:ignore=\"MissingRegistered\" />\r\n        <activity\r\n            android:name=\"com.facebook.CustomTabActivity\"\r\n            android:exported=\"true\"\r\n            tools:ignore=\"MissingRegistered\" >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.VIEW\" />\r\n\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <category android:name=\"android.intent.category.BROWSABLE\" />\r\n\r\n                <data android:scheme=\"@string/facebook_login_protocol_scheme\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <provider\r\n            android:name=\"com.firebase.ui.auth.data.client.AuthUiInitProvider\"\r\n            android:authorities=\"com.example.authuiinitprovider\"\r\n            android:exported=\"false\"\r\n            android:initOrder=\"90\" /> <!-- Include the AdActivity and InAppPurchaseActivity configChanges and themes. -->\r\n        <activity\r\n            android:name=\"com.google.android.gms.ads.AdActivity\"\r\n            android:configChanges=\"keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize\"\r\n            android:exported=\"false\"\r\n            android:theme=\"@android:style/Theme.Translucent\" />\r\n\r\n        <provider\r\n            android:name=\"com.google.android.gms.ads.MobileAdsInitProvider\"\r\n            android:authorities=\"com.example.mobileadsinitprovider\"\r\n            android:exported=\"false\"\r\n            android:initOrder=\"100\" />\r\n\r\n        <activity\r\n            android:name=\"com.google.android.gms.auth.api.signin.internal.SignInHubActivity\"\r\n            android:excludeFromRecents=\"true\"\r\n            android:exported=\"false\"\r\n            android:theme=\"@android:style/Theme.Translucent.NoTitleBar\" />\r\n        <!--\r\n            Service handling Google Sign-In user revocation. For apps that do not integrate with\r\n            Google Sign-In, this service will never be started.\r\n        -->\r\n        <service\r\n            android:name=\"com.google.android.gms.auth.api.signin.RevocationBoundService\"\r\n            android:exported=\"true\"\r\n            android:permission=\"com.google.android.gms.auth.api.signin.permission.REVOCATION_NOTIFICATION\" />\r\n\r\n        <activity\r\n            android:name=\"com.google.android.gms.common.api.GoogleApiActivity\"\r\n            android:exported=\"false\"\r\n            android:theme=\"@android:style/Theme.Translucent.NoTitleBar\" />\r\n    </application>\r\n\r\n</manifest>\r\n```\r\n\r\n</details>"},{"Id":"8996586776","Type":"IssuesEvent","CreatedAt":"2019-02-02T02:36:16","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2686","RelatedDescription":"Opened issue \"Remove glob use from create-vsix.csproj\" (#2686) at xamarin/xamarin-android","RelatedBody":"Consider the Visual Studio 2019 Preview 3 `Xamarin.Android.Sdk.*.vsix` contents.  It includes:\r\n\r\n```\r\n$ unzip -l Xamarin.Android.Sdk.9.1.103.12.vsix | grep Microsoft.Build.Tasks.Core.resources.dll\r\n   142336  01-25-2019 17:28   $MSBuild/Xamarin/Android/cs/Microsoft.Build.Tasks.Core.resources.dll\r\n   147456  01-25-2019 17:28   $MSBuild/Xamarin/Android/de/Microsoft.Build.Tasks.Core.resources.dll\r\n   134144  01-25-2019 17:28   $MSBuild/Xamarin/Android/en/Microsoft.Build.Tasks.Core.resources.dll\r\n   144384  01-25-2019 17:28   $MSBuild/Xamarin/Android/es/Microsoft.Build.Tasks.Core.resources.dll\r\n   147456  01-25-2019 17:28   $MSBuild/Xamarin/Android/fr/Microsoft.Build.Tasks.Core.resources.dll\r\n   145408  01-25-2019 17:28   $MSBuild/Xamarin/Android/it/Microsoft.Build.Tasks.Core.resources.dll\r\n   163840  01-25-2019 17:28   $MSBuild/Xamarin/Android/ja/Microsoft.Build.Tasks.Core.resources.dll\r\n   150528  01-25-2019 17:28   $MSBuild/Xamarin/Android/ko/Microsoft.Build.Tasks.Core.resources.dll\r\n   147968  01-25-2019 17:28   $MSBuild/Xamarin/Android/pl/Microsoft.Build.Tasks.Core.resources.dll\r\n   142848  01-25-2019 17:28   $MSBuild/Xamarin/Android/pt-BR/Microsoft.Build.Tasks.Core.resources.dll\r\n   185344  01-25-2019 17:28   $MSBuild/Xamarin/Android/ru/Microsoft.Build.Tasks.Core.resources.dll\r\n   141312  01-25-2019 17:28   $MSBuild/Xamarin/Android/tr/Microsoft.Build.Tasks.Core.resources.dll\r\n   130048  01-25-2019 17:28   $MSBuild/Xamarin/Android/zh-Hans/Microsoft.Build.Tasks.Core.resources.dll\r\n   128000  01-25-2019 17:28   $MSBuild/Xamarin/Android/zh-Hant/Microsoft.Build.Tasks.Core.resources.dll\r\n```\r\n\r\nThis is bonkers.\r\n\r\nThe *cause* is because `build-tools/create-vsix` just \"slurps up\" everything in the installation directory: https://github.com/xamarin/xamarin-android/blob/32cbc8df40b971b76e7b9fe2e1dfcf637f2a5971/build-tools/create-vsix/create-vsix.targets#L51\r\n\r\nIn retrospect, this might not have been the best idea. :-/\r\n\r\nWe need to \"improve\" things so that instead of grabbing *everything*, `create-vsix.csproj` instead includes a *specific list* of files, so that we don't inadvertently copy \"garbage\" into the installer.\r\n\r\nBonus: we need a macOS `.pkg` installer for the OSS repo, too.  It should use the same infrastructure. :-D"},{"Id":"8996496084","Type":"IssuesEvent","CreatedAt":"2019-02-02T01:51:46","Actor":"EmilAlipiev","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2673","RelatedDescription":"Closed issue \"VS2019- Missing Android NDK toolchains directory '\\toolchains'. Please install the Android NDK.\" (#2673) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. install vs 2019, Sdk and ndk\r\n2. try to build and deploy any existing project\r\n3. \r\n\r\n \r\n\r\n### Expected Behavior\r\n\r\nIt works\r\n\r\n### Actual Behavior\r\n\r\nfails with error message\r\n```\r\n\r\n2>   at System.Threading.Tasks.Task.Execute()\r\n2>---> (Inner Exception #0) Java.Interop.Tools.Diagnostics.XamarinAndroidException: error XA5101: Missing Android NDK toolchains directory '\\toolchains'. Please install the Android NDK.\r\n2>   at Xamarin.Android.Tasks.NdkUtil.GetNdkToolchainDirectories(String toolchainsPath, AndroidTargetArch arch)\r\n2>   at Xamarin.Android.Tasks.NdkUtil.GetNdkToolchainPath(String androidNdkPath, AndroidTargetArch arch)\r\n2>   at Xamarin.Android.Tasks.NdkUtil.GetNdkTool(String androidNdkPath, AndroidTargetArch arch, String tool)\r\n2>   at Xamarin.Android.Tasks.NdkUtil.GetNdkToolPrefix(String androidNdkPath, AndroidTargetArch arch)\r\n2>   at Xamarin.Android.Tasks.Aot.<GetAotConfigs>d__73.MoveNext()\r\n```\r\n\r\nOnly possible fix is to add this line in Drod.csproj file\r\n\r\n`    <AndroidNdkDirectory> ndk path</AndroidNdkDirectory>`\r\n \r\nit should automatically find it without amending each Drod.csproj file for every project\r\n "},{"Id":"8996411813","Type":"IssuesEvent","CreatedAt":"2019-02-02T01:14:53","Actor":"jonpryor","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2685","RelatedDescription":"Opened issue \"CompiletoDalvik doesn't like non-ASCII characters on Windows\" (#2685) at xamarin/xamarin-android","RelatedBody":"See also: https://developercommunity.visualstudio.com/content/problem/437807/v-isual-studio-2019-preview-20.html\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a new project containing non-ASCII characters, *on Windows*.\r\n2. Install the project to an Android target\r\n\r\n-- or --\r\n\r\n1. Download [Scratch.Ümläüts-Win.zip](https://github.com/xamarin/xamarin-android/files/2823843/Scratch.Umlauts-Win.zip)\r\n2. Extract `Scratch.Ümläüts-Win.zip` using Windows Explorer\r\n3. Build `Scratch.Ümläüts.csproj`:\r\n\r\n        cd Scratch.Ümläüts\\Scratch.Ümläüts\r\n        msbuild /v:diag Scratch.Ümläüts.csproj /t:SignAndroidPackage > b.txt\r\n\r\n(and because *file encodings within `.zip` files are still a problem in **2019***, here's a Unix-formatted `.zip` file with the same contents, but extractable from Unix/WSL `unzip` but *not* Windows Explorer: [Scratch.Ümläüts-unix.zip](https://github.com/xamarin/xamarin-android/files/2823842/Scratch.Umlauts-unix.zip).)\r\n\r\n### Expected Behavior\r\n\r\nIt installs!\r\n\r\n### Actual Behavior\r\n\r\nIt doesn't. :-(\r\n\r\n### Version Information\r\n\r\nVisual Studio 2019 Preview 2.\r\n\r\n### Log File\r\n\r\n```\r\n1>Task \"CompileToDalvik\" (TaskId:245)\r\n1>  Task Parameter:DxJarPath=C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\25.0.3\\\\lib\\dx.jar (TaskId:245)\r\n1>  Task Parameter:DxExtraArguments=--dex --no-strict (TaskId:245)\r\n1>  Task Parameter:JavaToolPath=C:\\Program Files\\Android\\jdk\\microsoft_dist_openjdk_1.8.0.9\\bin (TaskId:245)\r\n1>  Task Parameter:JavaMaximumHeapSize=1G (TaskId:245)\r\n1>  Task Parameter:ClassesOutputDirectory=obj\\Debug\\90\\android\\bin\\classes (TaskId:245)\r\n1>  Task Parameter:MultiDexEnabled=False (TaskId:245)\r\n1>  Task Parameter:MultiDexMainDexListFile=obj\\Debug\\90\\multidex.keep (TaskId:245)\r\n1>  Task Parameter:JavaLibrariesToCompile=C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v9.0\\mono.android.jar (TaskId:245)\r\n1>    processing ClassesOutputDirectory... (TaskId:245)\r\n1>      C:\\Temp\\Scratch.Ümläüts\\Scratch.Ümläüts\\obj\\Debug\\90\\android\\bin\\classes.zip (TaskId:245)\r\n1>      C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v9.0\\mono.android.jar (TaskId:245)\r\n1>  C:\\Program Files\\Android\\jdk\\microsoft_dist_openjdk_1.8.0.9\\bin\\java.exe -Xmx1G -jar \"C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\25.0.3\\\\lib\\dx.jar\" --dex --no-strict --input-list=\"C:\\Users\\Windows User\\AppData\\Local\\Temp\\tmp6A5B.tmp\" --output obj\\Debug\\90\\android\\bin  (TaskId:245)\r\n1>   (TaskId:245)\r\n1>  UNEXPECTED TOP-LEVEL EXCEPTION: (TaskId:245)\r\n1>  java.io.FileNotFoundException: C:\\Temp\\Scratch.├£ml├ñ├╝ts\\Scratch.├£ml├ñ├╝ts\\obj\\Debug\\90\\android\\bin\\classes.zip (The system cannot find the path specified) (TaskId:245)\r\n1>  \tat java.util.zip.ZipFile.open(Native Method) (TaskId:245)\r\n1>  \tat java.util.zip.ZipFile.<init>(ZipFile.java:219) (TaskId:245)\r\n1>  \tat java.util.zip.ZipFile.<init>(ZipFile.java:149) (TaskId:245)\r\n1>  \tat java.util.zip.ZipFile.<init>(ZipFile.java:163) (TaskId:245)\r\n1>  \tat com.android.dx.cf.direct.ClassPathOpener.processArchive(ClassPathOpener.java:244) (TaskId:245)\r\n1>  \tat com.android.dx.cf.direct.ClassPathOpener.processOne(ClassPathOpener.java:166) (TaskId:245)\r\n1>  \tat com.android.dx.cf.direct.ClassPathOpener.process(ClassPathOpener.java:144) (TaskId:245)\r\n1>  \tat com.android.dx.command.dexer.Main.processOne(Main.java:677) (TaskId:245)\r\n1>  \tat com.android.dx.command.dexer.Main.processAllFiles(Main.java:574) (TaskId:245)\r\n1>  \tat com.android.dx.command.dexer.Main.runMonoDex(Main.java:311) (TaskId:245)\r\n1>  \tat com.android.dx.command.dexer.Main.run(Main.java:277) (TaskId:245)\r\n1>  \tat com.android.dx.command.dexer.Main.main(Main.java:245) (TaskId:245)\r\n1>  \tat com.android.dx.command.Main.main(Main.java:106) (TaskId:245)\r\n1>  1 error; aborting (TaskId:245)\r\n1>C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Preview\\MSBuild\\Xamarin\\Android\\Xamarin.Android.Common.targets(2668,3): error MSB6006: \"java.exe\" exited with code 1.\r\n1>Done executing task \"CompileToDalvik\" -- FAILED. (TaskId:245)\r\n1>Done building target \"_CompileToDalvikWithDx\" in project \"Scratch.Ümläüts.csproj\" -- FAILED.: (TargetId:150)\r\n```\r\n\r\n### Additional Information\r\n\r\nThis builds as expected/desired on d15-9/Xamarin.Android 9.1.0:\r\n\r\n```\r\nTask \"CompileToDalvik\" (TaskId:211)\r\n  Task Parameter:DxJarPath=C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\25.0.3\\\\lib\\dx.jar (TaskId:211)\r\n  Task Parameter:DxExtraArguments=--dex --no-strict (TaskId:211)\r\n  Task Parameter:JavaToolPath=C:\\Program Files\\Java\\jdk1.8.0_152\\\\bin (TaskId:211)\r\n  Task Parameter:JavaMaximumHeapSize=1G (TaskId:211)\r\n  Task Parameter:ClassesOutputDirectory=obj\\Debug\\81\\android\\bin\\classes (TaskId:211)\r\n  Task Parameter:MultiDexEnabled=False (TaskId:211)\r\n  Task Parameter:MultiDexMainDexListFile=obj\\Debug\\81\\multidex.keep (TaskId:211)\r\n  Task Parameter:JavaLibrariesToCompile=C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v8.1\\mono.android.jar (TaskId:211)\r\n  CompileToDalvik (TaskId:211)\r\n    JavaOptions:  (TaskId:211)\r\n    JavaMaximumHeapSize: 1G (TaskId:211)\r\n    ClassesOutputDirectory: obj\\Debug\\81\\android\\bin\\classes (TaskId:211)\r\n    JavaToolPath: C:\\Program Files\\Java\\jdk1.8.0_152\\\\bin (TaskId:211)\r\n    DxJarPath: C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\25.0.3\\\\lib\\dx.jar (TaskId:211)\r\n    ToolExe: java.exe (TaskId:211)\r\n    ToolPath:  (TaskId:211)\r\n    UseDx: False (TaskId:211)\r\n    DxExtraArguments: --dex --no-strict (TaskId:211)\r\n    MultiDexEnabled: False (TaskId:211)\r\n    MultiDexMainDexListFile: obj\\Debug\\81\\multidex.keep (TaskId:211)\r\n    JavaLibrariesToCompile: (TaskId:211)\r\n      C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v8.1\\mono.android.jar (TaskId:211)\r\n    AlternativeJarFiles: (TaskId:211)\r\n    processing ClassesOutputDirectory... (TaskId:211)\r\n  C:\\Program Files\\Java\\jdk1.8.0_152\\\\bin\\java.exe -Xmx1G -jar \"C:\\Program Files (x86)\\Android\\android-sdk\\build-tools\\25.0.3\\\\lib\\dx.jar\" --dex --no-strict --output obj\\Debug\\81\\android\\bin \"C:\\Users\\jopryo\\Downloads\\Scratch.�ml��ts\\Scratch.�ml��ts\\obj\\Debug\\81\\android\\bin\\classes.zip\" \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\Common7\\IDE\\ReferenceAssemblies\\Microsoft\\Framework\\MonoAndroid\\v8.1\\mono.android.jar\"  (TaskId:211)\r\n    DexOutputs:  (TaskId:211)\r\n      obj\\Debug\\81\\android\\bin\\classes.dex (TaskId:211)\r\nDone executing task \"CompileToDalvik\". (TaskId:211)\r\n```\r\n\r\n(Note \"garbage characters\" in the log file, because *file encoding is hard, y'all*!)\r\n\r\nThis was probably broken by commit https://github.com/xamarin/xamarin-android/commit/8571a7f696e864a791f726dcd2fb856145a53ee1, which introduced use of `--input-list` via a \"temporary file\" `inputListFile` which contains the `.jar` files to process instead of providing them on the command-line.\r\n\r\nMy *suspicion* is that the fix will need to take a page out of https://github.com/xamarin/monodroid/commit/1c5650552d31e85df5a58cefbbd448691a186f04:\r\n\r\n1. Ensure that `inputListFile` is UTF-8 (already done)\r\n2. Ensure that filenames within `inputListFile` use the correct normalization form (*perhaps* already done?)\r\n3. Launch the JVM with `-Dfile.encoding=UTF8` so that it (hopefully) reads files as UTF-8 and *not \"**ANSI**\"*.\r\n"},{"Id":"8995947501","Type":"IssuesEvent","CreatedAt":"2019-02-01T22:50:26","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2684","RelatedDescription":"Opened issue \"Mono.Android-Tests crashes when r8 is enabled on Android devices versioned 7.1.1 and lower\" (#2684) at xamarin/xamarin-android","RelatedBody":"### Steps to Reproduce\r\n\r\n1. Install Mono.Android-Tests in Release mode on an Android device running v7.1.1 or lower.\r\n2. Run the tests via instrumentation, and a crash occurs on startup:\r\n\r\n```\r\n02-01 14:39:30.427 I/ActivityManager( 4839): Start proc 16220:Mono.Android_Tests/u0a7060 for added application Mono.Android_Tests\r\n02-01 14:39:30.495 W/monodroid(16220): Using runtime path: /data/app/Mono.Android_Tests-1/lib/arm64\r\n02-01 14:39:30.495 W/monodroid(16220): Trying to load sgen from: /data/app/Mono.Android_Tests-1/lib/arm64/libmonosgen-2.0.so\r\n02-01 14:39:30.541 W/monodroid-gc(16220): GREF GC Threshold: 46080\r\n02-01 14:39:30.922 E/mono    (16220): \r\n02-01 14:39:30.922 E/mono    (16220): Unhandled Exception:\r\n02-01 14:39:30.922 E/mono    (16220): Java.Lang.LinkageError: no non-static method \"Landroid/runtime/UncaughtExceptionHandler;.<init>()V\"\r\n02-01 14:39:30.922 E/mono    (16220):   at Java.Interop.JniEnvironment+InstanceMethods.GetMethodID (Java.Interop.JniObjectReference type, System.String name, System.String signature) [0x0005b] in <7d7bcc9ee9cc460db8abcdb9a9622733>:0 \r\n02-01 14:39:30.922 E/mono    (16220):   at Java.Interop.JniType.GetConstructor (System.String signature) [0x0000c] in <7d7bcc9ee9cc460db8abcdb9a9622733>:0 \r\n02-01 14:39:30.922 E/mono    (16220):   at Java.Interop.JniPeerMembers+JniInstanceMethods.GetConstructor (System.String signature) [0x00035] in <7d7bcc9ee9cc460db8abcdb9a9622733>:0 \r\n02-01 14:39:30.922 E/mono    (16220):   at Java.Interop.JniPeerMembers+JniInstanceMethods.FinishCreateInstance (System.String constructorSignature, Java.Interop.IJavaPeerable self, Java.Interop.JniArgumentValue* parameters) [0x00036] in <7d7bcc9ee9cc460db8abcdb9a9622733>:0 \r\n02-01 14:39:30.922 E/mono    (16220):   at Java.Lang.Object..ctor () [0x00054] in <d77389624c8c4948a12589c4bd4500eb>:0 \r\n02-01 14:39:30.922 E/mono    (16220):   at Android.Runtime.UncaughtExceptionHandler..ctor (Java.Lang.Thread+IUncaughtExceptionHandler defaultHandler) [0x00000] in <d77389624c8c4948a12589c4bd4500eb>:0 \r\n02-01 14:39:30.922 E/mono    (16220):   at Android.Runtime.JNIEnv.Initialize (Android.Runtime.JnienvInitializeArgs* args) [0x00202] in <d77389624c8c4948a12589c4bd4500eb>:0 \r\n02-01 14:39:30.922 E/mono    (16220):   --- End of managed Java.Lang.LinkageError stack trace ---\r\n02-01 14:39:30.922 E/mono    (16220): java.lang.NoSuchMethodError: no non-static method \"Landroid/runtime/UncaughtExceptionHandler;.<init>()V\"\r\n02-01 14:39:30.922 E/mono    (16220): \tat mono.android.Runtime.init(Native Method)\r\n02-01 14:39:30.922 E/mono    (16220): \tat mono.MonoPackageManager.LoadApplication(:21)\r\n02-01 14:39:30.922 E/mono    (16220): \tat mono.MonoRuntimeProvider.attachInfo(:1)\r\n02-01 14:39:30.922 E/mono    (16220): \tat android.app.ActivityThread.installProvider(ActivityThread.java:5853)\r\n02-01 14:39:30.922 E/mono    (16220): \tat android.app.ActivityThread.installContentProviders(ActivityThread.java:5445)\r\n02-01 14:39:30.922 E/mono    (16220): \tat android.app.ActivityThread.handleBindApplication(ActivityThread.java:5384)\r\n02-01 14:39:30.922 E/mono    (16220): \tat android.app.ActivityThread.-wrap2(ActivityThread.java)\r\n02-01 14:39:30.922 E/mono    (16220): \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1545)\r\n02-01 14:39:30.922 E/mono    (16220): \tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n02-01 14:39:30.922 E/mono    (16220): \tat android.os.Looper.loop(Looper.java:154)\r\n02-01 14:39:30.922 E/mono    (16220): \tat android.app.ActivityThread.main(ActivityThread.java:6119)\r\n02-01 14:39:30.922 E/mono    (16220): \tat java.lang.reflect.Method.invoke(Native Method)\r\n02-01 14:39:30.922 E/mono    (16220): \tat com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:886)\r\n02-01 14:39:30.922 E/mono    (16220): \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:776)\r\n```\r\n\r\n<!--\r\nIf you have a repro project, you may drag & drop the .zip/etc. onto the issue editor to attach it.\r\n-->\r\n\r\n\r\n### Version Information\r\nhttps://gist.github.com/pjcollins/575235c0ed394b425ec79ae5f06886cb\r\n<!--\r\n1. On macOS and within Visual Studio, select Visual Studio > About Visual Studio, then click the Show Details button, then click the Copy Information button.\r\n\r\n2. Paste below this comment block.\r\n-->\r\n\r\n### Log File\r\nhttp://xqa.blob.core.windows.net/gist/log-5aec55044cb9416eb9660ec10d983751.txt\r\n[binlog.zip](https://github.com/xamarin/xamarin-android/files/2823594/binlog.zip)\r\n\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"},{"Id":"8994674809","Type":"IssuesEvent","CreatedAt":"2019-02-01T18:37:12","Actor":"pjcollins","Repository":"xamarin/xamarin-android","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-android/issues/2683","RelatedDescription":"Opened issue \"Mono.Android-Tests is failing to build with AndroidGenerateJniMarshalMethods enabled\" (#2683) at xamarin/xamarin-android","RelatedBody":"I'm no longer able to build the Mono.Android-Tests suite against a XA system install, as a result of the changes in https://github.com/xamarin/xamarin-android/pull/2153.\r\n\r\n### Steps to Reproduce\r\n\r\n1. On macOS, install a recent .pkg from master.\r\n2. Get a clean checkout of xamarin-android.\r\n3. `msbuild /t:SignAndroidPackage src/Mono.Android/Test/Mono.Android-Tests.csproj`\r\n4. The build fails on the `_CreateJavaInteropDllConfigs` target because I don't have XA build artifacts in my checkout:\r\n```\r\n(_CreateJavaInteropDllConfigs target) -> \r\n  /Users/peter/source/xamarin-android/build-tools/scripts/JavaInteropDllConfigs.targets(11,5): error MSB3491: Could not write lines to file \"/Users/peter/source/xamarin-android/bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/Java.Interop.dll.config\". Could not find a part of the path \"/Users/peter/source/xamarin-android/bin/Debug/lib/xamarin.android/xbuild/Xamarin/Android/Java.Interop.dll.config\". [/Users/peter/source/xamarin-android/src/Mono.Android/Test/Mono.Android-Tests.csproj]\r\n```\r\nNow, I can conditionally set `/p:XAInstallPrefix=/Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/` on macOS, but msbuild then runs into a permission issue when trying to modify the file:\r\n```\r\n(_CreateJavaInteropDllConfigs target) -> \r\n  /Users/peter/source/xamarin-android/build-tools/scripts/JavaInteropDllConfigs.targets(11,5): error MSB3491: Could not write lines to file \"/Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild/Xamarin/Android/Java.Interop.dll.config\". Access to the path \"/Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild/Xamarin/Android/Java.Interop.dll.config\" is denied. [/Users/peter/source/xamarin-android/src/Mono.Android/Test/Mono.Android-Tests.csproj]\r\n```\r\n\r\nFinally, the [`_CreateJavaInteropDllConfigs`](https://github.com/xamarin/xamarin-android/blob/master/build-tools/scripts/JavaInteropDllConfigs.targets#L5) target can't work on Windows as designed (though I don't believe any of this is yet supported on Windows anyway) because `xbuild` doesn't exist in the XA install path on Windows. The relevant assemblies and configuration files would be found in a path similar to the one shown below:\r\n\r\n```\r\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Enterprise\\MSBuild\\Xamarin\\Android\\Java.Interop.dll\r\n```\r\n\r\n\r\n### Log File\r\nhttps://gist.githubusercontent.com/pjcollins/31101a7f7b4badeaec79bac976d47533/raw/9633a1077e8865c80d606b061a4122a53438e242/gistfile1.txt\r\n<!--\r\n1. On macOS and within Visual Studio:\r\n    a. Click **Tools** > **SDK Command Prompt**.\r\n    b. Within the launched `Terminal.app` window, run:\r\n\r\n            adb logcat -d | pbcopy\r\n\r\n2. Paste below this comment block\r\n-->\r\n\r\n\r\n\r\n<!--\r\nSwitch to the \"Preview\" tab to ensure your issue renders correctly.\r\n\r\nPlease add an appropriate \"Area:\" label in the Labels section.\r\n-->"}],"ResultType":"GitHubEvent"},"Forms":{"Events":[{"Id":"8998968041","Type":"IssuesEvent","CreatedAt":"2019-02-03T04:04:43","Actor":"michaeldimoudis","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5117","RelatedDescription":"Opened issue \"iOS: Listview item loses binding, does not respond to tapped event, when ObservableCollection item is moved\" (#5117) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\n\r\nWhen a ListView item is reordered, that reordered item no longer fires ItemTapped events. Issue is in iOS only, works in Android.\r\n\r\nIt works in 3.4.0.1008975. It does not work in 3.4.0.1009999, and still does not work in 3.5.0.94564-pre3 (I did not try 4.0.0-pre's)\r\n\r\nTo test, slide to activate context menus, and tap up/down icon to move item up or down.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Minimal repro is available here https://github.com/michaeldimoudis/listview-move-repro\r\n2. Once built and running, slide to activate context menus, and tap up/down icon to move item up or down.\r\n3. You can no longer tap on that item to fire ItemTapped events.\r\n\r\n### Expected Behavior\r\nWhen moving an item up or down in a ListView, you should still be able to tap on that item and it should fire the ItemTapped event.\r\n\r\n### Actual Behavior\r\nWhen moving an item up or down in a ListView, you can no longer tap on that item to fire the ItemTapped event.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: 3.4.0.1009999\r\n- Last known good version: 3.4.0.1008975\r\n- IDE: VS for Mac\r\n- Platform Target Frameworks:\r\n  - iOS: 12.1\r\n- Nuget Packages: Only Xamarin Forms\r\n- Affected Devices: iOS devices only\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/michaeldimoudis/listview-move-repro\r\n"},{"Id":"8997825644","Type":"IssuesEvent","CreatedAt":"2019-02-02T16:10:42","Actor":"akihikodaki","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5100","RelatedDescription":"Reopened issue \"Event handler lookup inconsistency of XamlC, XamlLoader and WPF\" (#5100) at xamarin/Xamarin.Forms","RelatedBody":"### Description\r\nFor example, consider the following case:\r\n* `C` is a class.\r\n* `D` is a class inheriting `C`.\r\n* There is a XAML with `C` as `/@x:Class`.\r\n\r\nIf you compile the XAML and calls `D.InitializeComponent`, it searches `C` for an event handler ignoring inherited methods. However, if you load the XAML on `D` with `Xamarin.Forms.Xaml.Internals.XamlLoader`, it searches `D` for an event handler, ignoring inherited methods, too.\r\n\r\nIf I read the source code correctly, WPF's XAML loader seems to search the given value's type and its superclasses for an event handler. (So it searches both of `C` and `D` in the example.) However, I'm not sure if it is desirable because it may find a private method in a superclass.\r\n\r\nI hope it behaves like `System.Reflection.BindingFlags.FlattenHierarchy` rooting the class specified by `x:Class`, but I think it depends on your design decision.\r\n\r\n### Steps to Reproduce\r\n\r\nCompare the behavior of XamlC and XamlLoader in the case presented in the description.\r\n\r\n### Expected Behavior\r\n\r\nXamlC and XamlLoader behaves in the same manner.\r\n\r\n### Actual Behavior\r\n\r\nSee the description.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: `3.4.0-sr2`\r\n- Last known good version: N/A\r\n- IDE: Visual Studio Code\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  N/A <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: N/A <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  N/A <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: N/A <!-- if applicable -->\r\n- Nuget Packages: N/A\r\n- Affected Devices: Mono on GNU/Linux\r\n\r\n### Screenshots\r\n\r\nN/A\r\n\r\n### Reproduction Link\r\n\r\nhttps://github.com/akihikodaki/Xamarin.Forms/tree/gh5100"},{"Id":"8997787866","Type":"IssuesEvent","CreatedAt":"2019-02-02T15:50:55","Actor":"akihikodaki","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5100","RelatedDescription":"Closed issue \"Event handler lookup inconsistency of XamlC, XamlLoader and WPF\" (#5100) at xamarin/Xamarin.Forms","RelatedBody":"\r\n### Description\r\nFor example, consider the following case:\r\n* `C` is a class.\r\n* `D` is a class inheriting `C`.\r\n* There is a XAML with `C` as `/@x:Class`.\r\n\r\nIf you compile the XAML and calls `D.InitializeComponent`, it searches `C` for an event handler ignoring inherited methods. However, if you load the XAML on `D` with `Xamarin.Forms.Xaml.Internals.XamlLoader`, it searches `D` for an event handler, ignoring inherited methods, too.\r\n\r\nIf I read the source code correctly, WPF's XAML loader seems to search the given value's type and its superclasses for an event handler. (So it searches both of `C` and `D` in the example.) However, I'm not sure if it is desirable because it may find a private method in a superclass.\r\n\r\nI hope it behaves like `System.Reflection.BindingFlags.FlattenHierarchy` rooting the class specified by `x:Class`, but I think it depends on your design decision.\r\n\r\n### Steps to Reproduce\r\n\r\nCompare the behavior of XamlC and XamlLoader in the case presented in the description.\r\n\r\n### Expected Behavior\r\n\r\nXamlC and XamlLoader behaves in the same manner.\r\n\r\n### Actual Behavior\r\n\r\nSee the description.\r\n\r\n### Basic Information\r\n\r\n- Version with issue: `3.4.0-sr2`\r\n- Last known good version: N/A\r\n- IDE: Visual Studio Code\r\n- Platform Target Frameworks: <!-- All that apply -->\r\n  - iOS:  N/A <!-- The version of the iOS SDK you are compiling against, e.g. 11.1 -->\r\n  - Android: N/A <!-- The version of the Android SDK you are compiling against, e.g. 7.1 --> \r\n  - UWP:  N/A <!-- The version of the UWP SDK you are compiling against, e.g. 16299 --> \r\n- Android Support Library Version: N/A <!-- if applicable -->\r\n- Nuget Packages: N/A\r\n- Affected Devices: Mono on GNU/Linux\r\n\r\n### Screenshots\r\n\r\nN/A\r\n\r\n### Reproduction Link\r\n\r\nN/A"},{"Id":"8997486953","Type":"IssuesEvent","CreatedAt":"2019-02-02T12:51:15","Actor":"pikausp","Repository":"xamarin/Xamarin.Forms","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/Xamarin.Forms/issues/5116","RelatedDescription":"Opened issue \"[Enhancement] NavigationPage level animation\" (#5116) at xamarin/Xamarin.Forms","RelatedBody":"## Summary\r\nSometimes it is desired to turn on/off navigation animations for a `NavigationPage` as a whole. The proposed changes still allow to tweak the animation behavior when calling `INavigation` API manually by passing the desired value of `animated`.\r\n\r\n## API Changes\r\n\r\n`NavigationPage` would define new `bool` property `Animated` with the default value `true` (so the current behavior does not change).\r\n\r\n`NavigationRequestedEventArgs` newly defines `Animated` as `bool?` instead of the current `bool`. Thanks to this we know whether there was an explicit request to animate/not animate.\r\n\r\nChanges to the renderers would look something like this\r\n\r\n    protected override Task<bool> OnPushAsync( Page view, bool? animated ) {\r\n        return base.OnPushAsync(view, animated ?? Element.Animated );\r\n    }\r\n\r\n    protected override Task<bool> OnPopViewAsync( Page page, bool? animated ) {\r\n        return base.OnPopViewAsync(page, animated ?? Element.Animated);\r\n    }\r\n\r\n    protected override Task<bool> OnPopToRootAsync( Page page, bool? animated ) {\r\n        return base.OnPopToRootAsync(page, animated ?? Element.Animated );\r\n    }\r\n\r\n## Intended Use Case\r\nTurning off animations for pop actions executed via back buttons (navbar/hw).\r\n\r\nA typical scenario would be when your root page has `HasNavigationBar` set to `false`. When you push a page that has navigation bar and then pop back to the root, the navigation bar is hidden after the animation is completed. This creates a rather ugly artifact on the screen.\r\n"}],"ResultType":"GitHubEvent"},"Macios":{"Events":[{"Id":"8995697839","Type":"IssuesEvent","CreatedAt":"2019-02-01T21:54:10","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/issues/5537","RelatedDescription":"Opened issue \"[rfc] Deduplicating identical files in our packages\" (#5537) at xamarin/xamarin-macios","RelatedBody":"Xamarin.iOS [1] supports 3 platforms (iOS, tvOS and watchOS) and two profiles (classic and unified) for iOS. This means several files (e.g. assemblies and debug symbols) are identical across them (whenever there's nothing platform specific in the files).\r\n\r\nIn theory only one of each is needed, the rest could be symlinks - saving disk space and reducing download sizes.\r\n\r\nFrom master\r\n```\r\ndu -chs _ios-build\r\n1.4G\t_ios-build\r\n1.4G\ttotal\r\n```\r\n\r\nnow finding duplicates\r\n```\r\nrdfind _ios-build\r\nNow scanning \"_ios-build\", found 1328 files.\r\nNow have 1328 files in total.\r\nRemoved 0 files due to nonunique device and inode.\r\nTotal size is 1488191506 bytes or 1 GiB\r\nRemoved 234 files due to unique sizes from list.1094 files left.\r\nNow eliminating candidates based on first bytes:removed 13 files from list.1081 files left.\r\nNow eliminating candidates based on last bytes:removed 3 files from list.1078 files left.\r\nNow eliminating candidates based on sha1 checksum:removed 141 files from list.937 files left.\r\nIt seems like you have 937 files that are not unique\r\nTotally, 143 MiB can be reduced.\r\nNow making results file results.txt\r\n```\r\n\r\nReplacing them\r\n```\r\nrdfind -makesymlinks true _ios-build\r\n...\r\n```\r\n\r\nand confirming size.\r\n```\r\ndu -chs _ios-build\r\n1.3G\t_ios-build\r\n1.3G\ttotal\r\n```\r\n\r\n[1] There's much code inside Xamarin.Mac (one platform) and the total size is smaller, but it still it looks interesting (even an higher %)\r\n\r\n```\r\n$ du -chs _mac-build/\r\n442M\t_mac-build/\r\n442M\ttotal\r\n```\r\n\r\n```\r\nrdfind _mac-build/\r\nNow scanning \"_mac-build\", found 612 files.\r\nNow have 612 files in total.\r\nRemoved 0 files due to nonunique device and inode.\r\nTotal size is 458954903 bytes or 438 MiB\r\nRemoved 195 files due to unique sizes from list.417 files left.\r\nNow eliminating candidates based on first bytes:removed 4 files from list.413 files left.\r\nNow eliminating candidates based on last bytes:removed 0 files from list.413 files left.\r\nNow eliminating candidates based on sha1 checksum:removed 337 files from list.76 files left.\r\nIt seems like you have 76 files that are not unique\r\nTotally, 67 MiB can be reduced.\r\nNow making results file results.txt\r\n```\r\n\r\nThis basically needs testing to ensure reality and theory share some intersection..."},{"Id":"8995407318","Type":"PullRequestEvent","CreatedAt":"2019-02-01T20:55:27","Actor":"spouliot","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5535","RelatedDescription":"Merged pull request \"[mtouch] Use the 'repl' assemblies when the interpreter is enabled\" (#5535) at xamarin/xamarin-macios","RelatedBody":""},{"Id":"8995370587","Type":"PullRequestEvent","CreatedAt":"2019-02-01T20:48:22","Actor":"chamons","Repository":"xamarin/xamarin-macios","Organization":"xamarin","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/xamarin/xamarin-macios/pull/5536","RelatedDescription":"Opened pull request \"[xm] Support UseHardenendRuntime in code signing\" (#5536) at xamarin/xamarin-macios","RelatedBody":""}],"ResultType":"GitHubEvent"},"Twitter":{"ResultType":"TwitterTimeline","Tweets":[{"Id":"1091455153868296201","CreatedAt":"2019-02-01T21:56:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing .NET Foundation Open Membership. We're making some big changes to expand the #dotNET Foundation. We’re i… https://t.co/iePYJUdean","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":55,"FavoriteCount":28,"RawContent":null},{"Id":"1091387761297362944","CreatedAt":"2019-02-01T17:28:13+00:00","UserScreenname":"xamarinhq","Text":"There's a new Xamarin.Essentials out. Today, @JamesMontemagno highlights API of the Week, App Information; which gi… https://t.co/WlU6hQHbNl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":62,"FavoriteCount":22,"RawContent":null},{"Id":"1090678537491808256","CreatedAt":"2019-01-30T18:30:01+00:00","UserScreenname":"xamarinhq","Text":"Check out this super-interesting use-case for creating complex UI using FastGrid for Xamarin.Forms with many cell v… https://t.co/SNff8XhdJ3","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":95,"FavoriteCount":42,"RawContent":null},{"Id":"1089964090339049472","CreatedAt":"2019-01-28T19:11:04+00:00","UserScreenname":"xamarinhq","Text":"Finding it a bit complex packaging your Xamarin. Android application? Here's some excellent info about Android’s D8… https://t.co/1qhLDuX3m6","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":70,"FavoriteCount":28,"RawContent":null},{"Id":"1088179823762161664","CreatedAt":"2019-01-23T21:01:02+00:00","UserScreenname":"xamarinhq","Text":"Just released: #VS2019 Preview 2 which includes tons of improvements for mobile devs to make you more productive wh… https://t.co/j4LgiuYkgc","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":154,"FavoriteCount":72,"RawContent":null},{"Id":"1086352280604065792","CreatedAt":"2019-01-18T19:59:01+00:00","UserScreenname":"xamarinhq","Text":"New Year – New podcast. Now on the Visual Studio Mobile Developer Podcast: Office Hours, Hockey App moving to… https://t.co/QtObsRI6av","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":20,"RawContent":null},{"Id":"1085961073902129152","CreatedAt":"2019-01-17T18:04:30+00:00","UserScreenname":"xamarinhq","Text":"As the .NET community expands so should the community standups... We are pleased to introduce the expansion of the… https://t.co/EDO0vChQlR","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":44,"FavoriteCount":22,"RawContent":null},{"Id":"1083829954515750923","CreatedAt":"2019-01-11T20:56:12+00:00","UserScreenname":"xamarinhq","Text":"...just posted on the Xamarin Blog, Andrei Nitescu shares one of his contributions to Xamarin.Forms, the bindable l… https://t.co/rp3eVPLbYl","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":104,"FavoriteCount":45,"RawContent":null},{"Id":"1083399709526503424","CreatedAt":"2019-01-10T16:26:34+00:00","UserScreenname":"xamarinhq","Text":"Our very first Mobile .NET #CommunityStandup will be live in about 30 minutes at 9am Pacific! @maddyleger1,… https://t.co/vmFHIKZTIt","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":58,"FavoriteCount":19,"RawContent":null},{"Id":"1080559862642282502","CreatedAt":"2019-01-02T20:22:01+00:00","UserScreenname":"xamarinhq","Text":"It’s a new year with tons of new and awesome Xamarin and .NET Community events coming this month. Get the full list… https://t.co/ZOykEyCRBN","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":59,"FavoriteCount":22,"RawContent":null},{"Id":"1075783769876033536","CreatedAt":"2018-12-20T16:03:32+00:00","UserScreenname":"xamarinhq","Text":"Introducing Xamarin.Essentials, a new library that abstracts native APIs into a set of cross-platform APIs giving y… https://t.co/EMM97iFY9o","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":270,"FavoriteCount":119,"RawContent":null},{"Id":"1072256672498966533","CreatedAt":"2018-12-10T22:28:06+00:00","UserScreenname":"xamarinhq","Text":"CarouselView is Here! Xamarin.Forms 4.0 now includes an entirely new point of view. ...as part of the upcoming rele… https://t.co/Vh8UMRM4ez","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":153,"FavoriteCount":69,"RawContent":null},{"Id":"1070425707770195968","CreatedAt":"2018-12-05T21:12:30+00:00","UserScreenname":"xamarinhq","Text":"Yesterday at Microsoft Connect(); 2018 we announced our plans &amp; preview for Xamarin.Forms 4.0. This post will give… https://t.co/oNXLJGsrQ8","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":144,"FavoriteCount":74,"RawContent":null},{"Id":"1070075277101944833","CreatedAt":"2018-12-04T22:00:01+00:00","UserScreenname":"xamarinhq","Text":"Today, at #MSFTConnect 2018, we have several exciting announcements about brand new capabilities and foundational i… https://t.co/olEK9QjR1j","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":54,"FavoriteCount":38,"RawContent":null},{"Id":"1069721699225088008","CreatedAt":"2018-12-03T22:35:02+00:00","UserScreenname":"xamarinhq","Text":"Here's what we have coming up this month for #Xamarin and #dotNET Developer Events in December:… https://t.co/oAMbLqXh9f","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":46,"FavoriteCount":18,"RawContent":null},{"Id":"1068601941339582469","CreatedAt":"2018-11-30T20:25:31+00:00","UserScreenname":"xamarinhq","Text":"Now announcing multi-targeting with Android Support Library v28. \n\n...but what is multi-targeting you ask? Well, no… https://t.co/oBJ1j9vP6P","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":94,"FavoriteCount":53,"RawContent":null},{"Id":"1067915081495846913","CreatedAt":"2018-11-28T22:56:10+00:00","UserScreenname":"xamarinhq","Text":"The Xamarin #Android team has been working hard on improving Build Performance &amp; Reliability in both #VS2017 v15.9… https://t.co/c4iSbZJDy9","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":83,"FavoriteCount":45,"RawContent":null},{"Id":"1063457672048058371","CreatedAt":"2018-11-16T15:44:01+00:00","UserScreenname":"xamarinhq","Text":"Announcing the release of Xamarin.Forms 3.4.0 w/ even more bug fixes and another new highly requested feature, an I… https://t.co/EJadLHYi73","Source":"<a href=\"https://prod1.sprinklr.com\" rel=\"nofollow\">Sprinklr Publishing</a>","RetweetCount":175,"FavoriteCount":105,"RawContent":null}]}},"RunOn":"2019-02-03T05:31:10.8173472Z","RunDurationInMilliseconds":2696}